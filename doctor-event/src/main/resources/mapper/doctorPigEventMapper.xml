<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorPigEvent">


    <resultMap id="DoctorPigEventMap" type="DoctorPigEvent">
        <id column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="org_name" property="orgName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="pig_id" property="pigId"/>
        <result column="pig_code" property="pigCode"/>
        <result column="origin" property="origin"/>
        <result column="is_auto" property="isAuto"/>
        <result column="event_at" property="eventAt"/>
        <result column="type" property="type"/>
        <result column="kind" property="kind"/>
        <result column="name" property="name"/>
        <result column="desc" property="desc"/>
        <result column="barn_id" property="barnId"/>
        <result column="barn_name" property="barnName"/>
        <result column="barn_type" property="barnType"/>
        <result column="rel_event_id" property="relEventId"/>
        <result column="rel_group_event_id" property="relGroupEventId"/>
        <result column="rel_pig_event_id" property="relPigEventId"/>
        <result column="change_type_id" property="changeTypeId"/>
        <result column="price" property="price"/>
        <result column="amount" property="amount"/>
        <result column="pig_status_before" property="pigStatusBefore"/>
        <result column="pig_status_after" property="pigStatusAfter"/>
        <result column="parity" property="parity"/>
        <result column="is_impregnation" property="isImpregnation"/>
        <result column="is_delivery" property="isDelivery"/>
        <result column="preg_days" property="pregDays"/>
        <result column="feed_days" property="feedDays"/>
        <result column="preg_check_result" property="pregCheckResult"/>
        <result column="dp_npd" property="dpnpd"/>
        <result column="pf_npd" property="pfnpd"/>
        <result column="pl_npd" property="plnpd"/>
        <result column="ps_npd" property="psnpd"/>
        <result column="py_npd" property="pynpd"/>
        <result column="pt_npd" property="ptnpd"/>
        <result column="jp_npd" property="jpnpd"/>
        <result column="npd" property="npd"/>
        <result column="group_id" property="groupId"/>
        <result column="farrow_weight" property="farrowWeight"/>
        <result column="live_count" property="liveCount"/>
        <result column="health_count" property="healthCount"/>
        <result column="weak_count" property="weakCount"/>
        <result column="mny_count" property="mnyCount"/>
        <result column="jx_count" property="jxCount"/>
        <result column="dead_count" property="deadCount"/>
        <result column="black_count" property="blackCount"/>
        <result column="wean_count" property="weanCount"/>
        <result column="wean_avg_weight" property="weanAvgWeight"/>
        <result column="current_mating_count" property="currentMatingCount"/>
        <result column="check_date" property="checkDate"/>
        <result column="matting_date" property="mattingDate"/>
        <result column="farrowing_date" property="farrowingDate"/>
        <result column="abortion_date" property="abortionDate"/>
        <result column="partwean_date" property="partweanDate"/>
        <result column="doctor_mate_type" property="doctorMateType"/>
        <result column="mate_type" property="mateType"/>
        <result column="boar_code" property="boarCode"/>
        <result column="out_id" property="outId"/>
        <result column="status" property="status"/>
        <result column="event_source" property="eventSource"/>
        <result column="extra" property="extra"/>
        <result column="source" property="source"/>
        <result column="breed_id" property="breedId"/>
        <result column="breed_name" property="breedName"/>
        <result column="breed_type_id" property="breedTypeId"/>
        <result column="breed_type_name" property="breedTypeName"/>
        <result column="boar_type" property="boarType"/>
        <result column="judge_preg_date" property="judgePregDate"/>
        <result column="quantity" property="quantity"/>
        <result column="weight" property="weight"/>
        <result column="customer_id" property="customerId"/>
        <result column="customer_name" property="customerName"/>
        <result column="basic_id" property="basicId"/>
        <result column="basic_name" property="basicName"/>
        <result column="vaccination_id" property="vaccinationId"/>
        <result column="vaccination_name" property="vaccinationName"/>
        <result column="remark" property="remark"/>
        <result column="operator_id" property="operatorId"/>
        <result column="operator_name" property="operatorName"/>
        <result column="creator_id" property="creatorId"/>
        <result column="creator_name" property="creatorName"/>
        <result column="updator_id" property="updatorId"/>
        <result column="updator_name" property="updatorName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">doctor_pig_events</sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        org_id,
        org_name,
        farm_id,
        farm_name,
        pig_id,
        pig_code,
        origin,
        is_auto,
        event_at,
        `type`,
        kind,
        `name`,
        `desc`,
        barn_id,
        barn_name,
        barn_type,
        rel_event_id,
        rel_group_event_id,
        rel_pig_event_id,
        change_type_id,
        price,
        amount,
        pig_status_before,
        pig_status_after,
        parity,
        is_impregnation,
        is_delivery,
        preg_days,
        feed_days,
        preg_check_result,
        dp_npd,
        pf_npd,
        pl_npd,
        ps_npd,
        py_npd,
        pt_npd,
        jp_npd,
        npd,
        group_id,
        farrow_weight,
        live_count,
        health_count,
        weak_count,
        mny_count,
        jx_count,
        dead_count,
        black_count,
        wean_count,
        wean_avg_weight,
        current_mating_count,
        check_date,
        matting_date,
        farrowing_date,
        abortion_date,
        partwean_date,
        doctor_mate_type,
        mate_type,
        boar_code,
        out_id,
        status,
        event_source,
        extra,
        source,
        breed_id,
        breed_name,
        breed_type_id,
        breed_type_name,
        boar_type,
        judge_preg_date,
        quantity,
        weight,
        customer_id,
        customer_name,
        basic_id,
        basic_name,
        vaccination_id,
        vaccination_name,
        remark,
        operator_id,
        operator_name,
        creator_id,
        creator_name,
        updator_id,
        updator_name,
        created_at,
        updated_at

    </sql>

    <sql id="vals">
        #{orgId},
        #{orgName},
        #{farmId},
        #{farmName},
        #{pigId},
        #{pigCode},
        #{origin},
        #{isAuto},
        #{eventAt},
        #{type},
        #{kind},
        #{name},
        #{desc},
        #{barnId},
        #{barnName},
        #{barnType},
        #{relEventId},
        #{relGroupEventId},
        #{relPigEventId},
        #{changeTypeId},
        #{price},
        #{amount},
        #{pigStatusBefore},
        #{pigStatusAfter},
        #{parity},
        #{isImpregnation},
        #{isDelivery},
        #{pregDays},
        #{feedDays},
        #{pregCheckResult},
        #{dpnpd},
        #{pfnpd},
        #{plnpd},
        #{psnpd},
        #{pynpd},
        #{ptnpd},
        #{jpnpd},
        #{npd},
        #{groupId},
        #{farrowWeight},
        #{liveCount},
        #{healthCount},
        #{weakCount},
        #{mnyCount},
        #{jxCount},
        #{deadCount},
        #{blackCount},
        #{weanCount},
        #{weanAvgWeight},
        #{currentMatingCount},
        #{checkDate},
        #{mattingDate},
        #{farrowingDate},
        #{abortionDate},
        #{partweanDate},
        #{doctorMateType},
        #{mateType},
        #{boarCode},
        #{outId},
        #{status},
        #{eventSource},
        #{extra},
        #{source},
        #{breedId},
        #{breedName},
        #{breedTypeId},
        #{breedTypeName},
        #{boarType},
        #{judgePregDate},
        #{quantity},
        #{weight},
        #{customerId},
        #{customerName},
        #{basicId},
        #{basicName},
        #{vaccinationId},
        #{vaccinationName},
        #{remark},
        #{operatorId},
        #{operatorName},
        #{creatorId},
        #{creatorName},
        #{updatorId},
        #{updatorName},
        now(),
        now()

    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="orgId != null">AND org_id = #{orgId}</if>
        <if test="orgName != null">AND org_name = #{orgName}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="farmName != null">AND farm_name = #{farmName}</if>
        <if test="pigId != null">AND pig_id = #{pigId}</if>
        <if test="pigCode != null">AND pig_code = #{pigCode}</if>
        <if test="origin != null">AND origin = #{origin}</if>
        <if test="pigCodeFuzzy != null">AND pig_code LIKE concat('%',#{pigCodeFuzzy},'%')</if>
        <if test="isAuto != null">AND is_auto = #{isAuto}</if>
        <if test="beginDate != null">AND <![CDATA[ event_at >= #{beginDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        <if test="type != null">AND `type` = #{type}</if>
        <if test="kind != null">AND kind = #{kind}</if>
        <if test="name != null">AND `name` = #{name}</if>
        <if test="desc != null">AND `desc` = #{desc}</if>
        <if test="barnId != null">AND barn_id = #{barnId}</if>
        <if test="barnName != null">AND barn_name = #{barnName}</if>
        <if test="barnType != null">AND barn_Type = #{barnType}</if>
        <if test="relEventId != null">AND rel_event_id = #{relEventId}</if>
        <if test="relGroupEventId != null">AND rel_group_event_id = #{relGroupEventId}</if>
        <if test="relPigEventId != null">AND rel_pig_event_id = #{relPigEventId}</if>
        <if test="changeTypeId != null">AND change_type_id = #{changeTypeId}</if>
        <if test="price != null">AND price = #{price}</if>
        <if test="amount != null">AND amount = #{amount}</if>
        <if test="pigStatusBefore != null">AND pig_status_before = #{pigStatusBefore}</if>
        <if test="pigStatusAfter != null">AND pig_status_after = #{pigStatusAfter}</if>
        <if test="parity != null">AND parity = #{parity}</if>
        <if test="isImpregnation != null">AND is_impregnation = #{isImpregnation}</if>
        <if test="isDelivery != null">AND is_delivery = #{isDelivery}</if>
        <if test="pregDays != null">AND preg_days = #{pregDays}</if>
        <if test="feedDays != null">AND feed_days = #{feedDays}</if>
        <if test="pregCheckResult != null">AND preg_check_result = #{pregCheckResult}</if>
        <if test="dpnpd != null">AND dp_npd = #{dpnpd}</if>
        <if test="pfnpd != null">AND pf_npd = #{pfnpd}</if>
        <if test="plnpd != null">AND pl_npd = #{plnpd}</if>
        <if test="psnpd != null">AND ps_npd = #{psnpd}</if>
        <if test="pynpd != null">AND py_npd = #{pynpd}</if>
        <if test="ptnpd != null">AND pt_npd = #{ptnpd}</if>
        <if test="jpnpd != null">AND jp_npd = #{jpnpd}</if>
        <if test="npd != null">AND npd = #{npd}</if>
        <if test="groupId != null">AND group_id = #{groupId}</if>
        <if test="farrowWeight != null">AND farrow_weight = #{farrowWeight}</if>
        <if test="liveCount != null">AND live_count = #{liveCount}</if>
        <if test="healthCount != null">AND health_count = #{healthCount}</if>
        <if test="weakCount != null">AND weak_count = #{weakCount}</if>
        <if test="mnyCount != null">AND mny_count = #{mnyCount}</if>
        <if test="jxCount != null">AND jx_count = #{jxCount}</if>
        <if test="deadCount != null">AND dead_count = #{deadCount}</if>
        <if test="blackCount != null">AND black_count = #{blackCount}</if>
        <if test="weanCount != null">AND wean_count = #{weanCount}</if>
        <if test="weanAvgWeight != null">AND wean_avg_weight = #{weanAvgWeight}</if>
        <if test="currentMatingCount != null">AND current_mating_count = #{currentMatingCount}</if>
        <if test="checkDate != null">AND check_date = #{checkDate}</if>
        <if test="mattingDate != null">AND matting_date = #{mattingDate}</if>
        <if test="farrowingDate != null">AND farrowing_date = #{farrowingDate}</if>
        <if test="abortionDate != null">AND abortion_date = #{abortionDate}</if>
        <if test="partweanDate != null">AND partwean_date = #{partweanDate}</if>
        <if test="doctorMateType != null">AND doctor_mate_type = #{doctorMateType}</if>
        <if test="mateType != null">AND mate_type = #{mateType}</if>
        <if test="boarCode != null">AND boar_code = #{boarCode}</if>
        <if test="outId != null">AND out_id = #{outId}</if>
        <if test="extra != null">AND extra = #{extra}</if>
        <if test="source != null">AND source = #{source}</if>
        <if test="breedId != null">AND breed_id = #{breedId}</if>
        <if test="breedName != null">AND breed_name = #{breedName}</if>
        <if test="breedTypeId != null">AND breed_type_id = #{breedTypeId}</if>
        <if test="breedTypeName != null">AND breed_type_name = #{breedTypeName}</if>
        <if test="boarType != null">AND boar_type = #{boarType}</if>
        <if test="judgePregDate != null">AND judge_preg_date = #{judgePregDate}</if>
        <if test="quantity != null">AND quantity = #{quantity}</if>
        <if test="weight != null">AND weight = #{weight}</if>
        <if test="customerId != null">AND customer_id = #{customerId}</if>
        <if test="customerName != null">AND customer_name = #{customerName}</if>
        <if test="basicId != null">AND basic_id = #{basicId}</if>
        <if test="basicName != null">AND basic_name = #{basicName}</if>
        <if test="vaccinationId != null">AND vaccination_id = #{vaccinationId}</if>
        <if test="vaccinationName != null">AND vaccination_name = #{vaccinationName}</if>
        <if test="eventSource != null">AND event_source = #{eventSource}</if>
        <if test="remark != null">AND remark = #{remark}</if>
        <if test="operatorId != null">AND operator_id = #{operatorId}</if>
        <if test="operatorName != null">AND operator_name = #{operatorName}</if>
        <if test="creatorId != null">AND creator_id = #{creatorId}</if>
        <if test="creatorName != null">AND creator_name = #{creatorName}</if>
        <if test="updatorId != null">AND updator_id = #{updatorId}</if>
        <if test="updatorName != null">AND updator_name = #{updatorName}</if>
        <if test="types != null &amp;&amp; types.size() > 0">
            AND `type` IN
            <foreach collection="types" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <if test="farmIds != null &amp;&amp; farmIds.size() > 0">
            AND `farm_id` IN
            <foreach collection="farmIds" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <if test="barnTypes != null &amp;&amp; barnTypes.size() > 0">
            AND `barn_type` IN
            <foreach collection="barnTypes" item="barnType" open="(" close=")" separator=",">
                #{barnType}
            </foreach>
        </if>
        <if test="eventSources !=null and eventSources.size()>0">
            AND (`event_source` IN
            <foreach collection="eventSources" item="source" open="(" close=")" separator=",">
                #{source}
            </foreach>
            OR (
            `event_source` NOT IN
            <foreach collection="eventSources" item="source" open="(" close=")" separator=",">
                #{source}
            </foreach>
            <if test="beginDate != null">
                AND <![CDATA[ event_at >= #{beginDate} ]]>
            </if>
            AND <![CDATA[ event_at <= #{endDate} ]]>
            )
            )
        </if>
        <if test="createdAtStart != null">AND created_at &gt;= #{createdAtStart}</if>
        <if test="createdAtEnd != null">AND created_at &lt;= #{createdAtEnd}</if>
        AND status =1
    </sql>

    <insert id="create" parameterType="DoctorPigEvent" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES (<include refid="vals"/>)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.orgId},
            #{item.orgName},
            #{item.farmId},
            #{item.farmName},
            #{item.pigId},
            #{item.pigCode},
            #{item.origin},
            #{item.isAuto},
            #{item.eventAt},
            #{item.type},
            #{item.kind},
            #{item.name},
            #{item.desc},
            #{item.barnId},
            #{item.barnName},
            #{item.barnType},
            #{item.relEventId},
            #{item.relGroupEventId},
            #{item.relPigEventId},
            #{item.changeTypeId},
            #{item.price},
            #{item.amount},
            #{item.pigStatusBefore},
            #{item.pigStatusAfter},
            #{item.parity},
            #{item.isImpregnation},
            #{item.isDelivery},
            #{item.pregDays},
            #{item.feedDays},
            #{item.pregCheckResult},
            #{item.dpnpd},
            #{item.pfnpd},
            #{item.plnpd},
            #{item.psnpd},
            #{item.pynpd},
            #{item.ptnpd},
            #{item.jpnpd},
            #{item.npd},
            #{item.groupId},
            #{item.farrowWeight},
            #{item.liveCount},
            #{item.healthCount},
            #{item.weakCount},
            #{item.mnyCount},
            #{item.jxCount},
            #{item.deadCount},
            #{item.blackCount},
            #{item.weanCount},
            #{item.weanAvgWeight},
            #{item.currentMatingCount},
            #{item.checkDate},
            #{item.mattingDate},
            #{item.farrowingDate},
            #{item.abortionDate},
            #{item.partweanDate},
            #{item.doctorMateType},
            #{item.mateType},
            #{item.boarCode},
            #{item.outId},
            #{item.status},
            #{item.eventSource},
            #{item.extra},
            #{item.source},
            #{item.breedId},
            #{item.breedName},
            #{item.breedTypeId},
            #{item.breedTypeName},
            #{item.boarType},
            #{item.judgePregDate},
            #{item.quantity},
            #{item.weight},
            #{item.customerId},
            #{item.customerName},
            #{item.basicId},
            #{item.basicName},
            #{item.vaccinationId},
            #{item.vaccinationName},
            #{item.remark},
            #{item.operatorId},
            #{item.operatorName},
            #{item.creatorId},
            #{item.creatorName},
            #{item.updatorId},
            #{item.updatorName},
            now(),
            now()

            )
        </foreach>
    </insert>

    <delete id="delete" parameterType="Long">
        DELETE FROM
        <include refid="tb"/>
        WHERE
        id=#{id}
    </delete>

    <select id="findById" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="findFirstPigEvent" parameterType="map" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId} and event_at = (
        select min(event_at) from
        <include refid="tb"/>
        where pig_id = #{pigId} AND status =1
        <if test="fromDate != null">
            <![CDATA[ and event_at >= #{fromDate} ]]>
        </if>
        ) AND status =1
        limit 1
    </select>

    <select id="countByBarnId" parameterType="long" resultType="long">
        select count(id) from
        <include refid="tb"/>
        where `barn_id` = #{barnId} AND status =1
    </select>

    <select id="list" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="queryAllFarmInEvent" resultType="long">
        select distinct(farm_id) from
        <include refid="tb"/>
        WHERE status =1
    </select>

    <select id="countPigEventTypeDuration" parameterType="map" resultType="long">
        SELECT count(1) FROM
        <include refid="tb"/>
        <where>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="eventType != null">AND `type` = #{eventType}</if>
            <if test="startDate != null">AND created_at &gt;= #{startDate}</if>
            <if test="endDate != null">AND created_at &lt;= #{endDate}</if>
            AND status =1
        </where>
    </select>

    <select id="queryLastPigEventById" parameterType="long" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId} AND status =1
        order by event_at desc, id desc limit 1;
    </select>

    <select id="queryLastManualPigEventById" parameterType="long" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId} AND is_auto = 0 AND status =1
        order by DATE_FORMAT(event_at,'%Y-%m-%d') desc, id desc limit 1;
    </select>

    <select id="queryLastPigEventInWorkflow" parameterType="map" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId}
        <if test="types != null &amp;&amp; types.size() > 0">
            AND `type` IN
            <foreach collection="types" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        AND status =1
        order by event_at desc ,id DESC limit 1;
    </select>

    <select id="queryLastFirstMate" parameterType="map" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId}
        and parity = #{parity}
        and current_mating_count = #{currentMatingCount}
        and type = ${type}
        AND status =1
        order by event_at desc ,id DESC limit 1;
    </select>

    <select id="queryLastEvent" parameterType="map" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        where pig_id = #{pigId}
        and type = ${type}
        AND status =1
        order by event_at desc ,id DESC limit 1;
    </select>

    <select id="queryAllEventsByPigId" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status =1
        order by event_at DESC , id DESC
    </select>

    <select id="queryAllEventsByPigIdForASC" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status =1
        order by DATE_FORMAT(event_at,'%Y-%m-%d') ASC , id ASC
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY DATE_FORMAT(event_at,'%Y-%m-%d')
            <if test="ordered == 0">
                DESC
            </if>
            , id
            <if test="ordered == 0">
                DESC
            </if>
        </if>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getabosum" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        sum(farrow_weight) farrowWeight,sum(live_count) liveCount,sum(health_count) healthCount,sum(weak_count) weakCount,sum(dead_count) deadCount,sum(black_count) blackCount,sum(mny_count) mnyCount,sum(jx_count) jxCount
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY DATE_FORMAT(event_at,'%Y-%m-%d')
            <if test="ordered == 0">
                DESC
            </if>
            , id
            <if test="ordered == 0">
                DESC
            </if>
        </if>
    </select>

    <select id="getweansum" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        sum(wean_count) weanCount,sum(health_count) healthCount,sum(weak_count) weakCount
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY DATE_FORMAT(event_at,'%Y-%m-%d')
            <if test="ordered == 0">
                DESC
            </if>
            , id
            <if test="ordered == 0">
                DESC
            </if>
        </if>
    </select>

    <select id="getfosterssum" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        sum(quantity) quantity
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY DATE_FORMAT(event_at,'%Y-%m-%d')
            <if test="ordered == 0">
                DESC
            </if>
            , id
            <if test="ordered == 0">
                DESC
            </if>
        </if>
    </select>

    <select id="getpigletssum" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        sum(quantity) quantity,sum(weight) weight,sum(amount) amount
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY DATE_FORMAT(event_at,'%Y-%m-%d')
            <if test="ordered == 0">
                DESC
            </if>
            , id
            <if test="ordered == 0">
                DESC
            </if>
        </if>
    </select>

    <update id="updatePigEventFarmIdByPigId" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now()
            <if test="farmId != null">,`farm_id` = #{farmId}</if>
            <if test="farmName != null">,`farm_name` = #{farmName}</if>
        </set>
        WHERE `pig_id` = #{pigId} AND status =1
    </update>

    <!--<update id="updateAmountPigEventByPigId" parameterType="map">-->
        <!--UPDATE-->
        <!--<include refid="tb"/>-->
        <!--SET amount = #{amount}-->
        <!--WHERE `pig_id` = #{pigId} AND status =1-->
    <!--</update>-->

    <update id="update" parameterType="DoctorPigEvent">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">org_id = #{orgId},</if>
            <if test="orgName != null">org_name = #{orgName},</if>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="farmName != null">farm_name = #{farmName},</if>
            <if test="pigId != null">pig_id = #{pigId},</if>
            <if test="pigCode != null">pig_code = #{pigCode},</if>
            <if test="origin != null">origin = #{origin},</if>
            <if test="isAuto != null">is_auto = #{isAuto},</if>
            <if test="eventAt != null">event_at = #{eventAt},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="kind != null">kind = #{kind},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="desc != null">`desc` = #{desc},</if>
            <if test="barnId != null">barn_id = #{barnId},</if>
            <if test="barnName != null">barn_name = #{barnName},</if>
            <if test="barnType != null">barn_type = #{barnType},</if>
            <if test="relEventId != null">rel_event_id = #{relEventId},</if>
            <if test="relGroupEventId != null">rel_group_event_id = #{relGroupEventId},</if>
            <if test="relPigEventId != null">rel_pig_event_id = #{relPigEventId},</if>
            <if test="changeTypeId != null">change_type_id = #{changeTypeId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="pigStatusBefore != null">pig_status_before = #{pigStatusBefore},</if>
            <if test="pigStatusAfter != null">pig_status_after = #{pigStatusAfter},</if>
            <if test="parity != null">parity = #{parity},</if>
            <if test="isImpregnation != null">is_impregnation = #{isImpregnation},</if>
            <if test="isDelivery != null">is_delivery = #{isDelivery},</if>
            <if test="pregDays != null">preg_days = #{pregDays},</if>
            <if test="feedDays != null">feed_days = #{feedDays},</if>
            <if test="pregCheckResult != null">preg_check_result = #{pregCheckResult},</if>
            <if test="dpnpd != null">dp_npd = #{dpnpd},</if>
            <if test="pfnpd != null">pf_npd = #{pfnpd},</if>
            <if test="plnpd != null">pl_npd = #{plnpd},</if>
            <if test="psnpd != null">ps_npd = #{psnpd},</if>
            <if test="pynpd != null">py_npd = #{pynpd},</if>
            <if test="ptnpd != null">pt_npd = #{ptnpd},</if>
            <if test="jpnpd != null">jp_npd = #{jpnpd},</if>
            <if test="npd != null">npd = #{npd},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="farrowWeight != null">farrow_weight = #{farrowWeight},</if>
            <if test="liveCount != null">live_count = #{liveCount},</if>
            <if test="healthCount != null">health_count = #{healthCount},</if>
            <if test="weakCount != null">weak_count = #{weakCount},</if>
            <if test="mnyCount != null">mny_count = #{mnyCount},</if>
            <if test="jxCount != null">jx_count = #{jxCount},</if>
            <if test="deadCount != null">dead_count = #{deadCount},</if>
            <if test="blackCount != null">black_count = #{blackCount},</if>
            <if test="weanCount != null">wean_count = #{weanCount},</if>
            <if test="weanAvgWeight != null">wean_avg_weight = #{weanAvgWeight},</if>
            <if test="currentMatingCount != null">current_mating_count = #{currentMatingCount},</if>
            <if test="checkDate != null">check_date = #{checkDate},</if>
            <if test="mattingDate != null">matting_date = #{mattingDate},</if>
            <if test="farrowingDate != null">farrowing_date = #{farrowingDate},</if>
            <if test="abortionDate != null">abortion_date = #{abortionDate},</if>
            <if test="partweanDate != null">partwean_date = #{partweanDate},</if>
            <if test="doctorMateType != null">doctor_mate_type = #{doctorMateType},</if>
            <if test="mateType != null">mate_type = #{mateType},</if>
            <if test="boarCode != null">boar_code = #{boarCode},</if>
            <if test="outId != null">out_id = #{outId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="eventSource != null">event_source = #{eventSource},</if>
            <if test="source != null">source = #{source},</if>
            <if test="breedId != null">breed_id = #{breedId},</if>
            <if test="breedName != null">breed_name = #{breedName},</if>
            <if test="breedTypeId != null">breed_type_id = #{breedTypeId},</if>
            <if test="breedTypeName != null">breed_type_name = #{breedTypeName},</if>
            <if test="boarType != null">boar_type = #{boarType},</if>
            <if test="judgePregDate != null">judge_preg_date = #{judgePregDate},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="customerName != null">customer_name = #{customerName},</if>
            <if test="basicId != null">basic_id = #{basicId},</if>
            <if test="basicName != null">basic_name = #{basicName},</if>
            <if test="vaccinationId != null">vaccination_id = #{vaccinationId},</if>
            <if test="vaccinationName != null">vaccination_name = #{vaccinationName},</if>
            <if test="extra != null">extra = #{extra},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="operatorId != null">operator_id = #{operatorId},</if>
            <if test="operatorName != null">operator_name = #{operatorName},</if>
            <if test="creatorId != null">creator_id = #{creatorId},</if>
            <if test="creatorName != null">creator_name = #{creatorName},</if>
            <if test="updatorId != null">updator_id = #{updatorId},</if>
            <if test="updatorName != null">updator_name = #{updatorName},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <select id="findByFarmIdAndKind" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE farm_id = #{farmId} AND kind = ${kind} AND status = 1
    </select>

    <select id="findByFarmIdAndKindAndEventTypes" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="kind != null">AND kind = #{kind}</if>
            <if test="eventTypes != null &amp;&amp; eventTypes.size() > 0">
                AND `type` IN
                <foreach collection="eventTypes" item="i" open="(" close=")" separator=",">
                    #{i}
                </foreach>
            </if>
            AND status = 1
        </where>
    </select>


    <update id="updateRelEventId" parameterType="DoctorPigEvent">
        UPDATE
        <include refid="tb"/>
        SET rel_event_id = #{relEventId}, updated_at = now()
        WHERE id=#{id}
    </update>

    <select id="findByIds" parameterType="list" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `id` IN
        <foreach collection="list" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
    </select>

    <delete id="deleteByFarmId" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE farm_id=#{farmId} AND status = 1
    </delete>

    <select id="findByDateRange" parameterType="map" resultMap="DoctorPigEventMap">
        select
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        where 1 = 1
        <if test="beginDate != null">
            <![CDATA[ and event_at >= #{beginDate} ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[ and event_at < #{endDate} ]]>
        </if>
        AND status = 1
        limit 5000
    </select>

    <update id="updates" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update
            <include refid="tb"/>
            <set>
                org_id = #{item.orgId},
                org_name = #{item.orgName},
                farm_id = #{item.farmId},
                farm_name = #{item.farmName},
                pig_id = #{item.pigId},
                pig_code = #{item.pigCode},
                origin = #{item.origin},
                is_auto = #{item.isAuto},
                event_at = #{item.eventAt},
                `type` = #{item.type},
                kind = #{item.kind},
                `name` = #{item.name},
                `desc` = #{item.desc},
                barn_id = #{item.barnId},
                barn_name = #{item.barnName},
                barn_type = #{item.barnType},
                rel_event_id = #{item.relEventId},
                rel_group_event_id = #{item.relGroupEventId},
                rel_pig_event_id = #{item.relPigEventId},
                change_type_id = #{item.changeTypeId},
                price = #{item.price},
                amount = #{item.amount},
                pig_status_before = #{item.pigStatusBefore},
                pig_status_after = #{item.pigStatusAfter},
                parity = #{item.parity},
                is_impregnation = #{item.isImpregnation},
                is_delivery = #{item.isDelivery},
                preg_days = #{item.pregDays},
                feed_days = #{item.feedDays},
                preg_check_result = #{item.pregCheckResult},
                dp_npd = #{item.dpnpd},
                pf_npd = #{item.pfnpd},
                pl_npd = #{item.plnpd},
                ps_npd = #{item.psnpd},
                py_npd = #{item.pynpd},
                pt_npd = #{item.ptnpd},
                jp_npd = #{item.jpnpd},
                npd = #{item.npd},
                group_id = #{item.groupId},
                farrow_weight = #{item.farrowWeight},
                live_count = #{item.liveCount},
                health_count = #{item.healthCount},
                weak_count = #{item.weakCount},
                mny_count = #{item.mnyCount},
                jx_count = #{item.jxCount},
                dead_count = #{item.deadCount},
                black_count = #{item.blackCount},
                wean_count = #{item.weanCount},
                wean_avg_weight = #{item.weanAvgWeight},
                current_mating_count = #{item.currentMatingCount},
                check_date = #{item.checkDate},
                matting_date = #{item.mattingDate},
                farrowing_date = #{item.farrowingDate},
                abortion_date = #{item.abortionDate},
                partwean_date = #{item.partweanDate},
                doctor_mate_type = #{item.doctorMateType},
                mate_type = #{item.mateType},
                boar_code = #{item.boarCode},
                out_id = #{item.outId},
                status = #{item.status},
                event_source = #{item.eventSource},
                extra = #{item.extra},
                source = #{item.source},
                breed_id = #{item.breedId},
                breed_name = #{item.breedName},
                breed_type_id = #{item.breedTypeId},
                breed_type_name = #{item.breedTypeName},
                boar_type = #{item.boarType},
                judge_preg_date = #{item.judgePregDate},
                quantity = #{item.quantity},
                weight = #{item.weight},
                customer_id = #{item.customerId},
                customer_name = #{item.customerName},
                basic_id = #{item.basicId},
                basic_name = #{item.basicName},
                vaccination_id = #{item.vaccinationId},
                vaccination_name = #{item.vaccinationName},
                remark = #{item.remark},
                operator_id = #{item.operatorId},
                operator_name = #{item.operatorName},
                creator_id = #{item.creatorId},
                creator_name = #{item.creatorName},
                updator_id = #{item.updatorId},
                updator_name = #{item.updatorName},
                created_at = #{item.createdAt},
                updated_at = now()
            </set>
            where id = #{item.id}
        </foreach>
    </update>

    <select id="findOperators" parameterType="map" resultType="io.terminus.doctor.event.dto.event.DoctorEventOperator">
        SELECT distinct operator_name AS operatorName, operator_id AS operatorId
        FROM
        <include refid="tb"/>
        WHERE operator_id IS NOT NULL
        <if test="types != null &amp;&amp; types.size() > 0">
            AND `type` IN
            <foreach collection="types" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <if test="farmId != null">AND `farm_id` = #{farmId}</if>
        <if test="kind != null">AND `kind` = #{kind}</if>
        AND status = 1
    </select>

    <select id="findByRelGroupEventId" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE rel_group_event_id = #{relGroupEventId} AND status = 1
    </select>

    <select id="findByRelPigEventId" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE rel_pig_event_id = #{relPigEventId} AND status = 1
    </select>

    <select id="queryLastPigEventByPigIds" parameterType="list" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id IN
        <foreach collection="list" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
        AND status = 1
        ORDER BY event_at DESC ,id DESC limit 1
    </select>

    <select id="findByPigId" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status = 1
    </select>

    <select id="addWeanEventAfterFosAndPigLets" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `type` != 16 AND pig_status_before != 9 AND status = 1 AND pig_status_after = 9 AND
        <![CDATA[ created_at < '2016-11-03 20:00:00' ]]>
    </select>

    <select id="canRollbackEvent" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by event_at desc ,id DESC limit 1;
    </select>

    <update id="updatePigEvents" parameterType="DoctorPigEvent">
        UPDATE
        <include refid="tb"/>
        SET
        `name` = #{name}
        <if test="desc != null">,`desc` = #{desc}</if>
        <if test="extra != null">, extra = #{extra}</if>
        WHERE
        1=1
        <if test="type != null">AND `type` = #{type}</if>
        <if test="id != null">AND `id` = #{id}</if>

    </update>

    <select id="findByFarmIdAndTypeAndDate" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE farm_id = #{farmId} AND `type` = #{type} AND status = 1
        <if test="startAt != null">AND event_at &gt;= #{startAt}</if>
        <if test="endAt != null">AND event_at &lt;= #{endAt}</if>
    </select>

    <update id="updatePigCode" parameterType="map">
        update
        <include refid="tb"/>
        set pig_code = #{pigCode}, updated_at=now() where pig_id = #{pigId} AND status = 1
    </update>

    <select id="querySowParityAvg" parameterType="long" resultType="map">
        SELECT
        ifnull(round(AVG (live_count), 2), 0) avgPigLetCount,
        ifnull(round(AVG (wean_count), 2), 0) avgWeanCount,
        ifnull(round(sum(farrow_weight) / sum(live_count), 2), 0) avgBirthWeight,
        ifnull(round(AVG (wean_avg_weight), 2), 0) avgWeanWeight,
        ifnull(round(AVG (health_count), 2), 0) avgHealthCount,
        ifnull(round(AVG (weak_count), 2), 0) avgWeakCount,
        ifnull(round(AVG (dead_count), 2), 0) avgDeadCount,
        ifnull(round(AVG (mny_count+jx_count+black_count), 2), 0) avgMujiCount
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status = 1
    </select>

    <select id="limitPigEventOrderByEventAt" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status = 1
        ORDER BY event_at DESC, id DESC
        limit #{limit}
    </select>

    <select id="findByGroupId" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE group_id = #{groupId} AND status = 1
    </select>

    <select id="findLastByTypeAndDate" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId}
        AND `type` = #{type}
        AND event_at &lt;= #{eventAt}
        AND status = 1
        ORDER BY event_at DESC
        limit 1
    </select>

    <select id="findFollowEvents" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND status = 1 AND id > #{eventId}
        ORDER BY id ASC
    </select>

    <update id="updateEventsStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}
        WHERE
        `id` IN
        <foreach collection="ids" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
    </update>

    <select id="findEventById" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="findLastEventExcludeTypes" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE status = 1
        AND pig_id = #{pigId}
        <if test="types != null &amp;&amp; types.size() > 0">
            AND `type` NOT IN
            <foreach collection="types" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        ORDER BY event_at DESC, id DESC limit 1
    </select>

    <select id="findPigIdsBy" parameterType="map" resultType="Long">
        SELECT pig_id FROM
        <include refid="tb"/>
        WHERE 1=1
        <include refid="criteria"/>
    </select>

    <update id="updateFarmName" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET farm_name = #{farmName}
        WHERE
        farm_id = #{farmId}
    </update>

    <select id="queryWeansWithoutGroupWean" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `type` = 16
        AND status = 1
        AND group_id is not null
        <if test="farmId != -1">AND farm_id = #{farmId}</if>
        <if test="excludeIds != null &amp;&amp; excludeIds.size() > 0">
            AND id NOT IN
            <foreach collection="excludeIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        limit #{offset}, #{limit}
    </select>

    <select id="queryOldAddWeanEvent" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        type = 16
        AND status = 1
        AND extra = '{"#":"#"}'
    </select>

    <select id="queryTriggerWeanEvent" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        type = 16
        AND status = 1
        AND is_auto = 1
        AND extra is NULL
    </select>

    <select id="countNpdWeanEvent" parameterType="map" resultType="long">
        SELECT ifnull(count( * ), 0)
        FROM (
        SELECT pig_id
        FROM
        <include refid="tb"/>
        WHERE
        1 = 1
        <if test="orgId != null">AND org_id = #{orgId}</if>
        <if test="orgName != null">AND org_name = #{orgName}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="farmName != null">AND farm_name = #{farmName}</if>
        <if test="pigId != null">AND pig_id = #{pigId}</if>
        <if test="pigCode != null">AND pig_code LIKE concat('%',#{pigCode},'%')</if>
        <if test="isAuto != null">AND is_auto = #{isAuto}</if>
        <if test="beginDate != null">AND <![CDATA[ event_at >= #{beginDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        <if test="type != null">AND type = #{type}</if>
        AND kind = 1
        GROUP BY pig_id
        ) number , `doctor_pig_tracks` tracks
        WHERE number.pig_id = tracks.`pig_id`
        <if test="barnId != null">AND tracks.current_barn_id = #{barnId}</if>
        <if test="barnName != null">AND tracks.current_barn_name = #{barnName}</if>

    </select>

    <select id="sumPngWeanEvent" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorNpdExportDto">

        select dd.pig_id as pigId,dd.pig_code as pigCode,tracks.current_barn_name as
        barnName,dd.dpnpd,dd.pfnpd,dd.plnpd,dd.ptnpd,dd.jpnpd,dd.npd
        from (
        SELECT pig_id,
        pig_code,
        sum(dp_npd) as dpnpd,
        sum(pf_npd) as pfnpd,
        sum(pl_npd) as plnpd,
        sum(ps_npd) as psnpd,
        sum(pt_npd) as ptnpd,
        sum(jp_npd) as jpnpd,
        sum(npd) as npd
        FROM `doctor_pig_events`
        WHERE
        kind = 1
        <if test="orgId != null">AND org_id = #{orgId}</if>
        <if test="orgName != null">AND org_name = #{orgName}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="farmName != null">AND farm_name = #{farmName}</if>
        <if test="pigId != null">AND pig_id = #{pigId}</if>
        <if test="pigCode != null">AND pig_code LIKE concat('%',#{pigCode},'%')</if>
        <if test="isAuto != null">AND is_auto = #{isAuto}</if>
        <if test="beginDate != null">AND <![CDATA[ event_at >= #{beginDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        <if test="type != null">AND type = #{type}</if>
        GROUP BY pig_id,pig_code
        ) dd , `doctor_pig_tracks` tracks
        WHERE
        dd.pig_id = tracks.`pig_id`
        <if test="barnId != null">AND tracks.current_barn_id = #{barnId}</if>
        <if test="barnName != null">AND tracks.current_barn_name = #{barnName}</if>
        limit #{offset}, #{limit}
    </select>

    <select id="countSales" parameterType="map" resultType="long">
        SELECT count(*)
        FROM v_doctor_sales
        WHERE 1 = 1
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="batch != null">AND batch_no = #{batch}</if>
        <if test="barnId != null">AND barn_id = #{barnId}</if>
        <if test="barnName != null">AND barn_name = #{barnName}</if>
        <if test="pigTypeId != null">AND pig_type = #{pigTypeId}</if>
        <if test="client != null">AND customer_id = #{client}</if>
        <if test="startDate != null">AND <![CDATA[ event_at >= #{startDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
    </select>

    <select id="findSalesEvent" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorPigSalesExportDto">
        SELECT
        batch_no AS batch,
        barn_name AS barnName,
        event_at AS salesDate,
        quantity AS pigNumber,
        pig_type_name AS pigTypeName,
        weight AS pigWeight,
        price AS pigPrice,
        day_age AS ages,
        amount AS pigAmount,
        customer_name AS client
        FROM v_doctor_sales
        WHERE 1 =1
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="batch != null">AND batch_no = #{batch}</if>
        <if test="barnId != null">AND barn_id = #{barnId}</if>
        <if test="barnName != null">AND barn_name = #{barnName}</if>
        <if test="pigTypeId != null">AND pig_type = #{pigTypeId}</if>
        <if test="client != null">AND customer_id = #{client}</if>
        <if test="startDate != null">AND <![CDATA[ event_at >= #{startDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        limit #{offset}, #{limit}
    </select>

    <select id="findSales" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorPigSalesExportDto">
        SELECT
        a.event_at AS salesDate,
        a.customer_id as customerId,
        c.name as client,
        b.pig_type as pigType,
        '种猪' AS pigTypeName,
        a.barn_name AS barnName,
        1 AS pigNumber,
        DATEDIFF(a.event_at,b.birth_date) as ages,
        ifnull(a.weight, 0) AS pigWeight,
        ifnull(a.amount / a.weight,0) AS pigPrice,
        ifnull(a.amount , 0) AS pigAmount,
        b.breed_id as breedId,
        b.breed_name as breedName
        from doctor_pig_events a left join doctor_pigs b on a.pig_id = b.id
        left join doctor_customers c on a.customer_id = c.id
        where a.type = 6
        and a.change_type_id = 109
        and b.pig_type in ( 1,2 )
        <if test="breedsId != null">AND b.breed_id = #{breedsId}</if>
        <if test="farmId != null">AND a.farm_id = #{farmId}</if>
        <if test="batch != null">AND a.pig_code = #{batch}</if>
        <if test="barnId != null">AND a.barn_id = #{barnId}</if>
        <if test="barnName != null">AND a.barn_name = #{barnName}</if>
        <if test="client != null">AND  a.customer_id = #{client}</if>
        <if test="startDate != null">AND <![CDATA[ a.event_at >= #{startDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ a.event_at <= #{endDate} ]]> </if>
        order by a.event_at ASC ;
    </select>

    <select id="getFarrowEventByParity" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND type = 15
        AND pig_id = #{pigId}
        AND parity = #{parity}
    </select>

    <select id="getWeanEventByParity" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND type = 16
        AND pig_id = #{pigId}
        AND parity = #{parity}
    </select>

    <select id="getLastStatusEventBeforeEventAt" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND pig_id = #{pigId}
        AND event_at &lt;= date_format(#{eventAt}, '%Y-%m-%d')
        AND (
        type in (6, 7, 9, 11, 14, 15, 16)
        OR (type = 20 AND barn_type = 7 AND pig_status_before = 4)
        OR (type = 19 AND pig_status_before = 9)
        )

        ORDER BY event_at desc , id DESC
        limit 1
    </select>

    <select id="getFirstMateEvent" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND pig_id = #{pigId}
        AND event_at &lt;= date_format(#{eventAt}, '%Y-%m-%d')
        AND current_mating_count = 1
        ORDER BY event_at DESC, id DESC
        limit 1
    </select>

    <select id="sumProFitPigType" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorProfitExportDto">
        SELECT
        pig_type AS pigType,
        pig_type_name AS pigTypeName,
        barn_id AS barnId,
        amount as amount
        FROM v_doctor_sales
        WHERE 1 = 1
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="pigTypeId != null">AND pig_type = #{pigTypeId}</if>
        <if test="startDate != null">AND <![CDATA[ event_at >= #{startDate} ]]> </if>
        <if test="endDate != null">AND <![CDATA[ event_at <= #{endDate} ]]> </if>
    </select>

    <select id="getLastStatusEventBeforeEventAtExcludeId" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND id &lt; #{id}
        AND pig_id = #{pigId}
        AND event_at &lt;= date_format(#{eventAt}, '%Y-%m-%d')
        AND type not in (3,4,5,8)
        ORDER BY id DESC
        limit 1
    </select>

    <select id="getLastStatusEventAfterEventAtExcludeId" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND id &gt; #{id}
        AND pig_id = #{pigId}
        AND event_at &gt;= date_format(#{eventAt}, '%Y-%m-%d')
        AND type not in (3,4,5,8)
        ORDER BY id ASC
        limit 1
    </select>

    <select id="getLastStatusEvent" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND pig_id = #{pigId}
        AND type not in (3,4,5,8)
        ORDER BY event_at DESC , id DESC
        limit 1
    </select>

    <select id="getLastEventBeforeRemove" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND id &lt; #{id}
        AND pig_id = #{pigId}
        ORDER BY event_at DESC, id DESC
        limit 1
    </select>

    <delete id="deleteByChgFarm" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE
        pig_id = #{pigId}
        AND event_source = 5
        AND status = 1
    </delete>

    <update id="updateIncludeNull" parameterType="DoctorPigEvent">
        update
        <include refid="tb"/>
        <set>
            org_id = #{orgId},
            org_name = #{orgName},
            farm_id = #{farmId},
            farm_name = #{farmName},
            pig_id = #{pigId},
            pig_code = #{pigCode},
            is_auto = #{isAuto},
            event_at = #{eventAt},
            `type` = #{type},
            kind = #{kind},
            `name` = #{name},
            `desc` = #{desc},
            barn_id = #{barnId},
            barn_name = #{barnName},
            barn_type = #{barnType},
            rel_event_id = #{relEventId},
            rel_group_event_id = #{relGroupEventId},
            rel_pig_event_id = #{relPigEventId},
            change_type_id = #{changeTypeId},
            price = #{price},
            amount = #{amount},
            pig_status_before = #{pigStatusBefore},
            pig_status_after = #{pigStatusAfter},
            parity = #{parity},
            is_impregnation = #{isImpregnation},
            is_delivery = #{isDelivery},
            preg_days = #{pregDays},
            feed_days = #{feedDays},
            preg_check_result = #{pregCheckResult},
            dp_npd = #{dpnpd},
            pf_npd = #{pfnpd},
            pl_npd = #{plnpd},
            ps_npd = #{psnpd},
            py_npd = #{pynpd},
            pt_npd = #{ptnpd},
            jp_npd = #{jpnpd},
            npd = #{npd},
            group_id = #{groupId},
            farrow_weight = #{farrowWeight},
            <if test="liveCount == null">live_count = 0,</if>
            <if test="liveCount != null">live_count = #{liveCount},</if>
            <if test="healthCount == null">health_count = 0,</if>
            <if test="healthCount != null">health_count = #{healthCount},</if>
            <if test="weakCount == null">weak_count = 0,</if>
            <if test="weakCount != null">weak_count = #{weakCount},</if>
            <if test="mnyCount == null">mny_count = 0,</if>
            <if test="mnyCount != null">mny_count = #{mnyCount},</if>
            <if test="jxCount == null">jx_count = 0,</if>
            <if test="jxCount != null">jx_count = #{jxCount},</if>
            <if test="deadCount == null">dead_count = 0,</if>
            <if test="deadCount != null">dead_count = #{deadCount},</if>
            <if test="blackCount == null">black_count = 0,</if>
            <if test="blackCount != null">black_count = #{blackCount},</if>
            <if test="weanCount == null">wean_count = 0,</if>
            <if test="weanCount != null">wean_count = #{weanCount},</if>
            wean_avg_weight = #{weanAvgWeight},
            current_mating_count = #{currentMatingCount},
            check_date = #{checkDate},
            matting_date = #{mattingDate},
            farrowing_date = #{farrowingDate},
            abortion_date = #{abortionDate},
            partwean_date = #{partweanDate},
            doctor_mate_type = #{doctorMateType},
            mate_type = #{mateType},
            boar_code = #{boarCode},
            out_id = #{outId},
            status = #{status},
            event_source = #{eventSource},
            extra = #{extra},
            source = #{source},
            breed_id = #{breedId},
            breed_name = #{breedName},
            breed_type_id = #{breedTypeId},
            breed_type_name = #{breedTypeName},
            boar_type = #{boarType},
            judge_preg_date = #{judgePregDate},
            quantity = #{quantity},
            weight = #{weight},
            customer_id = #{customerId},
            customer_name = #{customerName},
            basic_id = #{basicId},
            basic_name = #{basicName},
            vaccination_id = #{vaccinationId},
            vaccination_name = #{vaccinationName},
            remark = #{remark},
            operator_id = #{operatorId},
            operator_name = #{operatorName},
            creator_id = #{creatorId},
            creator_name = #{creatorName},
            updator_id = #{updatorId},
            updator_name = #{updatorName},
            created_at = #{createdAt},
            updated_at = now()
        </set>
        where id = #{id}
    </update>

    <select id="findLastParity" parameterType="long" resultType="int">
        SELECT max(parity)
        FROM
        <include refid="tb"/>
        where pig_id = #{pigId}
        AND status = 1
    </select>

    <select id="findUnWeanCountByParity" parameterType="map" resultType="int">
        select sum(
        case when type = 15 then live_count else 0 end +
        case when type = 19 then quantity else 0 end -
        case when type in (17,18) then quantity else 0 end -
        case when type = 16 then wean_count else 0 end
        )
        from doctor_pig_events
        where pig_id = #{pigId}
        and parity = #{parity}
        AND status = 1
    </select>

    <select id="getFirstMatingBeforePregCheck" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        status = 1
        AND pig_id = #{pigId}
        AND parity = #{parity}
        AND id &lt; #{id}
        AND type = 9
        AND current_mating_count = 1
        ORDER by id desc limit 1
    </select>

    <select id="findEffectMatingCountByPigIdForAsc" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId}
        AND type in (9, 11, 16)
        ORDER BY event_at ASC , id ASC
    </select>

    <update id="flushChgFarmEventSource" parameterType="list">
        update
        (
        select id, pig_id
        from
        <include refid="tb"/>
        where farm_id IN
        <foreach collection="list" item="farmId" open="(" separator="," close=")">
            #{farmId}
        </foreach>
        and type =20
        ) a left join
        <include refid="tb"/>
        b
        on a.pig_id = b.pig_id
        set b.event_source = 5
        where b.id &lt; a.id
    </update>

    <select id="findByFarmIds" parameterType="list" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE farm_id IN
        <foreach collection="list" item="farmId" open="(" separator="," close=")">
            #{farmId}
        </foreach>
    </select>

    <select id="getSowUnweanCount" parameterType="long" resultType="int">
        select sum(
        case when type = 15 then `live_count` else 0 end +
        case when type = 19 then quantity else 0 end -
        case when type = 16 then wean_count else 0 end -
        case when type in(17,18) then quantity else 0 end
        )
        from
        <include refid="tb"/>
        where pig_id = #{pigId}
        and status = 1
        and type in (15, 16, 17,18,19)
    </select>

    <select id="findAllFarrowNoNestCode" resultMap="DoctorPigEventMap">
        SELECT farm_id, event_at
        FROM
        <include refid="tb"/>
        where type = 15 and extra not like '%nextCode%'
        group by farm_id, date_format(event_at, '%Y-%m')
    </select>

    <update id="insertNestCode" parameterType="map">
        UPDATE
        (select @rownum:=@rownum+1 as rownum, a.id,
        replace(extra, '}', concat(',"nestCode":', '"', date_format(event_at, '%Y%m'), '-',@rownum, '"', '}')) as extra
        from doctor_pig_events a, (select @rownum:= -1) b
        where farm_id = #{farmId}
        and type = 15
        and extra not like '%nestCode%'
        and event_at &gt;= #{begin}
        and event_at &lt;= #{end}
        order by event_at, id) c
        left join doctor_pig_events d on c.id = d.id
        set d.extra = c.extra
    </update>

    <select id="getFarmEarlyEventAt" parameterType="string"
            resultType="io.terminus.doctor.event.dto.DoctorFarmEarlyEventAtDto">
        SELECT farm_id as farmId, min(event_at) as eventAt
        FROM
        <include refid="tb"/>
        WHERE updated_at &gt;= #{startDate}
        group by farm_id
    </select>

    <select id="findPigAt" parameterType="map" resultType="long">
        select pig_id
        FROM
        <include refid="tb"/>
        <where>
            <if test="farmIds !=null and farmIds.size()>0">
                and
                <foreach collection="farmIds" item="t" open="(" separator="or" close=")">
                    farm_id=#{t}
                </foreach>
            </if>
            <if test="kind !=null">
                AND kind=#{kind}
            </if>
            <if test="beginDate !=null">
                AND <![CDATA[ event_at >= #{beginDate} ]]>
            </if>
            <if test="endDate !=null">
                AND <![CDATA[ event_at <= #{endDate} ]]>
            </if>
        </where>
        group by pig_id
    </select>


    <select id="findForNPD" parameterType="map" resultMap="DoctorPigEventMap">

        SELECT farm_id,pig_id,type,preg_check_result,event_at,id,current_mating_count
        FROM
        <include refid="tb"/>
       where
        farm_id=#{farmId}
        and kind=1
        <if test="beginDate !=null">
            AND <![CDATA[ event_at >= #{beginDate} ]]>
        </if>
        <if test="endDate !=null">
            AND <![CDATA[ event_at <= #{endDate} ]]>
        </if>
        and type!=3
        and type!=4
        and type!=5
        and type!=17
        and type!=18
        and type!=19
        and type!=1
        and type!=10
        and type!=12
        and type!=14
    </select>


    <select id="findEarLyAt" resultType="io.terminus.doctor.event.dto.DoctorFarmEarlyEventAtDto">
        select farm_id as farmId, min(event_at) as eventAt
        from
        <include refid="tb"/>
        group by farm_id
    </select>

    <select id="findEventAtLeadToStatus" parameterType="map" resultType="date">
        SELECT event_at as eventAt
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId}
        and (pig_status_before != #{status} OR pig_status_before is NULL)
        and pig_status_after = #{status}
        order by id DESC
        limit 1
    </select>

    <select id="findMateEventToPigId" parameterType="long" resultType="date">
        SELECT event_at as eventAt
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId}
        and type = 9
        and pig_status_after = 3
        order by id DESC
        limit 1
    </select>

    <select id="countEvent" parameterType="map" resultType="int">
        SELECT count(*)
        FROM
        <include refid="tb"/>
        WHERE pig_id=#{pigId}
        AND type=#{type}
        AND status=1
        AND <![CDATA[ event_at <= #{beforeAt} ]]>

    </select>

    <select id="findByPigAndType" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT *
        FROM
        <include refid="tb"/>
        WHERE pig_id=#{pigId}
        AND type=#{type}
        AND status=1
        order by event_at
    </select>

    <select id="findWeanToMatingCount" parameterType="long" resultType="int" >
        SELECT count(1)
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId}
        AND `type` = 9
        AND pig_status_before = 9
        AND status = 1
    </select>

    <update id="flushParityAndBeforeStatusAndAfterStatus" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update
            <include refid="tb"/>
            SET
            parity = #{item.parity},
            pig_status_before = #{item.pigStatusBefore},
            pig_status_after = #{item.pigStatusAfter}
            WHERE id = #{item.id}
        </foreach>
    </update>


    <select id="queryToMatingForTime" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT id, extra
        FROM <include refid="tb"/>
        <where>
            farm_id= #{farmId}
            AND type = 12
            AND created_at &gt; '2017-03-09'
        </where>
    </select>

    <select id="queryEventsForDescBy" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            pig_id = #{pigId}
            AND parity = #{parity}
            AND status = 1
            AND event_source != 5
            order by event_at desc, id desc
        </where>
    </select>

    <select id="queryBeforeChgFarm" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            pig_id = #{pigId}
            AND id &lt;= #{eventId}
            AND status = 1
            order by event_at desc, id desc
        </where>
    </select>

    <select id="queryBeforeEvent" parameterType="map" resultMap="DoctorPigEventMap">
        select * from doctor_pig_events where id =
        (
          select max(id) from doctor_pig_events b where b.id &lt; #{id}
            and b.pig_id = #{pigId}
            <choose>
                <when test="type==15">
                    and b.type in (9,20)
                </when>
                <when test="type==16">
                    and b.type in (15,20)
                </when>
                <when test="type==9">
                    and b.type in (7,11,20,16)
                </when>
                <when test="type==11">
                    and b.type in (9)
                </when>
                <otherwise>
                    and b.type!=3
                    and b.type!=4
                    and b.type!=5
                    and b.type!=17
                    and b.type!=18
                    and b.type!=19
                    and b.type!=1
                    and b.type!=10
                    and b.type!=12
                    and b.type!=14
                </otherwise>
            </choose>
        )
    </select>
    <select id="queryEventId" parameterType="long" resultType="long">
        SELECT id FROM doctor_pig_events
        WHERE pig_id = #{pigId}  ORDER BY event_at DESC ,id DESC limit 1
    </select>



    <!--            ============       新增SQL      ============           -->
    <sql id="where_sql">
        <if test="type != null"> AND `type` = #{type} </if>
        <if test="types != null &amp;&amp; types.size() > 0">
             AND `type` IN
            <foreach collection="types" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        <!-- <if test="farmId != null"> AND farm_id = #{farmId} </if> -->
        <if test="beginDate != null"> AND <![CDATA[ event_at >= #{beginDate} ]]> </if>
        <if test="endDate != null"> AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        <if test="notList != null &amp;&amp; notList.size() > 0">
            AND `pig_id` IN
            <foreach collection="notList" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
    </sql>

    <select id="findPigIdsByEvent" parameterType="map" resultType="Long">
        SELECT DISTINCT(pig_id) FROM doctor_pig_events
        WHERE 1=1
        <include refid="where_sql"/>
    </select>

    <select id="findFarmSowEventAt" parameterType="map" resultType="date">
        SELECT event_at as eventAt FROM <include refid="tb"/>
        WHERE pig_id = #{pigId} and id <![CDATA[ <= ]]> (select event_id from doctor_chg_farm_infos where pig_id = #{pigId} and farm_id = #{farmId})
        order by id DESC
        limit 1
    </select>

    <select id="getInFarmPigId" parameterType="map" resultType="map">
        select c.id as id, c.pig_id as pig_id ,c.parity as parity,c.pig_status_after as pig_status_after,c.type as type,c.barn_name as current_barn_name,d.staff_name as staff_name,c.live_count as live_count, c.event_at as event_at, a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date
        from doctor_pig_events c,
        (select b.pig_id, max(b.id) as max_event_id
        from doctor_pig_events b,
        (select a.pig_id, max(a.event_at) as max_event_at from doctor_pig_events a
        where a.farm_id = #{farmId} and a.kind = 1 and a.`status` = 1 and a.event_at &lt;= #{time}
        group by a.pig_id) t1
        where b.pig_id = t1.pig_id and b.event_at = t1.max_event_at and b.farm_id = #{farmId}
        and b.kind = 1 and b.`status` = 1 and b.event_at &lt;= #{time}
        group by b.pig_id
        ) t2,doctor_pigs a,doctor_barns d
        where c.pig_id = t2.pig_id and c.id = t2.max_event_id  and c.pig_id = a.id and c.barn_id = d.id
        and c.type &lt;> 2 and c.type &lt;> 6
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breed != null"> and a.breed_id = #{breed} </if>
        <if test="beginInFarmTime != null"> and a.in_farm_date >= #{beginInFarmTime} </if>
        <if test="endInFarmTime != null"> and a.in_farm_date &lt;= #{endInFarmTime} </if>
        <if test="parity != null and parity != 11"> and c.parity = #{parity} </if>
        <if test="parity != null and parity == 11"> and  c.parity >= 11 </if>
        <if test="pigStatus != null and pigStatus != 5"> and  c.pig_status_after = #{pigStatus} </if>
        <if test="pigStatus != null and pigStatus == 5"> and  c.pig_status_after in (1,5,9) </if>
        <if test="operatorName != null and operatorName != ''"> AND d.staff_name like CONCAT(CONCAT('%',#{operatorName}),'%')</if>
        <if test="barnId != null"> and d.id = #{barnId} </if>
    </select>

    <select id="getInFarmPigId1" parameterType="map" resultType="map">
        select c.id as id, c.pig_id as pig_id ,c.parity as parity,c.pig_status_after as pig_status_after,c.type as type,c.barn_name as current_barn_name,d.staff_name as staff_name,c.live_count as live_count, c.event_at as event_at, a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date
        from doctor_pig_events c,doctor_pigs a,doctor_barns d
        where c.farm_id = #{farmId} and c.event_at = #{time} and c.type in (2,6) and c.status = 1  and c.pig_id = a.id and c.barn_id = d.id
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breed != null"> and a.breed_id = #{breed} </if>
        <if test="beginInFarmTime != null"> and a.in_farm_date >= #{beginInFarmTime} </if>
        <if test="endInFarmTime != null"> and a.in_farm_date &lt;= #{endInFarmTime} </if>
        <if test="parity != null and parity != 11"> and c.parity = #{parity} </if>
        <if test="parity != null and parity == 11"> and  c.parity >= 11 </if>
        <if test="pigStatus != null and pigStatus != 5"> and  c.pig_status_after = #{pigStatus} </if>
        <if test="pigStatus != null and pigStatus == 5"> and  c.pig_status_after in (1,5,9) </if>
        <if test="operatorName != null and operatorName != ''"> AND d.staff_name like CONCAT(CONCAT('%',#{operatorName}),'%')</if>
        <if test="barnId != null"> and d.id = #{barnId} </if>
    </select>

    <select id="getInFarmPigId2" parameterType="map" resultType="map">
        SELECT d.id as id, d.pig_id as pig_id , max(d.event_at) as event_at, a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date
        FROM doctor_pig_events d
        join doctor_pigs a on d.pig_id = a.id
        WHERE d.farm_id = #{farmId}
        and d.kind = 1
        and d.type = 6
        and d.event_at &lt;= #{time}
        and d.status = 1
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breed != null"> and a.breed_id = #{breed} </if>
        <if test="beginInFarmTime != null"> and a.in_farm_date > #{beginInFarmTime} </if>
        <if test="endInFarmTime != null"> and a.in_farm_date &lt; #{endInFarmTime} </if>
        group by d.pig_id
    </select>
    <select id="getInFarmPigId3" parameterType="map" resultType="map">
        SELECT d.id as id, d.pig_id as pig_id , max(d.event_at) as event_at, a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date
        FROM doctor_pig_events d
        join doctor_pigs a on d.pig_id = a.id
        WHERE d.farm_id = #{farmId}
        and d.kind = 1
        and d.type in (2,6)
        and d.status = 1
        and d.event_at = #{time}
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breed != null"> and a.breed_id = #{breed} </if>
        <if test="beginInFarmTime != null"> and a.in_farm_date > #{beginInFarmTime} </if>
        <if test="endInFarmTime != null"> and a.in_farm_date &lt; #{endInFarmTime} </if>
        group by d.pig_id
        HAVING  d.id =
        (SELECT max(id)
        FROM doctor_pig_events
        WHERE farm_id = #{farmId}
        and pig_id = d.pig_id
        and status=1
        and kind = 1)
    </select>
    <!--<select id="isOutFarm" parameterType="map" resultType="Integer">
        SELECT count(*)
        FROM doctor_pig_events
        WHERE farm_id = #{farmId} and pig_id = #{pigId} and kind = 1 and type in (2,6) and event_at &lt; #{time} and event_at >= #{eventAt} and id > #{id}
    </select>-->

    <select id="findBarn" parameterType="map" resultType="map">
        SELECT a.barn_id as barn_id, a.barn_name as barn_name, b.staff_name as staff_name
        FROM doctor_pig_events a join doctor_barns b on a.barn_id = b.id
        where a.id = #{isBarn}
        and a.status = 1
        <if test="operatorName != null and operatorName != ''"> AND b.staff_name like CONCAT(CONCAT('%',#{operatorName}),'%')</if>
        <if test="barnId != null"> and b.id = #{barnId} </if>
    </select>

    <select id="isBarn" parameterType="map" resultType="BigInteger">
        select id from doctor_pig_events
        where pig_id = #{pigId} and kind = 1 and status=1 and type in (1,10,12,14) and event_at &lt;= #{time} and event_at >= #{eventAt} and id > #{id}
        order by id
        limit 1
    </select>
    <!-- <select id="findPigInfo" parameterType="map" resultType="map">
         SELECT b.current_barn_id as current_barn_id, b.current_barn_name as current_barn_name,a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date,c.staff_name as staff_name
         FROM doctor_pigs a join doctor_pig_tracks b on a.id = b.pig_id join doctor_barns c on b.current_barn_id = c.id
         WHERE a.id = #{pigId}
     </select>-->
    <select id="frontEventId" parameterType="map" resultType="map">
        select id,type
        from doctor_pig_events
        where event_at &lt;= #{time}
        and pig_id = #{pigId}
        and status=1
        order by id desc limit 1
    </select>
    <select id="frontEvent" parameterType="map" resultType="map">
        select `type`,preg_check_result,parity, pig_status_after,event_at,live_count,type
        from doctor_pig_events
        where status=1
        and id = (select id
        from doctor_pig_events
        where event_at &lt;= #{time}
        and status=1
        and pig_id = #{pigId}
        order by id desc limit 1)
        <if test="parity != null and parity != 11"> and parity = #{parity} </if>
        <if test="parity != null and parity == 11"> and  parity >= 11 </if>
        <if test="pigStatus != null and pigStatus != 5"> and  pig_status_after = #{pigStatus} </if>
        <if test="pigStatus != null and pigStatus == 5"> and  pig_status_after in (1,5,9) </if>
    </select>
    <select id="getPregCheckResult" parameterType="map" resultType="int">
        select preg_check_result
        from doctor_pig_events
        where status=1
        and id = (select id
        from doctor_pig_events
        where event_at &lt;= #{time}
        and status=1
        and pig_id = #{pigId} and type = 11
        order by id desc limit 1)
    </select>
    <select id="afterEvent" parameterType="map" resultType="map">
        select min(id) as id,farm_id from doctor_pig_events where event_at > #{time} and pig_id = #{pigId}
    </select>
    <select id="findBarns" parameterType="map" resultType="map">
        select b.current_barn_id, b.current_barn_name, c.staff_name as staff_name, b.farm_id as farm_id
        from doctor_pig_tracks b
        join doctor_barns c on b.current_barn_id = c.id
        where pig_id = #{pigId}
        <if test="operatorName != null and operatorName != ''"> AND c.staff_name like CONCAT(CONCAT('%',#{operatorName}),'%')</if>
        <if test="barnId != null"> and c.id = #{barnId} </if>
    </select>
    <select id="getdaizaishu" parameterType="map" resultType="map">
        select type,sum(quantity) as quantity
        from doctor_pig_events
        where pig_id = #{pigId}
        and status=1
        and event_at >= #{nearDeliverDate}
        and event_at &lt;= #{time}
        group by type
        HAVING type in (17,18,19)
    </select>
    <select id="nearDeliver" parameterType="map" resultType="map">
        select event_at,live_count from doctor_pig_events where event_at &lt;= #{time} and pig_id = #{pigId} and status=1 and type = 15 order by id desc limit 1
    </select>

    <select id="getInFarmBoarId1" parameterType="map" resultType="map">
        SELECT d.id as id, d.pig_id as pig_id ,d.type as type, max(d.event_at) as event_at, a.pig_code as pig_code,
        a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,
        a.birth_date as birth_date,a.boar_type as boar_type
        FROM doctor_pig_events d
        join doctor_pigs a on d.pig_id = a.id
        WHERE d.farm_id = #{farmId}
        and d.status = 1
        and d.kind = 2
        and d.type in (7,20)
        and d.event_at &lt;= #{queryDate}
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breedId != null"> and a.breed_id = #{breedId} </if>
        <if test="pigType != null"> and a.boar_type = #{pigType} </if>
        <if test="beginDate != null"> and a.in_farm_date >= #{beginDate} </if>
        <if test="endDate != null"> and date(a.in_farm_date) &lt;= #{endDate} </if>
        group by d.pig_id
        HAVING  d.id not in
        (SELECT d.id
        FROM doctor_pig_events
        WHERE farm_id = #{farmId}
        and pig_id = d.pig_id
        and kind = 2
        and status = 1
        and type in (2,6)
        and event_at &lt; #{queryDate}
        and event_at >= max(d.event_at)
        and id > d.id)
    </select>

    <select id="getInFarmBoarId2" parameterType="map" resultType="map">
        SELECT d.id as id, d.pig_id as pig_id ,d.type as type ,max(d.event_at) as event_at, a.pig_code as pig_code,
        a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,
        a.birth_date as birth_date,a.boar_type as boar_type
        FROM doctor_pig_events d
        join doctor_pigs a on d.pig_id = a.id
        WHERE d.farm_id = #{farmId}
        and d.status = 1
        and d.kind = 2
        and d.type in(2,6)
        and d.event_at = #{queryDate}
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breedId != null"> and a.breed_id = #{breedId} </if>
        <if test="pigType != null"> and a.boar_type = #{pigType} </if>
        <if test="beginDate != null"> and a.in_farm_date >= #{beginDate} </if>
        <if test="endDate != null"> and date(a.in_farm_date) &lt;= #{endDate} </if>
        group by d.pig_id
    </select>

    <select id="getInFarmBoarId3" parameterType="map" resultType="map">
        SELECT d.id as id, d.pig_id as pig_id , max(d.event_at) as event_at, a.pig_code as pig_code,a.breed_id as breed_id,a.breed_name as breed_name,a.source as source,a.in_farm_date as in_farm_date,a.birth_date as birth_date
        FROM doctor_pig_events d
        join doctor_pigs a on d.pig_id = a.id
        WHERE d.farm_id = #{farmId}
        and d.status = 1
        and d.kind = 2
        and d.type = 2
        and d.event_at &lt;= #{queryDate}
        <if test="pigCode != null and pigCode != ''"> AND a.pig_code like CONCAT(CONCAT('%',#{pigCode}),'%')</if>
        <if test="breedId != null"> and a.breed_id = #{breedId} </if>
        <if test="beginDate != null"> and a.in_farm_date >= #{beginDate} </if>
        <if test="endDate != null"> and date(a.in_farm_date) &lt;= #{endDate} </if>
        group by d.pig_id
        HAVING  d.id =
        (SELECT id
        FROM doctor_pig_events
        WHERE farm_id = #{farmId}
        and pig_id = d.pig_id
        and status = 1
        and kind = 2
        order by id desc limit 1)
    </select>

    <select id="isBoarBarn" parameterType="map" resultType="BigInteger">
        select id, event_at  from doctor_pig_events
        where pig_id = #{pigId} and farm_id = #{farmId} and kind = 2 and type = 1 and status = 1 and event_at > #{queryDate} and event_at >= #{eventAt} and id > #{id}
        order by id
        limit 1
    </select>

    <select id="findBoarBarn" parameterType="map" resultType="map">
        SELECT a.barn_id as barn_id, a.barn_name as barn_name, b.staff_name as staff_name
        FROM doctor_pig_events a join doctor_barns b on a.barn_id = b.id
        where a.id = #{isBoarBarn}
        and a.status = 1
        <if test="staffName != null and staffName != ''"> AND b.staff_name like CONCAT(CONCAT('%',#{staffName}),'%')</if>
        <if test="barnId != null"> and b.id = #{barnId} </if>
    </select>

    <select id="findBoarBarns" parameterType="map" resultType="map">
        select b.current_barn_id, b.current_barn_name, c.staff_name as staff_name
        from doctor_pig_tracks b
        join doctor_barns c on b.current_barn_id = c.id
        where pig_id = #{pigId}
        <if test="staffName != null and staffName != ''"> AND c.staff_name like CONCAT(CONCAT('%',#{staffName}),'%')</if>
        <if test="barnId != null"> and c.id = #{barnId} </if>
    </select>

    <select id="findBoarBarn1" parameterType="map" resultType="map">
        SELECT a.barn_id as barn_id, a.barn_name as barn_name, b.staff_name as staff_name
        FROM doctor_pig_events a
        join doctor_barns b on a.barn_id = b.id
        where a.farm_id = #{farmId} and a.type = 2 and a.pig_id = #{pigId} and a.event_at &lt;= #{queryDate} and a.status = 1
        <if test="staffName != null and staffName != ''"> AND b.staff_name like CONCAT(CONCAT('%',#{staffName}),'%')</if>
        <if test="barnId != null"> and b.id = #{barnId} </if>
    </select>

    <select id="checkBarn" parameterType="map" resultType="Integer">
        SELECT status
        FROM doctor_barns
        where id = #{barnId}
    </select>

    <select id="isBoarChgFarm" parameterType="map" resultType="BigInteger">
        select id from doctor_pig_events
        where pig_id = #{pigId} and kind = 2 and type = 2 and status = 1 and event_at > #{queryDate} and event_at >= #{eventAt} and id > #{id}
        <if test="chgBarnEventAt != null"> and #{queryDate} >= #{chgBarnEventAt} </if>
        order by id
        limit 1
    </select>

    <select id="findStaffName" parameterType="map" resultType="String">
        SELECT staff_name
        FROM doctor_barns
        where id = #{currentBarnId}
        <if test="staffName != null and staffName != ''"> AND staff_name like CONCAT(CONCAT('%',#{staffName}),'%')</if>
        <if test="barnId != null"> and id = #{barnId} </if>
    </select>

    <!-- 事件中心-比如配种事件、转舍事件，当前状态不应该显示空怀，是返情就显示返情 （陈娟 2018-09-05）-->
    <select id="getKongHuaiStatus" parameterType="Long" resultMap="DoctorPigEventMap">
      select * from doctor_pig_events
      where pig_id = #{pigId} and type = 11 AND status = 1 ORDER BY event_at desc,id desc limit 1
    </select>

    <select id="selectPIG" parameterType="map" resultType="map">
        SELECT distinct a.id as id FROM doctor_pigs a
        WHERE a.pig_type=1 AND a.farm_id=#{farmId}
        and exists(select 1 from doctor_pig_events b where b.pig_id = a.id
        and (b.type=6 or b.type=7 or b.type=9 or b.type=11 or b.type=15 or b.type=16 or b.type=2 or b.type=20)
        and b.event_at between #{startDate} and #{endDate})
    </select>

    <select id="selectNPD" parameterType="map" resultType="map">
        <![CDATA[
			SELECT
		      		a.id as eventId,
					a.org_id as orgId,
					a.org_name as orgName,
					a.farm_id as farmId,
					a.farm_name as farmName,
					a.barn_id as barnId,
					a.pig_id as pigId,
					a.type as type,
					a.`name` as `name`,
					a.preg_check_result as pregCheckResult,
					a.event_at as eventAt,
					a.parity as parity,
					a.change_type_id as changeTypeId, 1 as xh,
					a.live_count as liveCount,
					a.current_mating_count as currentMatingCount,
				  (CASE when a.`type` = 7 then 1
								when a.`type` = 9 then 2
								when a.`type` = 11 and a.preg_check_result = 1 then 3
				                when a.`type` = 11 and a.preg_check_result = 2 then 4
								when a.`type` = 11 and a.preg_check_result = 3 then 5
								when a.`type` = 11 and a.preg_check_result = 4 then 6
								when a.`type` = 15 then 7
								when a.`type` = 6 then 8
								when a.`type` = 16 then 9
								when a.`type` = 2 then 10
								when a.`type` = 20 then 11
				        else 0 end ) as eventType
				FROM  doctor_pig_events a
				WHERE  a.kind = 1
				AND (a.type=6 or a.type=7 or a.type=9 or a.type=11
						 or a.type=15 or a.type=16 or a.type=2 or a.type=20)
				AND a.`status`=1
				AND not exists(SELECT 1 FROM doctor_pig_events b
				WHERE  b.pig_id=a.pig_id AND b.type=20 AND b.event_at>=a.event_at)
				AND a.event_at BETWEEN #{startDate} and #{endDate}
				AND a.farm_id=#{farmId}
				AND a.pig_id=#{pigId}
		union all
		select
		    t.id as eventId,
			t.org_id as orgId,
			t.org_name as orgName,
			t.farm_id as farmId,
			t.farm_name as farmName,
			t.barn_id as barnId,
			t.pig_id as pigId,
			t.type as type,
			t.`name` as `name`,
			t.preg_check_result as pregCheckResult,
			t.event_at as eventAt,
			t.parity as parity,
			t.change_type_id as changeTypeId, 0 as xh,
			t.live_count as liveCount,
			t.current_mating_count as currentMatingCount,
		    t.eventType as eventType
		from
		(
		  select
		            a.id,
					a.org_id,
					a.org_name,
					a.farm_id,
					a.farm_name,
					a.barn_id,
					a.pig_id,
					a.type,
					a.`name`,
					a.preg_check_result ,
					a.event_at,
					a.parity,
					a.change_type_id,
					a.live_count,
					a.current_mating_count,
				  (CASE when a.`type` = 7 then 1
								when a.`type` = 9 then 2
								when a.`type` = 11 and a.preg_check_result = 1 then 3
				                when a.`type` = 11 and a.preg_check_result = 2 then 4
								when a.`type` = 11 and a.preg_check_result = 3 then 5
								when a.`type` = 11 and a.preg_check_result = 4 then 6
								when a.`type` = 15 then 7
								when a.`type` = 6 then 8
								when a.`type` = 16 then 9
								when a.`type` = 2 then 10
								when a.`type` = 20 then 11
				        else 0 end ) as eventType
				FROM  doctor_pig_events a
				WHERE  a.kind = 1
				AND (a.type=6 or a.type=7 or a.type=9 or a.type=11
						 or a.type=15 or a.type=16 or a.type=2 or a.type=20)
				AND a.`status`=1
				AND not exists(SELECT 1 FROM doctor_pig_events b
				WHERE  b.pig_id=a.pig_id AND b.type=20 AND b.event_at>=a.event_at)
				AND a.event_at < #{startDate}
				AND a.farm_id=#{farmId}
				AND a.pig_id=#{pigId}
		  ORDER BY a.event_at desc, a.id desc limit 1
		) t
		order by xh, eventAt, eventId ]]>
    </select>

    <select id="selectLastEndNPD" parameterType="map" resultType="map">
        <![CDATA[
				select
					current_event_date as currentEventDate
				from
					doctor_sow_npd_dayly
				where org_id=#{orgId}
				AND farm_id=#{farmId}
				AND pig_id=#{pigId}
				AND current_event_date < #{edate}
				order by current_event_date desc limit 0,1
		]]>
    </select>

    <select id="selectEvent" parameterType="map" resultType="map">
        select
        <include refid="cols_all"/>
        from doctor_pig_events a
        where a.event_at &lt; #{eTime}
        and (a.type = 9
        or (a.type = 11 and a.preg_check_result = 2)
        or (a.type = 11 and a.preg_check_result = 3)
        or (a.type = 11 and a.preg_check_result = 4)
        or a.type = 16
        or a.type = 7)
        and a.pig_id = #{pigId}
        ORDER BY a.id desc
        limit 1
    </select>

    <select id="selectType" parameterType="map" resultType="map">
        select <include refid="cols_all"/>
        from doctor_pig_events a
        where (a.type = 2 or a.type = 20)
        and a.pig_id = #{pigId}
        and a.event_at between #{eventAt} and #{eTime}
        ORDER BY a.id
    </select>

    <select id="selectDate" parameterType="map" resultType="String">
        select event_at as time
        from doctor_pig_events a
        where a.type = 20
        and a.pig_id = #{pigId}
        and a.event_at &lt;= #{time}
        and a.farm_id = #{farmId}
        ORDER BY a.id desc
        limit 1
    </select>

    <select id="selectStartNPD" resultType="java.util.Map">
        <![CDATA[
			select
				current_event_date as currentEventDate
			from
				doctor_sow_npd_dayly
			where org_id=#{orgId}
			AND farm_id=#{farmId}
			AND pig_id=#{pigId}
			AND current_event_type=2
			AND current_event_date < #{startDate}
			order by current_event_date desc limit 0,1
		]]>
    </select>

    <select id="totalNpd" parameterType="map" resultType="long">

        select count(1) as count
        from (
        SELECT a.pig_id,
        b.pig_code as pigCode,
        a.barn_id,
        c.name as barnName,
        SUM(a.jc_npd) as jcnpd,
        SUM(a.dnpz_npd) as dnpznpd,
        SUM(a.lc_npd) as lcnpd,
        SUM(a.fq_npd) as fqnpd,
        SUM(a.sw_npd) as swnpd,
        SUM(a.tt_npd) as ttnpd,
        SUM(a.npd_date) as npddate
        FROM doctor_sow_npd_dayly a join doctor_pigs b on a.pig_id = b.id join doctor_barns c on a.barn_id = c.id
        WHERE
        <if test="farmId != null"> a.farm_id = #{farmId}</if>
        <if test="barnId != null">AND a.barn_id = #{barnId}</if>
        <if test="pigCode != null">AND b.pig_code LIKE concat('%',#{pigCode},'%')</if>
        <if test="startYear != null">AND a.fiscal_year >= #{startYear}</if>
        <if test="endYear != null">AND a.fiscal_year &lt;= #{endYear} </if>
        <if test="startMonth != null">AND a.fiscal_period >= #{startMonth}</if>
        <if test="endMonth != null">AND a.fiscal_period &lt;= #{endMonth} </if>
        GROUP BY a.pig_id
        ) dd
        WHERE dd.npddate <![CDATA[<>]]> 0
    </select>

    <select id="sumNpd" parameterType="map" resultType="map">
        SELECT  tt.pigId, tt.pigCode, tt.barnId, tt.barnName, tt.jcnpd, tt.dnpznpd, tt.lcnpd, tt.fqnpd, tt.swnpd, tt.ttnpd,tt.npddate  FROM (
        SELECT a.pig_id as pigId,
        b.pig_code as pigCode,
        a.barn_id as barnId,
        c.name as barnName,
        SUM(a.jc_npd) as jcnpd,
        SUM(a.dnpz_npd) as dnpznpd,
        SUM(a.lc_npd) as lcnpd,
        SUM(a.fq_npd) as fqnpd,
        SUM(a.sw_npd) as swnpd,
        SUM(a.tt_npd) as ttnpd,
        SUM(a.npd_date) as npddate
        FROM doctor_sow_npd_dayly a join doctor_pigs b on a.pig_id = b.id join doctor_barns c on a.barn_id = c.id
        WHERE
        <if test="farmId != null"> a.farm_id = #{farmId}</if>
        <if test="barnId != null">AND a.barn_id = #{barnId}</if>
        <if test="pigCode != null">AND b.pig_code LIKE concat('%',#{pigCode},'%')</if>
        <if test="startYear != null">AND a.fiscal_year >= #{startYear}</if>
        <if test="endYear != null">AND a.fiscal_year &lt;= #{endYear} </if>
        <if test="startMonth != null">AND a.fiscal_period >= #{startMonth}</if>
        <if test="endMonth != null">AND a.fiscal_period &lt;= #{endMonth} </if>
        GROUP BY a.pig_id
        ) tt
        WHERE tt.npddate <![CDATA[<>]]> 0
        limit #{offset}, #{limit}
    </select>

    <select id="getNpds" parameterType="map" resultType="int">
        select sum(npd_date) as npds from doctor_sow_npd_dayly
        where farm_id = #{farmId}
        and fiscal_year = #{year}
        and fiscal_period = #{month}
    </select>

    <select id="getPregnancys" parameterType="map" resultType="int">
        select sum(gestation_date) as pregnancys from doctor_sow_npd_dayly
        where farm_id = #{farmId}
        and fiscal_year = #{year}
        and fiscal_period = #{month}
    </select>

    <select id="getLactations" parameterType="map" resultType="int">
        select sum(lactation_date) as lactations from doctor_sow_npd_dayly
        where farm_id = #{farmId}
        and fiscal_year = #{year}
        and fiscal_period = #{month}
    </select>

    <select id="getBranName" parameterType="map" resultType="map">
        select barn_name as barnName, barn_id as barnId
        from doctor_pig_events a
        where a.event_at >= #{date}
        and a.pig_id = #{pigId}
        ORDER BY a.event_at
        limit 1
    </select>
</mapper>