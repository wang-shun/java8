<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorOrg">
    <resultMap id="DoctorOrgMap" type="DoctorOrg">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="parent_id" property="parentId"/>
        <result column="type" property="type"/>
        <result column="license" property="license"/>
        <result column="out_id" property="outId"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        doctor_orgs
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name, mobile, parent_id, `type`, license, out_id, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{name}, #{mobile}, #{parentId}, #{type}, #{license}, #{outId}, #{extra}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorOrg" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findByName" parameterType="string" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE `name` = #{name}
    </select>

    <select id="findName" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT name
        FROM doctor_orgs
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorOrg">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="license != null">license = #{license},</if>
            <if test="outId != null">out_id = #{outId},</if>
            <if test="extra != null">extra = #{extra},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateName" parameterType="map">
        UPDATE doctor_orgs
        set name = #{name}, type=#{type}
        WHERE id = #{id}
    </update>

    <update id="updateBarnName" parameterType="map">
        UPDATE doctor_barns
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateFarmsName" parameterType="map">
        UPDATE doctor_farms
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupEventName" parameterType="map">
        UPDATE doctor_group_events
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupName" parameterType="map">
        UPDATE doctor_groups
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigEventsName" parameterType="map">
        UPDATE doctor_pig_events
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigScoreApplyName" parameterType="map">
        UPDATE doctor_pig_score_applys
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigName" parameterType="map">
        UPDATE doctor_pigs
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupDaileName" parameterType="map">
        UPDATE doctor_group_dailies
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigDailieName" parameterType="map">
        UPDATE doctor_pig_dailies
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findAll" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
    </select>

    <select id="findOrgByParentId" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        parent_id = #{parentId}
    </select>

    <sql id="criteria">
        1=1
        <if test="name != null">AND `name` = #{name}</if>
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        <if test="id != null">AND `id` = #{id}</if>
        <if test="type != null">AND `type` = #{type}</if>
        <if test="parentId != null">AND `parent_id` = #{parentId}</if>
    </sql>
    <select id="count" parameterType="map" resultType="long">
        SELECT count(*)
        FROM <include refid="tb"/>
        WHERE <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE <include refid="criteria"/>
        <if test="fuzzyName != null">
        ORDER BY instr(`name`, #{fuzzyName}) ASC, LENGTH (`name`) ASC
        </if>
        limit #{offset}, #{limit}
    </select>

    <!--集团，公司的数据展示（陈娟 2018-8-29）-->
    <select id="countCompany" parameterType="map" resultType="long">
        SELECT count(*)
        FROM <include refid="tb"/>
        WHERE (type=1 or (type=2 and parent_id=0))
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        <if test="type != null">AND `type` = #{type}</if>
    </select>

    <select id="pagingCompany" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE 1=1
        <if test="type == 1"> AND type=1</if>
        <if test="type == 2"> AND type=2 and parent_id=0</if>
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        <if test="fuzzyName != null">
            ORDER BY instr(`name`, #{fuzzyName}) ASC, LENGTH (`name`) ASC
        </if>
        limit #{offset}, #{limit}
    </select>

    <!--查询公司时得到有集团的公司 （陈娟 2018-08-31）-->
    <select id="getParentId" parameterType="map" resultMap="DoctorOrgMap">
        select DISTINCT parent_id from doctor_orgs
        where parent_id!=0 and type=2
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        ORDER BY parent_id
    </select>

    <select id="findOrgByParentIdAndName" parameterType="map" resultMap="DoctorOrgMap" >
        select * from doctor_orgs
        where parent_id!=0 and type=2 and parent_id = #{parentId}
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        ORDER BY id
    </select>

    <select id="findByFuzzyName" parameterType="map" resultMap="DoctorOrgMap">
        SELECT id, `name`
        FROM <include refid="tb" />
        WHERE `name` LIKE concat('%', #{fuzzyName}, '%')
        <if test="type != null">AND `type` =  #{type} </if>
        ORDER BY instr(`name`, #{fuzzyName}) ASC, LENGTH (`name`) ASC
        limit 0, 20
    </select>

    <update id="bindDepartment" parameterType="map" >
        UPDATE
        <include refid="tb"/>
        SET parent_id = #{parentId}
        WHERE
        id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </update>

    <update id="unbindDepartment" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET parent_id = 0
        WHERE
        id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </update>

    <!-- 关联子公司得到公司（陈娟 2018-08-29）-->
    <select id="getCompanyByName" parameterType="map" resultMap="DoctorOrgMap" >
        select * from doctor_orgs where type=2
        <if test="name != null">AND `name` LIKE concat('%', #{name}, '%')</if>
    </select>


    <select id="findExcludeIds" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        1=1
        <if test="orgIds !=null &amp;&amp; orgIds.size()>0">
        AND id NOT IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
        </if>
    </select>

    <select id="findByType" parameterType="int" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        `type` = #{type}
    </select>

    <select id="findByMobile" parameterType="string" resultMap="DoctorOrgMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        `mobile` = #{mobile}
    </select>
    <select id="findGroupcompanyByOrgId" parameterType="long" resultMap="DoctorOrgMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        id = #{orgId}
    </select>


    <select id="findOrgByGroup" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        id in
        <foreach collection="orgIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and parent_id = #{groupId}
    </select>

    <select id="findUserTypeById" parameterType="long" resultType="Integer" >
        select user_type from doctor_user_subs where user_id = #{userId}
    </select>

    <select id="getOrgByGroupId" parameterType="map" resultType="map" >
       select id,name from doctor_orgs where parent_id = #{groupId} and id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </select>

    <select id="getOrgByGroupId1" parameterType="map" resultType="long" >
        select id from doctor_orgs where parent_id = #{groupId} and id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </select>

    <select id="getCunlan" parameterType="long" resultType="map" >
        select ifnull((select ifnull(end,0) from doctor_report_resevers where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0) as end, '后备猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_boars where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0) as end, '种公猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_sows where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '基础母猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_matings where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '配怀母猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_delivers where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '产房母猪' as 'type'
        union
        select ifnull((select ifnull(piglet_end,0) from doctor_report_delivers where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '产房仔猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_nurseries where orz_id = #{orgId} and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '保育猪' as 'type'
        union
        select ifnull((select ifnull(end,0) from doctor_report_fattens where orz_id = #{orgId} and orz_type = 2 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d') limit 1),0)  as end, '育肥猪' as 'type'
    </select>

    <select id="getGroupCunlan" parameterType="long" resultType="map" >
        select ifnull((select sum(end) from doctor_report_resevers where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                           #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '后备猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_boars where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '种公猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_sows where orz_id IN
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '基础母猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_matings where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '配怀母猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_delivers where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '产房母猪' as 'type'
        union
        select ifnull((select sum(piglet_end) from doctor_report_delivers where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '产房仔猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_nurseries where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '保育猪' as 'type'
        union
        select ifnull((select sum(end) from doctor_report_fattens where orz_id in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        and orz_type = 2 and date_type=1 and sum_at = DATE_FORMAT(now(),'%Y-%m-%d')),0) as end, '育肥猪' as 'type'
    </select>
    <select id="getGroupNameById" parameterType="long" resultType="String" >
        select name from doctor_orgs where id = #{orgId}
    </select>
    <select id="staffCount" parameterType="map" resultType="long">
        select  count(1) as count
        from doctor_staffs a
        left join doctor_orgs b1 on a.group_id = b1.id
        left join doctor_orgs b2 on	a.org_id = b2.id
        left join doctor_farms c on a.farm_id = c.id
        where 1 = 1
        <if test="groupId != null and groupId != ''"> and a.group_id = #{groupId}</if>
        <if test="orgId != null and orgId != ''"> and a.org_id = #{orgId}</if>
        <if test="farmId != null and farmId != ''"> and a.farm_id = #{farmId}</if>
        <if test="userName != null and userName != ''"> and a.user_name like  CONCAT(CONCAT('%',#{userName},'%')) </if>
        <if test="mobile != null and mobile != ''"> and a.mobile like  CONCAT(CONCAT('%',#{mobile},'%')) </if>
        <if test="status != null and status != ''"> and a.status = #{status}</if>
    </select>

    <select id="staffQuery" parameterType="map" resultType="map">
        select  d.realname as userName,
                 a.mobile as mobile,
                 b1.`name` as groupName,
                 b2.`name` as orgName,
                 c.name as farmName,
                 a.status as `status`
        from doctor_staffs a
        left join doctor_orgs b1 on a.group_id = b1.id
        left join doctor_orgs b2 on	a.org_id = b2.id
        left join doctor_farms c on a.farm_id = c.id
        left join parana_user_profiles d on a.user_id = d.user_id
        where 1 = 1
        <if test="groupId != null and groupId != ''"> and a.group_id = #{groupId}</if>
        <if test="orgId != null and orgId != ''"> and a.org_id = #{orgId}</if>
        <if test="farmId != null and farmId != ''"> and a.farm_id = #{farmId}</if>
        <if test="userName != null and userName != ''"> and d.realname like  CONCAT(CONCAT('%',#{userName},'%')) </if>
        <if test="mobile != null and mobile != ''"> and a.mobile like  CONCAT(CONCAT('%',#{mobile},'%')) </if>
        <if test="status != null and status != ''"> and a.status = #{status}</if>
        limit #{pageNo},#{pageSize}
    </select>

    <select id="findGroupByOrgId" parameterType="long" resultType="long" >
        select parent_id from doctor_orgs where id = #{groupId}
    </select>


    <select id="getUserType" parameterType="long" resultType="Integer" >
        select user_type from doctor_user_subs  where user_id = #{userId}
    </select>

    <select id="findOrgByParent" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE parent_id = #{parent}
    </select>

</mapper>