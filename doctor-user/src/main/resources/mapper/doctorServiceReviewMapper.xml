<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorServiceReview">
    <resultMap id="DoctorServiceReviewMap" type="DoctorServiceReview">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="user_mobile" property="userMobile"/>
        <result column="real_name" property="realName"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="reviewer_id" property="reviewerId"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        doctor_service_reviews
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        user_id, user_mobile, real_name, `type`, status, reviewer_id, created_at, updated_at
    </sql>

    <sql id="vals">
        #{userId}, #{userMobile}, #{realName}, #{type}, #{status}, #{reviewerId}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorServiceReview" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="initData" parameterType="map">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="types" close="" item="type" open="" separator=",">
            (#{userId}, #{userMobile}, #{realName}, #{type}, 0, null, now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorServiceReviewMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByUserId" parameterType="long" resultMap="DoctorServiceReviewMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE user_id = #{userId}
    </select>

    <select id="findByUserIdAndType" parameterType="map" resultMap="DoctorServiceReviewMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE user_id = #{userId} and `type` = #{type}
    </select>

    <update id="update" parameterType="DoctorServiceReview">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userMobile != null">user_mobile = #{userMobile},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="reviewerId != null">reviewer_id = #{reviewerId},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus" parameterType="map">
        update <include refid="tb"/>
        set status = #{status}, reviewer_id = #{reviewerId}, updated_at = now()
        where user_id = #{userId} and `type` = #{type}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="count" resultType="long">
        select count(1) from <include refid="tb"/>
        <include refid="criteria" />
    </select>

    <select id="paging" resultType="io.terminus.doctor.user.model.DoctorServiceReviewExt">
        SELECT id, user_id as userId, user_mobile as userMobile, real_name as realName, `type`, status, reviewer_id as reviewerId, created_at as createdAt, updated_at as updatedAt
        FROM <include refid="tb" />
        <include refid="criteria" />
        order by `status` desc, updated_at desc
        limit #{offset}, #{limit}
    </select>

    <sql id="criteria">
        where 1 = 1
        <if test="userId != null"> and user_id = #{userId} </if>
        <if test="userMobile != null"> and user_mobile = #{userMobile} </if>
        <if test="realName != null"> and real_name = #{realName} </if>
        <if test="type != null"> and `type` = #{type} </if>
        <if test="status != null"> and status = #{status} </if>
    </sql>

    <update id="updateOrgPidTpye" parameterType="map">
        UPDATE
        doctor_orgs
        SET parent_id = 0 , `type` = 2
        WHERE
        id =#{id}
    </update>
</mapper>