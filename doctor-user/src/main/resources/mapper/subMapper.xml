<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Sub">

    <resultMap id="SubMap" type="Sub">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="real_name" property="realName"/>
        <result column="parent_user_id" property="parentUserId"/>
        <result column="parent_user_name" property="parentUserName"/>
        <result column="farm_id" property="farmId"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="contact" property="contact"/>
        <result column="status" property="status"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="frozen" property="frozen"/>
        <result column="user_type" property="userType"/>
    </resultMap>

    <sql id="tb">
        doctor_user_subs
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
      user_id, user_name, real_name, parent_user_id, parent_user_name, farm_id, role_id, role_name, contact, status, extra_json, created_at, updated_at, frozen,user_type
    </sql>

    <sql id="vals">
        #{userId}, #{userName}, #{realName}, #{parentUserId}, #{parentUserName}, #{farmId}, #{roleId}, #{roleName}, #{contact}, #{status}, #{extraJson}, now(), now(), #{frozen},#{userType}
    </sql>

    <sql id="criteria">
        1 = 1
        <if test="userId != null">AND user_id = #{userId}</if>
        <if test="realName != null">AND real_name like concat('%', #{realName}, '%')</if>
        <if test="userName != null">AND user_name like concat('%', #{userName}, '%')</if>
        <if test="parentUserId != null">AND parent_user_id = #{parentUserId}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="status != null">AND status = #{status}</if>
        <if test="roleId != null">AND role_id = #{roleId}</if>
        <if test="roleName != null">AND role_name like concat('%', #{roleName}, '%')</if>
        <if test="contact != null">AND contact = #{contact}</if>
        <if test="userType != null">AND user_type = #{userType}</if>
    </sql>

    <sql id="frozen">
        <if test="frozen != null">AND `frozen`=#{frozen}</if>
        <if test="frozen == null">AND (`frozen`!=1 OR `frozen` IS NULL)</if>
    </sql>

    <sql id="singleFrozen">
        AND (`frozen`!=1 OR `frozen` IS NULL)
    </sql>

    <insert id="create" parameterType="Sub" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <update id="update" parameterType="Sub">
        UPDATE
        <include refid="tb"/>
        SET
        <if test="userId != null">user_id = #{userId},</if>
        <if test="userName != null">user_name = #{userName},</if>
        <if test="realName != null">real_name = #{realName},</if>
        <if test="parentUserId != null">parent_user_id = #{parentUserId},</if>
        <if test="parentUserName != null">parent_user_name = #{parentUserName},</if>
        <if test="farmId != null">farm_id = #{farmId},</if>
        <if test="roleId != null">role_id = #{roleId},</if>
        <if test="roleName != null">role_name = #{roleName},</if>
        <if test="contact != null">contact = #{contact},</if>
        <if test="status != null">status = #{status},</if>
        <if test="extraJson != null">extra_json = #{extraJson},</if>
        <if test="frozen != null">frozen = #{frozen},</if>
        <if test="userType != null">user_type = #{userType},</if>
        updated_at = now()
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
        <include refid="singleFrozen"/>
    </select>

    <select id="findByParentUserId" parameterType="long" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE parent_user_id = #{parentUserId}
        <include refid="singleFrozen"/>
    </select>

    <select id="findByIds" parameterType="list" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        id IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
        <include refid="singleFrozen"/>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
            <include refid="frozen"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="SubMap">
        SELECT id,
        <include refid="cols_exclude_id"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
            <include refid="frozen"/>
        </where>
        order by status desc
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findByUserId" parameterType="long" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `user_id` = #{userId}
        <include refid="singleFrozen"/>
    </select>

    <select id="findIncludeFrozenByUserId" parameterType="long" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE user_id = #{userId}
    </select>

    <select id="findByParentUserIdAndUserId" parameterType="long" resultMap="SubMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `user_id` = #{userId} and `parent_user_id` = #{parentUserId}
        <include refid="singleFrozen"/>
    </select>

    <select id="findAllActiveSubs" resultMap="SubMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE `status` = 1
        <include refid="singleFrozen"/>
    </select>

    <select id="findByConditions" parameterType="map" resultMap="SubMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
            <include refid="frozen"/>
        </where>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="findSubsByFarmId" parameterType="long" resultMap="SubMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            farm_id = #{farmId}
            <include refid="singleFrozen"/>
        </where>
    </select>

    <delete id="deleteByFarmId" parameterType="long">
        DELETE
        FROM
        <include refid="tb"/>
        WHERE farm_id = #{farmId}
    </delete>

    <update id="updateRoleName" parameterType="map">
        update <include refid="tb"/>
        set role_name = #{roleName}
        where role_id = #{roleId}
    </update>

    <delete id="delete" parameterType="long" >
        DELETE
        FROM <include refid="tb"/>
        WHERE
        id = #{id}
    </delete>

    <select id="findSubsByFarmIdAndStatus" parameterType="map" resultMap="SubMap" >
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            farm_id = #{farmId}
            AND status = #{status}
            <if test="userId != null">
            AND  user_id != #{userId}
            </if>
            <include refid="frozen"/>
        </where>
    </select>

    <!-- 软件登陆人员是谁，仓库单据操作人就默认是谁，并支持修改 （陈娟 2018-09-13） -->
    <select id="findSubsByFarmIdAndStatusAndUserId" parameterType="map" resultMap="SubMap" >
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            farm_id = #{farmId}
            AND status = #{status}
            AND  user_id = #{userId}
            <include refid="frozen"/>
        </where>
    </select>

    <update id="freezeByUser" parameterType="long" >
        UPDATE
        <include refid="tb"/>
        set frozen = 1
        where user_id = #{userId}
    </update>

    <!--得到导入时猪场里面的账号-公司账号（陈娟 2018-10-10）-->
    <select id="selectDefaultUser" parameterType="Long" resultMap="SubMap">
        select * from doctor_user_subs where farm_id = #{farmId} and user_type=2
    </select>

    <!--根据记录操作人的Id得到用户（陈娟 2018-10-10）-->
    <select id="findSubsByStatusAndUserId" parameterType="map" resultMap="SubMap" >
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where> status = #{status}
            AND  user_id = #{userId}
            <include refid="frozen"/>
        </where>
    </select>
</mapper>