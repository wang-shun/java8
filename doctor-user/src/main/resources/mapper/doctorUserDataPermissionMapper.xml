<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorUserDataPermission">
    <resultMap id="DoctorUserDataPermissionMap" type="DoctorUserDataPermission">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="farm_ids" property="farmIds"/>
        <result column="barn_ids" property="barnIds"/>
        <result column="org_ids" property="orgIds"/>
        <result column="group_ids" property="groupIds"/>
        <result column="ware_house_types" property="wareHouseTypes"/>
        <result column="extra" property="extra"/>
        <result column="creator_id" property="creatorId"/>
        <result column="creator_name" property="creatorName"/>
        <result column="updator_id" property="updatorId"/>
        <result column="updator_name" property="updatorName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        doctor_user_data_permissions
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        user_id, farm_ids, barn_ids,org_ids,group_ids, ware_house_types, extra, creator_id, creator_name, updator_id, updator_name, created_at, updated_at
    </sql>

    <sql id="vals">
        #{userId}, #{farmIds}, #{barnIds},#{orgIds},#{groupIds},#{wareHouseTypes}, #{extra}, #{creatorId}, #{creatorName}, #{updatorId}, #{updatorName}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorUserDataPermission" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorUserDataPermissionMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByUserIds" parameterType="long" resultMap="DoctorUserDataPermissionMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE user_id in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </select>

    <select id="findByUserId" parameterType="long" resultMap="DoctorUserDataPermissionMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE user_id = #{userId}
    </select>

    <update id="update" parameterType="DoctorUserDataPermission">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="farmIds != null">farm_ids = #{farmIds},</if>
            <if test="barnIds != null">barn_ids = #{barnIds},</if>
            <if test="orgIds != null">org_ids = #{orgIds},</if>
            <if test="groupIds != null">group_ids = #{groupIds},</if>
            <if test="wareHouseTypes != null">ware_house_types = #{wareHouseTypes},</if>
            <if test="extra != null">extra = #{extra},</if>
            <if test="creatorId != null">creator_id = #{creatorId},</if>
            <if test="creatorName != null">creator_name = #{creatorName},</if>
            <if test="updatorId != null">updator_id = #{updatorId},</if>
            <if test="updatorName != null">updator_name = #{updatorName},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findByOrgId" parameterType="long" resultMap="DoctorUserDataPermissionMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE find_in_set(#{orgId}, org_ids)
    </select>

    <select id="findByFarmId" parameterType="long" resultMap="DoctorUserDataPermissionMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE find_in_set(#{farmId}, farm_ids)
    </select>

    <select id="findAll" resultMap="DoctorUserDataPermissionMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
    </select>

    <delete id="deletesByUserIds" parameterType="long" >
        DELETE
        FROM <include refid="tb" />
        WHERE user_id IN
        <foreach collection="list" item="userId" open="(" separator="," close=")" >
            #{userId}
        </foreach>
    </delete>

    <select id="findByFarmAndPrimary" parameterType="map" resultMap="DoctorUserDataPermissionMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE find_in_set(#{farmId}, farm_ids)
        AND user_id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <update id="freezeByUser" parameterType="long" >
        UPDATE
        <include refid="tb"/>
        set frozen = 1
        where user_id = #{userId}
    </update>
</mapper>