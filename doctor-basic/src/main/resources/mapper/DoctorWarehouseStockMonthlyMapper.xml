<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-04-19 17:05:11
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorWarehouseStockMonthly">
    <resultMap id="DoctorWarehouseStockMonthlyMap" type="DoctorWarehouseStockMonthly">
        <id property="id" column="id"/>
        <result property="orgId" column="org_id"/>
        <result property="farmId" column="farm_id"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="materialId" column="material_id"/>
        <result property="balanceQuantity" column="balance_quantity"/>
        <result property="balanceAmount" column="balance_amount"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_warehouse_stock_monthly
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `org_id`, `farm_id`, `warehouse_id`, `material_id`, `balance_quantity`, `balance_amount`, `settlement_date`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{orgId}, #{farmId}, #{warehouseId}, #{materialId}, #{balanceQuantity}, #{balanceAmount}, #{settlementDate}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="balanceQuantity != null">AND `balance_quantity` = #{balanceQuantity}</if>
            <if test="balanceAmount != null">AND `balance_amount` = #{balanceAmount}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorWarehouseStockMonthly" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWarehouseStockMonthly">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
            <if test="materialId != null">`material_id` = #{materialId},</if>
            <if test="balanceQuantity != null">`balance_quantity` = #{balanceQuantity},</if>
            <if test="balanceAmount != null">`balance_amount` = #{balanceAmount},</if>
            <if test="settlementDate != null">`settlement_date` = #{settlementDate},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="statistics" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        sum(balance_quantity) as balanceQuantity,sum(balance_amount) as balanceAmount,warehouse_id,material_id
        FROM
        <include refid="tb"/>
        <where>
            <if test="warehouseId !=null">
                AND warehouse_id=#{warehouseId}
            </if>
            <if test="warehouseIds !=null and warehouseIds.size() >0">
                AND
                <foreach collection="warehouseIds" item="t" open="(" separator="or" close=")">
                    warehouse_id=#{t}
                </foreach>
            </if>
            <if test="skuId !=null">
                AND material_id=#{skuId}
            </if>
        </where>
        GROUP BY warehouse_id,material_id
    </select>

    <select id="statisticsGroupBySku" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        material_id,sum(balance_amount) as balanceAmount,sum(balance_quantity) as balanceQuantity
        FROM
        <include refid="tb"/>
        where warehouse_id =#{warehouseId}
        <if test="handleDate !=null">AND <![CDATA[handle_date<=#{handleDate}]]></if>
        GROUP BY material_id
    </select>

    <select id="statisticsWarehouse" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        warehouse_id,sum(balance_amount) as balanceAmount,sum(balance_quantity) as balanceQuantity
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        and <![CDATA[handle_date<=#{handleDate}]]>
    </select>

    <delete id="reverseSettlement" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE org_id=#{orgId}
        AND settlement_date=#{settlementDate}
    </delete>

    <select id="findBalanceBySettlementDate" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        AND settlement_date=#{settlementDate}
    </select>

    <select id="findEachWarehouseBalanceBySettlementDate" parameterType="map" resultType="map">
        select sum(balance_amount) as amount ,sum(balance_quantity) as quantity,warehouse_id as warehouseId,material_id as materialId
        FROM <include refid="tb"/>
        where org_id=#{orgId}
        and <![CDATA[settlement_date<=#{settlementDate}]]>
        group by warehouse_id,material_id;
    </select>

    <select id="findWarehouseBalanceBySettlementDate" parameterType="map" resultType="map">
        select balance_amount as amount ,balance_quantity as quantity,warehouse_id as warehouseId,material_id as materialId
        FROM <include refid="tb"/>
        where org_id=#{orgId}
        and settlement_date = #{settlementDate}
        group by warehouse_id,material_id;
    </select>

    <select id="findWarehouseIdByOrgId" parameterType="map" resultType="map">
        select DISTINCT warehouse_id from doctor_warehouse_stock_monthly where org_id=#{orgId} and settlement_date = #{settlementDate}
    </select>

    <select id="copyDoctorWarehouseWtockMonthly" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        select * from doctor_warehouse_stock_monthly where warehouse_id=#{warehouseId} and settlement_date = #{lastSettlementDate} and material_id not in(
	      select DISTINCT material_id from doctor_warehouse_material_handle where delete_flag=1 and  settlement_date = #{settlementDate} and warehouse_id=#{warehouseId})
    </select>

    <select id="listByHouseIdTime" parameterType="map" resultType="map">
       select a.farm_id as farmId,a.warehouse_id as warehouseId,a.warehouse_name as warehouseName,
         a.handle_year as handleYear,a.handle_month as handleMonth,a.org_id as orgId,a.settlement_date as settlementDate,
         ifnull(ROUND((temp1.inAmount+ 0.00000001),2),0) as inAmount,
         ifnull(ROUND((temp2.outAmount+ 0.00000001),2),0) as outAmount,
         ifnull(ROUND((temp3.balanceAmount+ 0.00000001),2),0) as balanceAmount

        from doctor_warehouse_material_handle a

        left join (SELECT ifnull(sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
            when '11' then amount end	),0) as inAmount,
            warehouse_id FROM doctor_warehouse_material_handle
            WHERE farm_id = #{farmId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by warehouse_id
        ) temp1 on a.warehouse_id = temp1.warehouse_id

        left join (SELECT ifnull(sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
	        when '12' then amount	when '13' then amount end	),0) as outAmount,
            warehouse_id FROM doctor_warehouse_material_handle
            WHERE farm_id = #{farmId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by warehouse_id
        ) temp2 on a.warehouse_id = temp2.warehouse_id

        left join (select sum(b.balance_amount) as balanceAmount,b.warehouse_id
            from doctor_warehouse_stock_monthly b
            where b.farm_id = #{farmId}
            and date_format(b.settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
            GROUP BY b.warehouse_id
        ) temp3 on a.warehouse_id = temp3.warehouse_id

        where a.delete_flag = 1
        and a.farm_id = #{farmId}
        and date_format(a.settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
        GROUP BY a.warehouse_id

        <!--仓库报表（陈娟 2018-9-12）-->
        union all

		select a.farm_id as farmId,a.warehouse_id as warehouseId,b.ware_house_name as warehouseName,
          YEAR(a.settlement_date) as handleYear,MONTH(a.settlement_date) as handleMonth,a.org_id as orgId,a.settlement_date as settlementDate,
          0 as inAmount,
          0 as outAmount,
          sum(a.balance_amount) as balanceAmount

        from doctor_warehouse_stock_monthly as a
        inner join doctor_ware_houses as b
        on a.warehouse_id=b.id

        where  a.farm_id = #{farmId}
        and date_format(a.settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
        and a.warehouse_id not in(
            select DISTINCT warehouse_id from doctor_warehouse_material_handle
            where farm_id = #{farmId} and DATE_FORMAT(settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
        )
        GROUP BY a.warehouse_id
    </select>

    <select id="monthWarehouseDetail" parameterType="map" resultType="map">
        <!--1.本月已结算，上月已结算-->
        <if test=" flag==1 and lastFlag==1 ">
            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((temp1.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            ifnull(round((temp1.balance_amount+ 0.00000001),2),0) as lastAmount,
            ifnull(round((ifnull(temp1.balance_quantity,0)+ifnull(temp3.inQuantity,0)-ifnull(temp4.outQuantity,0)+ 0.00000001),3),0) as balanceQuantity,
            ifnull(round((ifnull(temp1.balance_amount,0)+ifnull(temp3.inAmount,0)-ifnull(temp4.outAmount,0)+ 0.00000001),2),0) as balanceAmount,

            ifnull(round((temp3.inAmount+ 0.00000001),2),0) as inAmount,
            ifnull(round((temp3.inQuantity+ 0.00000001),3),0) as inQuantity,
            ifnull(round((temp4.outAmount+ 0.00000001),2),0) as outAmount,
            ifnull(round((temp4.outQuantity+ 0.00000001),3),0) as outQuantity,

            db.name as unit
            from doctor_warehouse_material_handle a
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            left join (
            select c.balance_quantity,c.balance_amount,c.material_id,c.warehouse_id
            from doctor_warehouse_stock_monthly c
            where c.warehouse_id = #{warehouseId}
            and date_format(c.settlement_date,'%Y-%m')=date_format(date_sub(#{settlementDate}, interval 1 month),'%Y-%m')
            GROUP BY c.material_id
            )temp1 on a.material_id = temp1.material_id and a.warehouse_id=temp1.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
            when '11' then amount end	),0) as inAmount,
            ifnull(sum(case type	when '1' then quantity 	when '7' then quantity 	when '9' then quantity
            when '11' then quantity end	),0) as inQuantity,material_id,warehouse_id FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} and date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp3 on a.material_id = temp3.material_id and a.warehouse_id=temp3.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
            when '12' then amount	when '13' then amount end	),0) as outAmount,
            ifnull(sum(case type	when '2' then quantity	 when '8' then quantity	when '10' then quantity
            when '12' then quantity	when '13' then quantity end	),0) as outQuantity,material_id,warehouse_id FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp4 on a.material_id = temp4.material_id and a.warehouse_id=temp4.warehouse_id

            where a.delete_flag=1
            and a.warehouse_id = #{warehouseId}
            and DATE_FORMAT(a.settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
            group by a.material_id

            UNION ALL

            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((sm.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            ifnull(round((sm.balance_amount+ 0.00000001),2),0) as lastAmount,
            ifnull(round((sm.balance_quantity+ 0.00000001),3),0) as balanceQuantity,
            ifnull(round((sm.balance_amount+ 0.00000001),2),0) as balanceAmount,

            0 as inAmount,
            0 as inQuantity,
            0 as outAmount,
            0 as outQuantity,

            db.name as unit
            from doctor_warehouse_stock_monthly sm
            left join doctor_warehouse_material_handle a
            on a.farm_id=sm.farm_id and a.warehouse_id=sm.warehouse_id and a.material_id=sm.material_id
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            where sm.warehouse_id = #{warehouseId} and sm.balance_quantity!=0
            and date_format(sm.settlement_date,'%Y-%m')=date_format(date_sub(#{settlementDate}, interval 1 month),'%Y-%m')
            and sm.material_id not in(
            select DISTINCT material_id from doctor_warehouse_material_handle
            where warehouse_id = #{warehouseId} and DATE_FORMAT(settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
            )
            GROUP BY sm.material_id
        </if>

        <!--2.本月未结算，上月已结算-->
        <if test=" flag==0 and lastFlag==1 ">
            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((temp1.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            ifnull(round((temp1.balance_amount+ 0.00000001),2),0) as lastAmount,
            ifnull(round((ifnull(temp1.balance_quantity,0)+ifnull(temp3.inQuantity,0)-ifnull(temp4.outQuantity,0)+ 0.00000001),3),0) as balanceQuantity,
            '--' as balanceAmount,

            ifnull(round((temp3.inAmount+ 0.00000001),2),0) as inAmount,
            ifnull(round((temp3.inQuantity+ 0.00000001),3),0) as inQuantity,
            '--' as outAmount,
            ifnull(round((temp4.outQuantity+ 0.00000001),3),0) as outQuantity,

            db.name as unit
            from doctor_warehouse_material_handle a
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            left join (
            select c.balance_quantity,c.balance_amount,c.material_id,c.warehouse_id
            from doctor_warehouse_stock_monthly c
            where c.warehouse_id = #{warehouseId}
            and date_format(c.settlement_date,'%Y-%m')=date_format(date_sub(#{settlementDate}, interval 1 month),'%Y-%m')
            GROUP BY c.material_id
            )temp1 on a.material_id = temp1.material_id and a.warehouse_id=temp1.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
            when '11' then amount end	),0) as inAmount,
            ifnull(sum(case type	when '1' then quantity 	when '7' then quantity	 when '9' then quantity
            when '11' then quantity end	),0) as inQuantity,material_id,warehouse_id FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} and date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp3 on a.material_id = temp3.material_id and a.warehouse_id=temp3.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
            when '12' then amount	when '13' then amount end	),0) as outAmount,
            ifnull(sum(case type	when '2' then quantity	 when '8' then quantity	when '10' then quantity
            when '12' then quantity	when '13' then quantity end	),0) as outQuantity,material_id,warehouse_id
            FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp4 on a.material_id = temp4.material_id and a.warehouse_id=temp4.warehouse_id

            where a.delete_flag=1
            and a.warehouse_id = #{warehouseId}
            and DATE_FORMAT(a.settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
            group by a.material_id

            UNION ALL

            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((sm.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            ifnull(round((sm.balance_amount+ 0.00000001),2),0) as lastAmount,
            ifnull(round((sm.balance_quantity+ 0.00000001),3),0) as balanceQuantity,
            '--' as balanceAmount,

            0 as inAmount,
            0 as inQuantity,
            '--' as outAmount,
            0 as outQuantity,

            db.name as unit
            from doctor_warehouse_stock_monthly sm
            left join doctor_warehouse_material_handle a
            on a.farm_id=sm.farm_id and a.warehouse_id=sm.warehouse_id and a.material_id=sm.material_id
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            where sm.warehouse_id = #{warehouseId} and sm.balance_quantity!=0
            and date_format(sm.settlement_date,'%Y-%m')=date_format(date_sub(#{settlementDate}, interval 1 month),'%Y-%m')
            and sm.material_id not in(
            select DISTINCT material_id from doctor_warehouse_material_handle
            where warehouse_id = #{warehouseId} and DATE_FORMAT(settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
            )
            GROUP BY sm.material_id
        </if>

        <!--3.本月未结算，上月未结算-->
        <if test=" flag==0 and lastFlag==0 ">
            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((temp1.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            '--' as lastAmount,
            ifnull(round((ifnull(temp1.balance_quantity,0)+ifnull(temp3.inQuantity,0)-ifnull(temp4.outQuantity,0)+ 0.00000001),3),0) as balanceQuantity,
            '--' as balanceAmount,

            ifnull(round((temp3.inAmount+ 0.00000001),2),0) as inAmount,
            ifnull(round((temp3.inQuantity+ 0.00000001),3),0) as inQuantity,
            '--' as outAmount,
            ifnull(round((temp4.outQuantity+ 0.00000001),3),0) as outQuantity,

            db.name as unit
            from doctor_warehouse_material_handle a
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            left join (
            SELECT ifnull(sum( case mh.type	when '1' then quantity  when '2' then -quantity	when '7' then quantity 	when '8' then -quantity
            when '9' then quantity 	when '10' then -quantity	when '11' then quantity	when '12' then -quantity	when '13' then -quantity end	),0)
            as balance_quantity,material_id,warehouse_id	FROM doctor_warehouse_material_handle as mh
            inner join doctor_warehouse_sku as s	on mh.material_id=s.id
            WHERE delete_flag=1 AND mh.warehouse_id=#{warehouseId}
            AND <![CDATA[ date_format(settlement_date,'%Y-%m')<=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')]]>
            GROUP BY material_id
            )temp1 on a.material_id = temp1.material_id and a.warehouse_id=temp1.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
            when '11' then amount end	),0) as inAmount,
            ifnull(sum(case type	when '1' then quantity 	when '7' then quantity 	when '9' then quantity
            when '11' then quantity end	),0) as inQuantity,material_id,warehouse_id FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} and date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp3 on a.material_id = temp3.material_id and a.warehouse_id=temp3.warehouse_id

            left join (
            SELECT ifnull(sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
            when '12' then amount	when '13' then amount end	),0) as outAmount,
            ifnull(sum(case type	when '2' then quantity	 when '8' then quantity	when '10' then quantity
            when '12' then quantity	when '13' then quantity end	),0) as outQuantity,material_id,warehouse_id
            FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
            )temp4 on a.material_id = temp4.material_id and a.warehouse_id=temp4.warehouse_id

            where a.delete_flag=1
            and a.warehouse_id = #{warehouseId}
            and DATE_FORMAT(a.settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M')
            group by a.material_id

            UNION ALL

            select b.id as materialId,b.name as materialName,b.code as code,v.short_name as vendorName,
            b.specification as specification,a.warehouse_id as warehouseId,a.warehouse_type as warehouseType,
            ifnull(round((temp.balance_quantity+ 0.00000001),3),0) as lastQuantity,
            '--' as lastAmount,
            ifnull(round((temp.balance_quantity+ 0.00000001),3),0) as balanceQuantity,
            '--' as balanceAmount,

            0 as inAmount,
            0 as inQuantity,
            '--' as outAmount,
            0 as outQuantity,

            db.name as unit
            from doctor_warehouse_material_handle a
            left join doctor_warehouse_sku b
            on a.material_id = b.id and a.org_id=b.org_id
            left join doctor_basics db
            on a.unit = db.id
            left join doctor_warehouse_vendor as v
            on v.id=b.vendor_id

            left join(
            SELECT ifnull(sum( case mh.type	when '1' then quantity when '2' then -quantity	when '7' then quantity  when '8' then -quantity
            when '9' then quantity	 when '10' then -quantity	when '11' then quantity	when '12' then -quantity	when '13' then -quantity end	),0)
            as balance_quantity,material_id,warehouse_id	FROM doctor_warehouse_material_handle as mh
            inner join doctor_warehouse_sku as s	on mh.material_id=s.id
            WHERE delete_flag=1 AND mh.warehouse_id=#{warehouseId}
            AND <![CDATA[ date_format(settlement_date,'%Y-%m')<=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')]]>
            GROUP BY material_id
            )temp on a.material_id=temp.material_id and a.warehouse_id=temp.warehouse_id

            where a.warehouse_id = #{warehouseId} and temp.balance_quantity!=0
            and temp.material_id not in(
            select DISTINCT material_id from doctor_warehouse_material_handle
            where warehouse_id = #{warehouseId} and DATE_FORMAT(settlement_date,'%Y-%M') = DATE_FORMAT(#{settlementDate},'%Y-%M') order by material_id
            )
            GROUP BY a.material_id

        </if>
    </select>

    <sql id="detail">
        ifnull((select c.balance_quantity
         from doctor_warehouse_stock_monthly c
         where c.warehouse_id = a.warehouse_id
         and c.material_id = a.material_id
         and c.settlement_date = date_sub(a.settlement_date, interval 1 month)
        ),0) as lastQuantity,
        ifnull((select d.balance_amount
        from doctor_warehouse_stock_monthly d
        where d.warehouse_id = a.warehouse_id
        and d.material_id = a.material_id
        and d.settlement_date = date_sub(a.settlement_date, interval 1 month)
        ),0) as lastAmount,
       ifnull((select  sum(e.amount)
        from doctor_warehouse_material_handle e
        where e.farm_id = a.farm_id
        and e.warehouse_id = a.warehouse_id
        and e.material_id = a.material_id
        and e.settlement_date = a.settlement_date
        and e.delete_flag = 1
        and e.type in (
            1,7,9,11,13
        )
        ),0) as inAmount,
        ifnull((select  sum(f.quantity)
        from doctor_warehouse_material_handle f
        where f.farm_id = a.farm_id
        and f.warehouse_id = a.warehouse_id
        and f.material_id = a.material_id
        and f.settlement_date = a.settlement_date
        and f.delete_flag = 1
        and f.type in (
            1,7,9,11,13
        )
        ),0) as inQuantity,
        ifnull((select  sum(g.amount)
            from doctor_warehouse_material_handle g
            where g.farm_id = a.farm_id
            and g.warehouse_id = a.warehouse_id
            and g.material_id = a.material_id
            and g.settlement_date = a.settlement_date
            and g.delete_flag = 1
            and g.type in (
                 2,8,10,12
            )
        ),0) as outAmount,
        ifnull((select  sum(h.quantity)
            from doctor_warehouse_material_handle h
            where h.farm_id = a.farm_id
            and h.warehouse_id = a.warehouse_id
            and h.material_id = a.material_id
            and h.settlement_date = a.settlement_date
            and h.delete_flag = 1
            and h.type in (
                 2,8,10,12
            )
        ),0) as outQuantity,
       ifnull((select l.balance_quantity
         from doctor_warehouse_stock_monthly l
         where l.warehouse_id = a.warehouse_id
         and l.material_id = a.material_id
         and l.settlement_date = a.settlement_date
        ),0) as balanceQuantity,
       ifnull((select i.balance_amount
         from doctor_warehouse_stock_monthly i
         where i.warehouse_id = a.warehouse_id
         and i.material_id = a.material_id
         and i.settlement_date = a.settlement_date
        ),0) as balanceAmount,
    </sql>

    <sql id ="balanceAmount">
        (select ifnull(sum(b.balance_amount),0)
         from doctor_warehouse_stock_monthly b
         where b.warehouse_id = a.warehouse_id
         and b.settlement_date = a.settlement_date
        )as balanceAmount
    </sql>

    <sql id="inAmount">
         (select  ifnull(sum(c.amount),0)
            from doctor_warehouse_material_handle c
            where c.farm_id = a.farm_id
            and c.warehouse_id = a.warehouse_id
            and c.delete_flag = 1
            and c.settlement_date = a.settlement_date
            and c.type in (
                1,7,9,11,13
            )
        ) as inAmount,
    </sql>

    <sql id="outAmount">
         (select  ifnull(sum(d.amount),0)
            from doctor_warehouse_material_handle d
            where d.farm_id = a.farm_id
            and d.warehouse_id = a.warehouse_id
            and d.delete_flag = 1
            and d.settlement_date = a.settlement_date
            and d.type in (
                 2,8,10,12
            )
        ) as outAmount,
    </sql>


</mapper>
