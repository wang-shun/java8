<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DataAuth">

    <select id="selGroups" resultType="map">
        select distinct id,`name` as groupName from doctor_orgs where type =1
    </select>

    <select id="selOrgs" parameterType="Integer" resultType="map">
        select distinct id,`name` as orgName from doctor_orgs where type =2 and parent_id = #{groupId}
    </select>

    <select id="selFarms" parameterType="Integer" resultType="map">
        select distinct id,`name` as farmName from doctor_farms where  org_id = #{orgId}
    </select>

    <select id="getUserRoleInfoCount" parameterType="Map" resultType="Integer">
        select count(1) as ct
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        left join doctor_staffs d on b.user_id=d.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        <if test="userId != null and userId != '' ">
            and a.id like CONCAT(CONCAT('%',#{userId}),'%')
        </if>
        <if test="userName != null and userName != ''">
            and a.`name` like CONCAT(CONCAT('%',#{userName}),'%')
        </if>
        <if test="mobile != null and mobile != ''">
            and a.mobile like CONCAT(CONCAT('%',#{mobile}),'%')
        </if>
        <if test="userType != null and userType != ''">
            and b.user_type = #{userType}
        </if>
    </select>

    <select id="getUserRoleInfo" parameterType="Map" resultType="Map">
        select a.id,a.`name` as userName,b.real_name as realName,a.mobile,
        b.user_type as userType,c.id as roleId,c.`name` as roleName,d.group_id as groupId,
        d.org_id as orgId,d.farm_id as farmId,b.status
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        left join doctor_staffs d on b.user_id=d.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        <if test="userId != null and userId != '' ">
            and a.id like CONCAT(CONCAT('%',#{userId}),'%')
        </if>
        <if test="userName != null and userName != ''">
            and a.`name` like CONCAT(CONCAT('%',#{userName}),'%')
        </if>
        <if test="mobile != null and mobile != ''">
            and a.mobile like CONCAT(CONCAT('%',#{mobile}),'%')
        </if>
        <if test="userType != null and userType != ''">
            and b.user_type = #{userType}
        </if>
        order by a.id desc
        limit ${pageNo},${pageSize}
    </select>

    <select id="userSingleRoleInfo" parameterType="Integer" resultType="Map">
        select
        b.role_id as roleId,
        a.`name` as userName,
        b.real_name as realName,
        a.mobile,
        b.user_type as userType,
        a.password
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        and a.id = #{userId}
    </select>

    <!-- 新增用户 -->
    <insert id="insertUser" parameterType="Map" >
        insert into parana_users(`name`,mobile,password,`type`,status,created_at,updated_at)
        values(#{userName},#{mobile},#{password},6,1,now(),now())
    </insert>

    <select id="selectUserById" parameterType="String" resultType="Integer">
        select id from parana_users where id = #{userId}
    </select>

    <select id="selectUserByName" parameterType="String" resultType="Integer">
        select id from parana_users where `name` = #{userName}
    </select>

    <select id="selectUserByMobile" parameterType="String" resultType="Integer">
        select id from parana_users where mobile = #{mobile}
    </select>

    <insert id="insertUserRole" parameterType="Map">
        insert into doctor_user_subs(user_id,user_name,real_name,role_id,user_type,status,created_at,updated_at,role_name,contact,parent_user_id)
        values(#{userId},#{userName},#{realName},#{roleId},#{userType},1,now(),now(),#{roleName},#{mobile},91)
    </insert>

    <insert id="insertUserStaff" parameterType="Map">
        insert into doctor_staffs(user_id,group_id,
        <if test="orgId != null and orgId != ''">
          org_id,
        </if>
        status,created_at,updated_at,user_name,mobile)
        values(#{userId},#{groupId},
        <if test="orgId != null and orgId != ''">
          #{orgId},
        </if>
        1,now(),now(),#{realName},#{mobile})
    </insert>

    <!-- 修改用户 -->
    <update id="updateUser" parameterType="Map">
        update parana_users set
        <if test="mobile != null and mobile != ''">
            mobile = #{mobile},
        </if>
        <if test="password != null and password != ''">
            password = #{password},
        </if>
        <if test="status != null and status != '' and status == 0">
        status = -1,
        </if>
        <if test="status != null and status != '' and status == 1">
            status = 1,
        </if>
        <if test="userName != null and userName != ''">
            name = #{userName},
        </if>
        updated_at=now()
        where id = #{userId}
    </update>

    <!-- 修改用户 -->
    <update id="updateUserRole" parameterType="Map">
        update doctor_user_subs set real_name = #{realName},role_id = #{roleId},user_type=#{userType},updated_at=now(),
        role_name=#{roleName},status = #{status},contact=#{mobile},user_name=#{userName}
        where user_id = #{userId}
    </update>

    <update id="updateUserStaff" parameterType="Map">
        update doctor_staffs set group_id = #{groupId},
        <if test="orgId != null and orgId != ''">
        org_id = #{orgId},
        </if>
        updated_at=now()
        <if test="mobile != null and mobile != ''">
            ,mobile = #{mobile}
        </if>
        <if test="status != null and status != ''">
            ,status = #{status}
        </if>
        where user_id = #{userId}
    </update>

    <!-- 数据范围授权接口 -->
    <select id="selectAllGroups" resultType="Map">
        select id as groupId,`name` as groupName from doctor_orgs where type=1 order by id
    </select>

    <select id="selectOrgs" parameterType="Map" resultType="Map">
        select id as orgId,`name` as orgName from doctor_orgs where type=2 and parent_id=#{groupId} order by id
    </select>

    <select id="selectFarms" resultType="Map">
        select id as farmId,`name` as farmName from doctor_farms where org_id=#{orgId} order by id
    </select>

    <select id="selectUserPermission" parameterType="Integer" resultType="Map">
            select group_ids,org_ids,farm_ids from doctor_user_data_permissions
            where user_id=#{userId}
    </select>

    <select id="selectUserType" parameterType="Integer" resultType="String">
        select user_type from doctor_user_subs where user_id=#{userId}
    </select>

    <!-- 批量操作数据范围授权接口 -->
    <delete id="deletePerssion" parameterType="Integer">
        delete from doctor_user_data_permissions where user_id in
        <foreach item="user_IdItem" collection="array" open="(" separator="," close=")">
            #{user_IdItem}
        </foreach>
    </delete>

    <update id="updateSubUserType" parameterType="java.util.List">
        update doctor_user_subs set
          <foreach item="item" collection="list" separator="," >
              user_type = #{item.userType},updated_at=now()
          </foreach>
        where user_id in
        <foreach item="item" collection="list" open="(" separator="," close=")">
            #{item.userId}
        </foreach>
    </update>

    <insert id="insertPerssion" parameterType="java.util.List">
        insert into doctor_user_data_permissions(user_id,group_ids,org_ids,farm_ids,barn_ids,created_at,updated_at)
        values
        <foreach collection="list" item="item" index="index"
                 separator=",">
            (
              #{item.userId},#{item.groupIds},#{item.orgIds},#{item.farmIds},#{item.barnIds},now(),now()
            )
        </foreach>
    </insert>

    <select id="getOrgIdList" parameterType="Long" resultType="Long">
        select org_id from doctor_farms
        where id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="getGroupIdList" parameterType="Long" resultType="Long">
        select parent_id from doctor_orgs
        where id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <select id="getBarnIdList" parameterType="Long" resultType="Long">
        select id from doctor_barns
        where farm_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!--user profile 的新增与编辑（陈娟 2018-09-16）-->
    <insert id="insertUserProfile" parameterType="Map">
        insert into parana_user_profiles (user_id,realname,created_at,updated_at) VALUES(#{userId},#{realName},NOW(),NOW())
    </insert>

    <update id="updateUserProfile" parameterType="Map">
        update parana_user_profiles set
        <if test="realName != null and realName != ''">
            realname = #{realName},
        </if>
        updated_at=NOW()
        where user_id = #{userId}
    </update>
</mapper>