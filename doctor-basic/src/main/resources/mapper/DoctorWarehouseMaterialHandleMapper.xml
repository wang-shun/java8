<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-04-19 19:40:59
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorWarehouseMaterialHandle">
    <resultMap id="DoctorWarehouseMaterialHandleMap" type="DoctorWarehouseMaterialHandle">
        <id property="id" column="id"/>
        <result property="stockHandleId" column="stock_handle_id"/>
        <result property="orgId" column="org_id"/>
        <result property="farmId" column="farm_id"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="warehouseType" column="warehouse_type"/>
        <result property="warehouseName" column="warehouse_name"/>
        <result property="relMaterialHandleId" column="rel_material_handle_id"/>
        <result property="vendorName" column="vendor_name"/>
        <result property="materialId" column="material_id"/>
        <result property="materialName" column="material_name"/>
        <result property="type" column="type"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="unit" column="unit"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="beforeStockQuantity" column="before_stock_quantity"/>
        <result property="quantity" column="quantity"/>
        <result property="handleDate" column="handle_date"/>
        <result property="handleYear" column="handle_year"/>
        <result property="handleMonth" column="handle_month"/>
        <result property="operatorId" column="operator_id"/>
        <result property="operatorName" column="operator_name"/>
        <result property="remark" column="remark"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="amount" column="amount"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_warehouse_material_handle
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `stock_handle_id`, `org_id`, `farm_id`, `warehouse_id`, `warehouse_type`, `warehouse_name`, `rel_material_handle_id`, `vendor_name`, `material_id`, `material_name`, `type`, `unit_price`, `unit`, `delete_flag`, `before_stock_quantity`, `quantity`, `handle_date`, `handle_year`, `handle_month`, `operator_id`, `operator_name`, `remark`, `settlement_date`, `amount`,
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{stockHandleId}, #{orgId}, #{farmId}, #{warehouseId}, #{warehouseType}, #{warehouseName}, #{relMaterialHandleId}, #{vendorName}, #{materialId}, #{materialName}, #{type}, #{unitPrice}, #{unit}, #{deleteFlag}, #{beforeStockQuantity}, #{quantity}, #{handleDate}, #{handleYear}, #{handleMonth}, #{operatorId}, #{operatorName}, #{remark}, #{settlementDate}, #{amount},
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="stockHandleId != null">AND `stock_handle_id` = #{stockHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="relMaterialHandleId != null">AND `rel_material_handle_id` = #{relMaterialHandleId}</if>
            <if test="vendorName != null">AND `vendor_name` = #{vendorName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="deleteFlag != null">AND `delete_flag` = #{deleteFlag}</if>
            <if test="beforeStockQuantity != null">AND `before_stock_quantity` = #{beforeStockQuantity}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="handleDate != null">AND `handle_date` = #{handleDate}</if>
            <if test="handleYear != null">AND `handle_year` = #{handleYear}</if>
            <if test="handleMonth != null">AND `handle_month` = #{handleMonth}</if>
            <if test="operatorId != null">AND `operator_id` = #{operatorId}</if>
            <if test="operatorName != null">AND `operator_name` = #{operatorName}</if>
            <if test="remark != null">AND `remark` = #{remark}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <sql id="adv_criteria">
        <where>
            <if test="stockHandleId != null">AND `stock_handle_id` = #{stockHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="relMaterialHandleId != null">AND `rel_material_handle_id` = #{relMaterialHandleId}</if>
            <if test="vendorName != null">AND `vendor_name` = #{vendorName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="deleteFlag != null">AND `delete_flag` = #{deleteFlag}</if>
            <if test="beforeStockQuantity != null">AND `before_stock_quantity` = #{beforeStockQuantity}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="handleDate != null">AND `handle_date` = #{handleDate}</if>
            <if test="handleYear != null">AND `handle_year` = #{handleYear}</if>
            <if test="handleMonth != null">AND `handle_month` = #{handleMonth}</if>
            <if test="operatorId != null">AND `operator_id` = #{operatorId}</if>
            <if test="operatorName != null">AND `operator_name` = #{operatorName}</if>
            <if test="remark != null">AND `remark` = #{remark}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>

            <if test="bigType != null and bigType.size() > 0">
                AND
                <foreach collection="bigType" item="t" open="(" separator="or" close=")">
                    type =#{t}
                </foreach>
            </if>
            <if test="startDate != null">AND handle_date between #{startDate} and #{endDate}</if>
            <if test="startDate ==null and endDate!=null">AND <![CDATA[ handle_date <= #{endDate}]]></if>
            <if test="materialNameLike != null">AND `material_name` like CONCAT('%',#{materialNameLike},'%')</if>
            <if test="skuIds != null and skuIds.size() > 0">
                AND
                <foreach collection="skuIds" item="t" open="(" separator="or" close=")">
                    material_id =#{t}
                </foreach>
            </if>
            <if test="stockHandleIds !=null and stockHandleIds.size() >0">
                AND
                <foreach collection="stockHandleIds" item="t" open="(" separator="or" close=")">
                    stock_handle_id =#{t}
                </foreach>
            </if>

            <if test="settlementDateStart">AND <![CDATA[settlement_date >= #{settlementDateStart}]]></if>
            <if test="settlementDateEnd">AND <![CDATA[settlement_date <= #{settlementDateEnd}]]></if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorWarehouseMaterialHandle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWarehouseMaterialHandle">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="stockHandleId != null">`stock_handle_id` = #{stockHandleId},</if>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
            <if test="warehouseType != null">`warehouse_type` = #{warehouseType},</if>
            <if test="warehouseName != null">`warehouse_name` = #{warehouseName},</if>
            <if test="relMaterialHandleId != null">`rel_material_handle_id` = #{relMaterialHandleId},</if>
            <if test="vendorName != null">`vendor_name` = #{vendorName},</if>
            <if test="materialId != null">`material_id` = #{materialId},</if>
            <if test="materialName != null">`material_name` = #{materialName},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="unitPrice != null">`unit_price` = #{unitPrice},</if>
            <if test="unit != null">`unit` = #{unit},</if>
            <if test="deleteFlag != null">`delete_flag` = #{deleteFlag},</if>
            <if test="beforeStockQuantity != null">`before_stock_quantity` = #{beforeStockQuantity},</if>
            <if test="quantity != null">`quantity` = #{quantity},</if>
            <if test="handleDate != null">`handle_date` = #{handleDate},</if>
            <if test="handleYear != null">`handle_year` = #{handleYear},</if>
            <if test="handleMonth != null">`handle_month` = #{handleMonth},</if>
            <if test="operatorId != null">`operator_id` = #{operatorId},</if>
            <if test="operatorName != null">`operator_name` = #{operatorName},</if>
            <if test="remark != null">`remark` = #{remark},</if>
            <if test="settlementDate != null">`settlement_date` = #{settlementDate},</if>
            <if test="amount != null">`amount` = #{amount},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateWarehouseMaterialHandle" parameterType="DoctorWarehouseMaterialHandle">
        update doctor_warehouse_material_handle set `vendor_name` = #{vendorName},`material_name` = #{materialName},`unit` = #{unit},updated_at = now() where `material_id` = #{materialId}
    </update>

    <update id="updates" parameterType="list">
        <foreach collection="list" item="m" separator=";">
            UPDATE
            <include refid="tb"/>
            <set>
                <if test="m.stockHandleId != null">`stock_handle_id` = #{m.stockHandleId},</if>
                <if test="m.orgId != null">`org_id` = #{m.orgId},</if>
                <if test="m.farmId != null">`farm_id` = #{m.farmId},</if>
                <if test="m.warehouseId != null">`warehouse_id` = #{m.warehouseId},</if>
                <if test="m.warehouseType != null">`warehouse_type` = #{m.warehouseType},</if>
                <if test="m.warehouseName != null">`warehouse_name` = #{m.warehouseName},</if>
                <if test="m.relMaterialHandleId != null">`rel_material_handle_id` = #{m.relMaterialHandleId},</if>
                <if test="m.vendorName != null">`vendor_name` = #{m.vendorName},</if>
                <if test="m.materialId != null">`material_id` = #{m.materialId},</if>
                <if test="m.materialName != null">`material_name` = #{m.materialName},</if>
                <if test="m.type != null">`type` = #{m.type},</if>
                <if test="m.unitPrice != null">`unit_price` = #{m.unitPrice},</if>
                <if test="m.unit != null">`unit` = #{m.unit},</if>
                <if test="m.deleteFlag != null">`delete_flag` = #{m.deleteFlag},</if>
                <if test="m.beforeStockQuantity != null">`before_stock_quantity` = #{m.beforeStockQuantity},</if>
                <if test="m.quantity != null">`quantity` = #{m.quantity},</if>
                <if test="m.handleDate != null">`handle_date` = #{m.handleDate},</if>
                <if test="m.handleYear != null">`handle_year` = #{m.handleYear},</if>
                <if test="m.handleMonth != null">`handle_month` = #{m.handleMonth},</if>
                <if test="m.operatorId != null">`operator_id` = #{m.operatorId},</if>
                <if test="m.operatorName != null">`operator_name` = #{m.operatorName},</if>
                <if test="m.remark != null">`remark` = #{m.remark},</if>
                <if test="m.settlementDate != null">`settlement_date` = #{m.settlementDate},</if>
                <if test="m.amount != null">`amount` = #{m.amount},</if>
                updated_at = now()
            </set>
            WHERE id = #{m.id}
        </foreach>
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findByRelMaterialHandleId" parameterType="map" resultType="DoctorWarehouseMaterialHandle">
        select * from  doctor_warehouse_material_handle
        where  rel_material_handle_id = #{relMaterialHandleId} and type = #{type} and delete_flag=1
    </select>

    <select id="getCountByRelMaterialHandleId" parameterType="map" resultType="Integer">
        select count(*) from  doctor_warehouse_material_handle
        where  rel_material_handle_id = #{relMaterialHandleId} and type = #{type} and delete_flag=1
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="advCount" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <include refid="adv_criteria"/>
    </select>

    <select id="advPaging" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="adv_criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="advList" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="adv_criteria"/>
        ORDER BY `id` DESC
    </select>


    <select id="findAfterByDate" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        <choose>
            <when test="includeHandleDate">
                AND <![CDATA[ handle_date >= #{handleDate}]]>
            </when>
            <otherwise>
                AND <![CDATA[ handle_date > #{handleDate}]]>
            </otherwise>
        </choose>
        AND delete_flag=1
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="countHistoryStock" parameterType="map" resultType="BigDecimal">
        SELECT ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then -quantity end
        ),0) as quantity
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        <choose>
            <when test="include">
                AND <![CDATA[ handle_date <= #{handleDate}]]>
            </when>
            <otherwise>
                AND <![CDATA[ handle_date < #{handleDate}]]>
            </otherwise>
        </choose>

        AND delete_flag=1
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="findByOrgAndSettlementDate" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE org_id=#{orgId}
        AND settlement_date=#{settlementDate}
        AND delete_flag=1
        <if test="flag == 1">and type!=11</if>
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="findBalanceByAccountingDate" parameterType="map" resultType="map">
        SELECT
        ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then -quantity end
        ),0) as quantity,
        ifnull(sum(
        case type
        when '1' then amount
        when '2' then -amount
        when '7' then amount
        when '8' then -amount
        when '9' then amount
        when '10' then -amount
        when '11' then amount
        when '12' then -amount
        when '13' then -amount end
        ),0) as amount
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND settlement_date = #{settlementDate}
        AND delete_flag=1
    </select>

    <select id="findBalanceBySettlementDate" parameterType="map" resultType="map">
        SELECT
        ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then -quantity end
        ),0) as quantity,
        ifnull(sum(
        case type
        when '1' then amount
        when '2' then -amount
        when '7' then amount
        when '8' then -amount
        when '9' then amount
        when '10' then -amount
        when '11' then amount
        when '12' then -amount
        when '13' then -amount end
        ),0) as amount
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        AND settlement_date = #{settlementDate}
        AND delete_flag=1
    </select>

    <select id="findWJSQuantity" parameterType="map" resultType="BigDecimal">
        SELECT
        ifnull(sum(
        case mh.type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then -quantity end
        ),0) as quantity
        FROM doctor_warehouse_material_handle as mh
        inner join doctor_warehouse_sku as s
        on mh.material_id=s.id
        WHERE mh.warehouse_id=#{warehouseId}
        <if test="warehouseType != null and ''!=warehouseType">
            and mh.warehouse_type=#{warehouseType}
        </if>
        <if test="materialId != null and ''!=materialId">
            and s.id=#{materialId}
        </if>
        <if test="materialType != null and ''!=materialType">
            and s.type=#{materialType}
        </if>
        <if test="materialName != null and ''!=materialName">
            and s.`name` like CONCAT('%', #{materialName}, '%')
        </if>
        AND
        <![CDATA[ date_format(settlement_date,'%Y-%m')<=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')]]>
        AND delete_flag=1
    </select>

    <update id="updateHandleDateAndSettlementDate" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET handle_date=#{handleDate},
        settlement_date=#{settlementDate},
        handle_year=#{year},
        handle_month=#{month}
        WHERE
        <!--更新入库单据的事件日期（陈娟 2018-10-08）-->
        <if test="type == 1">rel_material_handle_id=#{materialHandleId}</if>
        <if test="type == 2">id=#{materialHandleId}</if>
    </update>

    <select id="findFirstRefundHandleDate" parameterType="list" resultType="Date">
        SELECT min(handle_date)
        FROM
        <include refid="tb"/>
        WHERE
        <foreach collection="outMaterialHandleIds" item="i" open="(" separator="or" close=")">
            rel_material_handle_id=#{i}
        </foreach>
        AND type=13
    </select>

    <select id="findPrevious" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{materialId}
        AND type=#{type}
        AND <![CDATA[ handle_date <= #{handleDate}]]>
        AND delete_flag=1
        ORDER BY handle_date DESC,id DESC
        LIMIT 1
    </select>

    <update id="reverseSettlement" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET unit_price=0,amount=0
        WHERE farm_id=#{farmId}
        AND (type=2 or type=8 or type=9 or type=10 or type=11 or type=12 or type=13)
        AND handle_year = #{year} AND handle_month=#{month}
        AND delete_flag=1
    </update>

    <update id="reverseSettlementByOrg" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET unit_price=0,amount=0
        WHERE org_id=#{orgId}
        AND (type=2 or type=8 or type=9 or type=10 or type=11 or type=12 or type=13)
        AND settlement_date=#{settlementDate}
        AND delete_flag=1
    </update>

    <select id="countQuantityAlreadyRefund" parameterType="long" resultType="BigDecimal">
        select ifnull(sum(quantity),0) from doctor_warehouse_material_handle where rel_material_handle_id=#{materialHandleId} and delete_flag=1
    </select>

    <select id="findByApply" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        select t1.* from doctor_warehouse_material_handle t1
        left join doctor_warehouse_material_apply t2
        on t1.id=t2.material_handle_id
        where
        stock_handle_id=#{stockHandleId}
        and delete_flag=1
        <if test="applyGroupId !=null">
            AND pig_group_id=#{applyGroupId}
        </if>
        <if test="applyBarnId !=null">
            AND pig_barn_id=#{applyBarnId}
        </if>
    </select>

    <select id="getWarehouseMaterialHandleCount" resultType="int">
        select count(1) as count from  doctor_warehouse_material_handle
        where  warehouse_id = #{id} and delete_flag = 1
    </select>

    <select id="findLibraryById" parameterType="map" resultType="BigDecimal">
        select quantity from
        <include refid="tb"/>
        where type=2 and delete_flag = 1 and id=#{id} and material_name=#{materialName}
    </select>

    <select id="findRetreatingById" parameterType="map" resultType="BigDecimal">
        select ifnull(sum(quantity),0) from
        <include refid="tb"/>
        where type=13 and delete_flag = 1 and rel_material_handle_id=#{relMaterialHandleId}
        <if test="materialName != null">
            and material_name=#{materialName}
        </if>
        and stock_handle_id!=#{stockHandleId}
        order by settlement_date ,id desc;
    </select>

    <select id="findByStockHandleId" parameterType="long" resultMap="DoctorWarehouseMaterialHandleMap">
        select * from  doctor_warehouse_material_handle
        where  stock_handle_id = #{id} and delete_flag = 1
    </select>

    <select id="findByStockHandleIds" parameterType="long" resultMap="DoctorWarehouseMaterialHandleMap">
        select * from  doctor_warehouse_material_handle
        where  stock_handle_id = #{id} and delete_flag = 1 ORDER BY material_id
    </select>

    <select id="listByFarmIdTime" parameterType="map" resultType="map">
        select a.farm_id as farmId,a.org_id as orgId,a.settlement_date as settlementDate,
        ifnull(ROUND((temp1.inAmount+ 0.00000001),2),0) as inAmount,
        ifnull(ROUND((temp2.outAmount+ 0.00000001),2),0) as outAmount,
        ifnull(ROUND((temp3.balanceAmount+ 0.00000001),2),0)as balanceAmount
        from doctor_warehouse_stock_monthly a

        left join (SELECT ifnull(
            sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
            when '11' then amount end	),0) as inAmount,farm_id FROM doctor_warehouse_material_handle
            WHERE org_id = #{orgId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by farm_id
        ) temp1 on a.farm_id = temp1.farm_id

        left join (SELECT ifnull(
            sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
            when '12' then amount  when '13' then amount end	),0) as outAmount,farm_id FROM doctor_warehouse_material_handle
            WHERE org_id = #{orgId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')	AND delete_flag=1
            group by farm_id ORDER BY farm_id
        ) temp2 on a.farm_id = temp2.farm_id

        left join (select sum(b.balance_amount) as balanceAmount,b.farm_id
            from doctor_warehouse_stock_monthly b
            where b.org_id = #{orgId}
            and date_format(b.settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
            GROUP BY b.farm_id
        ) temp3 on a.farm_id = temp3.farm_id

        where date_format(a.settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
        and a.org_id = #{orgId}
        group by a.farm_id
        order by a.farm_id;
    </select>

    <!-- 得到所有的物料 -->
    <select id="getMeterails" parameterType="Map" resultType="java.util.LinkedHashMap">
        select distinct material_id from doctor_warehouse_material_handle
        where delete_flag = 1
        <if test="orgId != null">
            and org_id=#{orgId}
        </if>
        <if test="farmId != null">
            and farm_id=#{farmId}
        </if>
        <if test="settlementDate != null">
            and date_format(settlement_date,'%Y-%m') = date_format(CONCAT(#{settlementDate},'-01'),'%Y-%m')
        </if>
        <if test="warehouseId != null">
            and warehouse_id=#{warehouseId}
        </if>
        <if test="type != null and ''!=type">
            and type=#{type}
        </if>
        <if test="materialName != null">
            and material_name like CONCAT('%',#{materialName},'%')
        </if>
        order by material_id
    </select>

    <select id="lastWlbdReport" parameterType="Map" resultType="java.util.LinkedHashMap">
        select
        '' as id,
        '上月结存' as material_name,
        '' as material_type,
        '' as ware_house_name,
        '' as handle_date,
        '' as settlement_date,
        '' as handler_type,
        '' as rksl,
        '' as rkdj,
        '' as rkje,
        '' as cksl,
        '' as ckdj,
        '' as ckje,
        sum(a.balance_quantity) as jcsl,
        sum(a.balance_amount) / sum(a.balance_quantity) as jcdj,
        sum(a.balance_amount) as jcje,
        '' as pig_barn_name,
        '' as pig_type,
        '' as pig_group_name,
        '' as apply_staff_name,
        '' as farm_name,
        '' as unit,
        '' as provider_name,
        '' as specification
        from doctor_warehouse_stock_monthly a
        join doctor_warehouse_sku b on a.material_id=b.id
        where 1=1
        <if test="settlementDate != null">
            and date_format(a.settlement_date,'%Y-%m') = date_format(DATE_SUB(CONCAT(#{settlementDate},'-01'), INTERVAL
            1 MONTH),'%Y-%m')
        </if>
        <if test="farmId != null">
            and a.farm_id=#{farmId}
        </if>
        <if test="warehouseId != null">
            and a.warehouse_id=#{warehouseId}
        </if>
        and   a.material_id = #{materialId}
    </select>

    <select id="wlbdReport" parameterType="Map" resultType="java.util.LinkedHashMap">
        select
        ifnull(b.id,'') as id,
        ifnull(b.material_name,'') as material_name,
        ifnull(d.type,'') as material_type,
        ifnull(a.ware_house_name,'') as ware_house_name,
        date_format(b.handle_date,'%Y-%m-%d') as handle_date,
        date_format(b.settlement_date,'%Y-%m') as settlement_date,
        ifnull(b.type,'') as handler_type,
        case when
        b.type in (1,7,9,11)
        then ifnull(b.quantity,0) else '' end as rksl,
        case when
        b.type in (1,7,9,11)
        then ifnull(b.unit_price,0) else '' end as rkdj,
        case when
        b.type in (1,7,9,11)
        then ifnull(b.amount,0) else '' end as rkje,
        case when
        b.type in (2,8,10,12,13)
        then ifnull(b.quantity,0) else '' end as cksl,
        case when
        b.type in (2,8,10,12,13)
        then ifnull(b.unit_price,0) else '' end as ckdj,
        case when
        b.type in (2,8,10,12,13)
        then ifnull(b.amount,0) else '' end as ckje,
        ifnull(f.pig_barn_name,'') as pig_barn_name,
        ifnull(f.pig_type,'') as pig_type,
        ifnull(f.pig_group_name,'') as pig_group_name,
        ifnull(f.apply_staff_name,'') as apply_staff_name,
        ifnull(c.`name`,'') as farm_name,
        ifnull(db.name,'') as unit,
        ifnull(e.short_name,'') as provider_name,
        ifnull(d.specification,'') as specification
        from doctor_warehouse_material_handle b
        join doctor_ware_houses a
        on b.warehouse_id=a.id
        left join doctor_warehouse_material_apply f
        on b.id=f.material_handle_id
        <if test="farmId != null">
            and f.farm_id=#{farmId}
        </if>
        <if test="warehouseId != null">
            and f.warehouse_id=#{warehouseId}
        </if>
        join doctor_farms c
        on a.farm_id=c.id
        join doctor_warehouse_sku d
        on b.material_id=d.id
        join doctor_warehouse_vendor e
        on d.vendor_id=e.id
        inner join doctor_basics as db
        on db.id=b.unit
        where b.delete_flag=1
        <if test="farmId != null">
            and b.farm_id=#{farmId}
        </if>
        <if test="settlementDate != null">
            and date_format(b.settlement_date,'%Y-%m') = date_format(CONCAT(#{settlementDate},'-01'),'%Y-%m')
        </if>
        <if test="warehouseId != null">
            and b.warehouse_id=#{warehouseId}
        </if>
        and d.id = #{materialId}
        <if test="type != null and ''!=type">
            and d.type=#{type}
        </if>
        order by b.handle_date,b.id,f.pig_group_name
    </select>

    <sql id="balanceAmount">
        ifnull((select sum(b.balance_amount)
        from doctor_warehouse_stock_monthly b
        where b.farm_id = a.farm_id
        and b.settlement_date = a.settlement_date
        ),0)as balanceAmount
    </sql>

    <sql id="inAmount">
        ifnull((select  sum(c.amount)
        from doctor_warehouse_material_handle c
        where c.farm_id = a.farm_id
        and c.delete_flag = 1
        and c.settlement_date = a.settlement_date
        and c.type in (
           1,7,9,11,13
        )
        ),0) as inAmount,
    </sql>

    <sql id="outAmount">
         ifnull((select sum(d.amount)
            from doctor_warehouse_material_handle d
            where d.farm_id = a.farm_id
            and d.delete_flag = 1
            and d.settlement_date = a.settlement_date
            and d.type in (
                2,8,10,12
            )
        ),0) as outAmount,
    </sql>

    <select id="getPigBarnNameOption" parameterType="Map" resultType="map">
        select id,`name` from doctor_barns where farm_id=#{farmId} and pig_type=#{pigType}
    </select>

    <select id="getPigGroupNameOption" parameterType="Map" resultType="map">
        select id,group_code from doctor_groups where farm_id=#{farmId} and current_barn_id=#{barnId}
    </select>

    <select id="getWareHouseDataOption" parameterType="long" resultType="map">
        select id,ware_house_name from doctor_ware_houses where farm_id=#{farmId}
    </select>

    <select id="selectFarmsByOrgId" parameterType="Long" resultType="map">
        select id,name
        from doctor_farms
        where org_id = #{orgId,jdbcType = BIGINT}
        and (frozen = 0 or frozen is null)
        order by id
    </select>

    <select id="selectCompanyReportInfo" parameterType="map" resultType="map">
        select temp.settlement_date as settlementDate,
        temp.farm_id as farmId,sum(temp.in_amount)as inAmount,sum(temp.out_amount)as outAmount,sum(temp.balance_amount) as balanceAmount
        from
        (select  b.settlement_date,b.farm_id, 0 as in_amount,0 as out_amount ,sum(b.balance_amount) as balance_amount
        from doctor_warehouse_stock_monthly b
        where <![CDATA[ b.settlement_date >= #{settlementDateStart}]]>
        and <![CDATA[ b.settlement_date <= #{settlementDateEnd}]]>
        and b.org_id = #{orgId,jdbcType = BIGINT}
        GROUP by b.settlement_date,b.farm_id
        union all
        select c.settlement_date,c.farm_id,sum(c.amount) as in_amount,0 as out_amount,0 as balance_amount
        from doctor_warehouse_material_handle c
        where
        c.delete_flag = 1
        and <![CDATA[ c.settlement_date >= #{settlementDateStart}]]>
        and <![CDATA[ c.settlement_date <= #{settlementDateEnd}]]>
        and c.org_id = #{orgId,jdbcType = BIGINT}
        and c.type in (
        1,7,9,11,13
        )
        GROUP by c.settlement_date,c.farm_id
        union all
        select d.settlement_date,d.farm_id,0 as in_amount,sum(d.amount) as out_amount,0 as balance_amount
        from doctor_warehouse_material_handle d
        where
        d.delete_flag = 1
        and <![CDATA[ d.settlement_date >= #{settlementDateStart}]]>
        and <![CDATA[ d.settlement_date <= #{settlementDateEnd}]]>
        and d.org_id = #{orgId,jdbcType = BIGINT}
        and d.type in (
        2,8,10,12
        )
        GROUP by d.settlement_date,d.farm_id
        ) temp
        GROUP BY temp.settlement_date,temp.farm_id
        order by temp.settlement_date,temp.farm_id
    </select>


    <!--退料入库-->
    <!--得到仓库类型，仓库名称，仓库管理员，所属公司，单据编号-->
    <select id="getFarmData" parameterType="Long" resultType="map">
        select mh.id as material_handle_id, mh.farm_id as farm_id,wh.type as ware_house_type,wh.ware_house_name as ware_house_name,wh.manager_name as manager_name,
        f.name as farm_name,f.org_name as org_name,sh.serial_no as serial_no  from doctor_ware_houses as wh
        inner join doctor_farms as f
        on f.id=wh.farm_id
        inner join doctor_warehouse_stock_handle as sh
        on sh.warehouse_id=wh.id
        inner join doctor_warehouse_material_handle as mh
		on mh.stock_handle_id=sh.id
        where sh.id = #{id}
    </select>

    <!--得到领料出库的物料名称-->
    <select id="getMaterialNameByID" parameterType="Long" resultType="map">
        select DISTINCT material_id,material_name from doctor_warehouse_material_handle
        where stock_handle_id = #{id} and delete_flag=1 ORDER BY material_id
    </select>



    <!--根据物料名称得到 物料名称，物料编号，厂家，规格，单位，备注-->
    <select id="getDataByMaterialName" parameterType="Long" resultType="map">
        select mh.id as material_handle_id, mh.material_id as material_id, mh.material_name as material_name,s.code as material_code,
        v.short_name as vendor_name,s.specification as specification,db.name as unit,mh.unit_price as unit_price,
        mh.remark as remark,mh.farm_id as farm_id
        from doctor_warehouse_material_handle as mh
        inner join doctor_warehouse_sku as s
        on mh.material_id=s.id
        inner join doctor_warehouse_vendor as v
        on s.vendor_id=v.id
        inner join doctor_basics as db
        on db.id=s.unit
        where mh.stock_handle_id=#{id}  and mh.delete_flag=1

    </select>

    <!--根据id判断是否有退料入库-->
    <select id="findCountByRelMaterialHandleId" parameterType="map" resultType="INTEGER">
        select count(*) from  doctor_warehouse_material_handle
        where delete_flag=1 and rel_material_handle_id = #{id} and farm_id=#{farmId}
    </select>

    <select id="findSettlementDate" parameterType="Long" resultType="Date">
        select min(settlement_date) from doctor_warehouse_material_handle where org_id=#{orgId}
    </select>

    <select id="findMinTimeByFarmId" parameterType="list" resultType="Date">
        select min(handle_date) as time
        from doctor_warehouse_material_handle
        where 1=1
        and farm_id in
        <foreach collection="list" open="(" separator="," close=")" item="i">
            #{i}
        </foreach>
    </select>

    <!--结算误差（陈娟 2018-8-21）-->
    <select id="getLastAmount" parameterType="map" resultType="map">
        select balance_amount as lastAmount,balance_quantity as lastQuantity from doctor_warehouse_stock_monthly
        where warehouse_id=#{warehouseId} and material_id=#{materialId}
        and date_format(settlement_date,'%Y-%m')=date_format(date_sub(#{settlementDate}, interval 1 month),'%Y-%m')
    </select>

    <select id="getThisAmount" parameterType="map" resultType="map">
        SELECT	ifnull(sum(	case type	when '1' then quantity	when '2' then -quantity	when '7' then quantity	when '8' then -quantity
        when '9' then quantity	 when '10' then -quantity 	when '11' then quantity	when '12' then -quantity when '13' then -quantity end),0) as thisQuantity,
        ifnull(sum(	case type	when '1' then amount	when '2' then -amount	when '7' then amount	when '8' then -amount
        when '9' then amount	when '10' then -amount	when '11' then amount	when '12' then -amount	when '13' then -amount end ),0) as thisAmount
        FROM doctor_warehouse_material_handle WHERE delete_flag=1
        AND warehouse_id=#{warehouseId} AND material_id=#{materialId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
    </select>

    <select id="getLastDocument" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        select * from doctor_warehouse_material_handle
        where warehouse_id=#{warehouseId} and material_id=#{materialId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m')
        and delete_flag=1 and (type=2 or type=8 or type=10 or type=12) ORDER BY handle_date desc,id desc limit 1
    </select>

    <!--得到调拨入库单 （陈娟 2018-09-14）-->
    <select id="findByRelMaterialHandleIdAndWarehouseId" parameterType="map" resultType="DoctorWarehouseMaterialHandle">
        select * from doctor_warehouse_material_handle where rel_material_handle_id=#{relMaterialHandleId} and delete_flag=1 and warehouse_id=#{warehouseId} and material_id=#{materialId}
    </select>

    <!--盘点 （陈娟 2018-09-18）-->
    <select id="getMaxInventoryDate" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        select id,stock_handle_id,`material_id`, `material_name`, `type`,`handle_date` from doctor_warehouse_material_handle
        where delete_flag=1 and ( type = 7 or type = 8 ) and warehouse_id=#{warehouseId} and material_id=#{materialId}
        and handle_date>=#{handleDate}  ORDER BY handle_date desc limit 1
    </select>

    <!--根据公司和会计年月得到配方入库单据 （陈娟 2018-09-28）-->
    <select id="findFormulaStorage" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE org_id=#{orgId}
        AND settlement_date=#{settlementDate}
        AND delete_flag=1
        AND type=11
        ORDER BY handle_date ASC,id ASC
    </select>

    <!--根据relMaterialHandleId得到配方出库单据 （陈娟 2018-09-28）-->
    <select id="findFormulaByRelMaterialHandleId" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        select * from  doctor_warehouse_material_handle
        where  rel_material_handle_id = #{relMaterialHandleId} and type = #{type} and delete_flag=1
    </select>

    <!--配方入库金额，单价的结算（陈娟 2018-09-28）-->
    <update id="updateUnitPriceAndAmountById" parameterType="map">
        UPDATE
        <include refid="tb"/>
        set unit_price=#{unitPrice},amount=#{amount}
        where id = #{id}
    </update>

    <!--修改配方出库的关联ID （陈娟 2018-09-29）-->
    <update id="updateRelMaterialHandleId" parameterType="map">
        update doctor_warehouse_material_handle set rel_material_handle_id = #{newRelMaterialHandleId} where rel_material_handle_id = #{oldRelMaterialHandleId}
    </update>

    <!--得到出库之前的单据类型 （陈娟 2018-10-08）-->
    <select id="getBeforeType" parameterType="map" resultType="map">
        select DISTINCT type from doctor_warehouse_material_handle
        where warehouse_id=#{warehouseId} and delete_flag=1 and settlement_date=#{settlementDate} and material_id=#{materialId} and (type=11 or type=1)
        and <![CDATA[id < #{id}]]> ORDER BY type
    </select>

    <!--得到出库之前的配方入库单据的总金额和总数量 （陈娟 2018-10-08）-->
    <select id="getBeforeRecipes" parameterType="map" resultType="map">
        select SUM(amount) as sumAmount,SUM(quantity) as sumQuantity from doctor_warehouse_material_handle
        where warehouse_id=#{warehouseId} and delete_flag=1 and settlement_date=#{settlementDate} and material_id=#{materialId} and type=11 and <![CDATA[id < #{id}]]>
    </select>

</mapper>
