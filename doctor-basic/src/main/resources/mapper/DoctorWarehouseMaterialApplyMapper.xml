<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-05-17 10:46:41map
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorWarehouseMaterialApply">
    <resultMap id="DoctorWarehouseMaterialApplyMap" type="DoctorWarehouseMaterialApply">
        <id property="id" column="id"/>
        <result property="materialHandleId" column="material_handle_id"/>
        <result property="orgId" column="org_id"/>
        <result property="farmId" column="farm_id"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="warehouseType" column="warehouse_type"/>
        <result property="warehouseName" column="warehouse_name"/>
        <result property="pigBarnId" column="pig_barn_id"/>
        <result property="pigBarnName" column="pig_barn_name"/>
        <result property="pigType" column="pig_type"/>
        <result property="pigGroupId" column="pig_group_id"/>
        <result property="pigGroupName" column="pig_group_name"/>
        <result property="materialId" column="material_id"/>
        <result property="applyDate" column="apply_date"/>
        <result property="applyStaffId" column="apply_staff_id"/>
        <result property="applyStaffName" column="apply_staff_name"/>
        <result property="applyYear" column="apply_year"/>
        <result property="applyMonth" column="apply_month"/>
        <result property="materialName" column="material_name"/>
        <result property="type" column="type"/>
        <result property="unit" column="unit"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="applyType" column="apply_type"/>
        <result property="amount" column="amount"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="refundQuantity" column="refund_quantity"/>
        <result property="refundAmount" column="refund_amount"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="DoctorWarehouseMaterialApplyPigGroupMap" type="DoctorWarehouseMaterialApplyPigGroup">
        <id property="id" column="id"/>
        <result property="staffName" column="staff_name"/>
        <result property="pigGroupName" column="pig_group_name"/>
        <result property="pigName" column="pig_name"/>
        <result property="code" column="code"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="amount" column="amount"/>
        <result property="skuName" column="sku_name"/>
        <result property="unit" column="unit"/>
        <result property="skuType" column="sku_type"/>
        <result property="specification" column="specification"/>
        <result property="vendorName" column="vendor_name"/>
        <result property="openAt" column="open_at"/>
        <result property="closeAt" column="close_at"/>
        <result property="farmName" column="farm_name"/>
        <result property="pigGroupId" column="pig_group_id"/>
        <result property="skuId" column="sku_id"/>
        <result property="pigType" column="pig_type"/>
        <result property="settlementDate" column="settlement_date"/>
    </resultMap>

    <resultMap id="DoctorWarehouseMaterialApplyPigGroupDetailMap" type="DoctorWarehouseMaterialApplyPigGroupDetail">
        <id property="id" column="id"/>
        <result property="materialHandleId" column="material_handle_id"/>
        <result property="skuName" column="sku_name"/>
        <result property="skuType" column="sku_type"/>
        <result property="warehouseName" column="warehouse_name"/>
        <result property="applyDate" column="apply_date"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="type" column="type"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="amount" column="amount"/>
        <result property="pigBarnName" column="pig_barn_name"/>
        <result property="pigType" column="pig_type"/>
        <result property="pigGroupName" column="pig_group_name"/>
        <result property="staffName" column="staff_name"/>
        <result property="farmId" column="farm_id"/>
        <result property="farmName" column="farm_name"/>
        <result property="unit" column="unit"/>
        <result property="vendorName" column="vendor_name"/>
        <result property="specification" column="specification"/>
    </resultMap>

    <sql id="tb">
        doctor_warehouse_material_apply
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `material_handle_id`, `org_id`, `farm_id`, `warehouse_id`, `warehouse_type`, `warehouse_name`, `pig_barn_id`,
        `pig_barn_name`, `pig_type`, `pig_group_id`, `pig_group_name`, `material_id`, `apply_date`, `apply_staff_id`,
        `apply_staff_name`, `apply_year`, `apply_month`, `material_name`, `type`, `unit`, `quantity`, `unit_price`,
        `apply_type`, `amount`, `settlement_date`, `refund_quantity`, `refund_amount`,
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{materialHandleId}, #{orgId}, #{farmId}, #{warehouseId}, #{warehouseType}, #{warehouseName}, #{pigBarnId},
        #{pigBarnName}, #{pigType}, #{pigGroupId}, #{pigGroupName}, #{materialId}, #{applyDate}, #{applyStaffId},
        #{applyStaffName}, #{applyYear}, #{applyMonth}, #{materialName}, #{type}, #{unit}, #{quantity}, #{unitPrice},
        #{applyType}, #{amount}, #{settlementDate}, #{refundQuantity}, #{refundAmount},
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="materialHandleId != null">AND `material_handle_id` = #{materialHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="pigBarnId != null">AND `pig_barn_id` = #{pigBarnId}</if>
            <if test="pigBarnName != null">AND `pig_barn_name` = #{pigBarnName}</if>
            <if test="pigType != null">AND `pig_type` = #{pigType}</if>
            <if test="pigGroupId != null">AND `pig_group_id` = #{pigGroupId}</if>
            <if test="pigGroupName != null">AND `pig_group_name` = #{pigGroupName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="applyDate != null">AND `apply_date` = #{applyDate}</if>
            <if test="applyStaffId != null">AND `apply_staff_id` = #{applyStaffId}</if>
            <if test="applyStaffName != null">AND `apply_staff_name` = #{applyStaffName}</if>
            <if test="applyYear != null">AND `apply_year` = #{applyYear}</if>
            <if test="applyMonth != null">AND `apply_month` = #{applyMonth}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="applyType != null">AND `apply_type` = #{applyType}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="refundQuantity != null">AND `refund_quantity` = #{refundQuantity}</if>
            <if test="refundAmount != null">AND `refund_amount` = #{refundAmount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <sql id="advCriteria">
        <where>
            <if test="materialHandleId != null">AND `material_handle_id` = #{materialHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="pigBarnId != null">AND `pig_barn_id` = #{pigBarnId}</if>
            <if test="pigBarnName != null">AND `pig_barn_name` = #{pigBarnName}</if>
            <if test="pigType != null">AND `pig_type` = #{pigType}</if>
            <if test="pigGroupId != null">AND `pig_group_id` = #{pigGroupId}</if>
            <if test="pigGroupName != null">AND `pig_group_name` = #{pigGroupName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="applyDate != null">AND `apply_date` = #{applyDate}</if>
            <if test="applyStaffId != null">AND `apply_staff_id` = #{applyStaffId}</if>
            <if test="applyStaffName != null">AND `apply_staff_name` = #{applyStaffName}</if>
            <if test="applyYear != null">AND `apply_year` = #{applyYear}</if>
            <if test="applyMonth != null">AND `apply_month` = #{applyMonth}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="applyType != null">AND `apply_type` = #{applyType}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="refundQuantity != null">AND `refund_quantity` = #{refundQuantity}</if>
            <if test="refundAmount != null">AND `refund_amount` = #{refundAmount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>

            <if test="materialNameLike != null">AND `material_name` like CONCAT('%',#{materialNameLike},'%')</if>
            <if test="skuIds != null and skuIds.size() > 0">
                AND
                <foreach collection="skuIds" item="t" open="(" separator="or" close=")">
                    material_id =#{t}
                </foreach>
            </if>
            <if test="pigGroupIds != null and pigGroupIds.size() > 0">
                AND
                <foreach collection="pigGroupIds" item="t" open="(" separator="or" close=")">
                    pig_group_id =#{t}
                </foreach>
            </if>
            <if test="startDate !=null">
                AND <![CDATA[apply_date >= #{startDate}]]>
            </if>
            <if test="endDate !=null">
                AND  <![CDATA[apply_date <= #{endDate}]]>
            </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorWarehouseMaterialApply" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWarehouseMaterialApply">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="materialHandleId != null">`material_handle_id` = #{materialHandleId},</if>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
            <if test="warehouseType != null">`warehouse_type` = #{warehouseType},</if>
            <if test="warehouseName != null">`warehouse_name` = #{warehouseName},</if>
            <if test="pigBarnId != null">`pig_barn_id` = #{pigBarnId},</if>
            <if test="pigBarnName != null">`pig_barn_name` = #{pigBarnName},</if>
            <if test="pigType != null">`pig_type` = #{pigType},</if>
            <if test="pigGroupId != null">`pig_group_id` = #{pigGroupId},</if>
            <if test="pigGroupName != null">`pig_group_name` = #{pigGroupName},</if>
            <if test="materialId != null">`material_id` = #{materialId},</if>
            <if test="applyDate != null">`apply_date` = #{applyDate},</if>
            <if test="applyStaffId != null">`apply_staff_id` = #{applyStaffId},</if>
            <if test="applyStaffName != null">`apply_staff_name` = #{applyStaffName},</if>
            <if test="applyYear != null">`apply_year` = #{applyYear},</if>
            <if test="applyMonth != null">`apply_month` = #{applyMonth},</if>
            <if test="materialName != null">`material_name` = #{materialName},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="unit != null">`unit` = #{unit},</if>
            <if test="quantity != null">`quantity` = #{quantity},</if>
            <if test="unitPrice != null">`unit_price` = #{unitPrice},</if>
            <if test="applyType != null">`apply_type` = #{applyType},</if>
            <if test="amount != null">`amount` = #{amount},</if>
            <if test="settlementDate != null">`settlement_date` = #{settlementDate},</if>
            <if test="refundQuantity != null">`refund_quantity` = #{refundQuantity},</if>
            <if test="refundAmount != null">`refund_amount` = #{refundAmount},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateWarehouseMaterialApply" parameterType="DoctorWarehouseMaterialApply">
        update doctor_warehouse_material_apply set `material_name` = #{materialName},`type` = #{type},`unit` = #{unit},updated_at = now() where `material_id` = #{materialId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="listAndOrderByHandleDate" parameterType="map" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `apply_date` DESC
        <if test="limit != null">limit #{limit}</if>
    </select>

    <select id="advList" parameterType="map" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="advCriteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="sumGroupFeedApply" parameterType="map" resultType="double">
        SELECT ifnull(sum(quantity),0)
        FROM
        <include refid="tb"/>
        WHERE
        pig_group_id = #{groupId}
        <if test="startAt != null">AND apply_date &gt;= #{startAt}</if>
        <if test="endAt != null">AND apply_date &lt;= #{endAt}</if>
    </select>

    <delete id="deleteByMaterialHandle" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE material_handle_id = #{materialHandleId}
    </delete>

    <select id="findByMaterialHandle" parameterType="long" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT * FROM <include refid="tb"/>
        WHERE material_handle_id= #{materialHandleId}
        ORDER BY id DESC LIMIT 1
    </select>

    <select id="findByMaterialHandleAndFarmId" parameterType="map" resultMap="DoctorWarehouseMaterialApplyMap">
        SELECT * FROM <include refid="tb"/>
        WHERE material_handle_id= #{materialHandleId} and farm_id=#{farmId}
        ORDER BY id DESC
--         LIMIT 1
    </select>

    <delete id="deleteGroupApply" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE
        material_handle_id=#{materialHandleId}
        AND (apply_type=1 or apply_type=2)
    </delete>

    <update id="updateBarnApply" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET
        settlement_date=#{settlementDate},
        apply_date=#{handleDate},
        apply_year=#{year},
        apply_month=#{month},
        quantity=#{quantity},
        pig_barn_id=#{barnId},
        pig_barn_name=#{barnName},
        pig_type=#{pigType},
        apply_staff_id=#{staffId},
        apply_staff_name=#{staffName}
        WHERE
        material_handle_id=#{materialHandleId}
        AND apply_type=0
    </update>

    <update id="reverseSettlement" parameterType="map">
        UPDATE
        <include refid="tb"/>
        set unit_price=0,amount=0
        where org_id=#{orgId} and settlement_date=#{settlementDate}
    </update>

    <update id="updateUnitPriceAndAmountByMaterialHandle" parameterType="map">
        UPDATE
        <include refid="tb"/>
        set unit_price=#{unitPrice},amount=#{amount},refund_amount=unit_price * refund_quantity
        where material_handle_id=#{materialHandleId}
    </update>

    <select id="selectPigGroupApply" parameterType="map" resultMap="DoctorWarehouseMaterialApplyPigGroupMap">
        SELECT
        a.pig_group_name,
        e.NAME as pig_name,
        a.pig_type,
        e.staff_name,
        c.code,
        c.name as sku_name,
        db.name as unit,
        sum( a.quantity ) AS quantity,
        ifnull(sum( a.unit_price * a.quantity ) / sum( a.quantity ),0) AS unit_price,
        sum(a.amount) AS amount,
        c.type as sku_type,
        b.short_name as vendor_name,
        c.specification,
        date_format(d.open_at,'%Y-%m-%d') as open_at,
        date_format(d.close_at,'%Y-%m-%d') as close_at,
        d.farm_name,
        a.pig_group_id,
        a.material_id as sku_id
        FROM
        doctor_warehouse_material_apply a
        JOIN doctor_warehouse_sku c ON a.material_id = c.id
        JOIN doctor_warehouse_vendor b ON c.vendor_id = b.id
        JOIN doctor_groups d ON d.id = a.pig_group_id
        JOIN doctor_barns e ON e.id = a.pig_barn_id
        JOIN doctor_basics as db on db.id=c.unit
        WHERE
        a.apply_type = 1
        <if test="farmId != null"> AND a.farm_id = #{farmId}</if>
        <if test="pigType != null"> AND a.pig_type = #{pigType}</if>
        <if test="pigName != null"> AND e.id = #{pigName}</if>
        <if test="pigGroupName != null"> AND a.pig_group_id = #{pigGroupName}</if>
        <if test="skuType != null">  AND c.type= #{skuType}</if>
        <if test="skuName != null"> AND c.name like concat('%',#{skuName},'%')</if>
        <if test="openAt != null"> AND d.open_at = #{openAt}</if>
        <if test="closeAt != null">  AND d.close_at = #{closeAt}</if>
        GROUP BY
        a.material_id,
        a.pig_group_id,
        a.pig_barn_id
    </select>

    <!--陈娟2018-8-23-->
    <!--猪舍Start-->
    <select id="piggeryReport" parameterType="DoctorWarehouseMaterialApply" resultType="map">

        select ma.pig_barn_id as pig_barn_id,
        ma.pig_barn_name as pig_barn_name,
        ma.pig_type as pig_type,
        b.staff_name as staff_name,
        year(mh.settlement_date) as settlement_year,
        month(mh.settlement_date) as settlement_month,
        s.`code` as material_code,
        s.`name` as material_name,
        db.name as unit,
        sum(ifnull(round((ma.quantity+ 0.00000001),3),0)+ifnull(round((ma.refund_quantity+ 0.00000001),3),0))+'' as sum_quantity,
        round(sum(ifnull(round((ma.amount+ 0.00000001),2),0)+ifnull(round((ma.refund_amount+ 0.00000001),2),0))/sum(ifnull(round((ma.quantity+ 0.00000001),3),0)+ifnull(round((ma.refund_quantity+ 0.00000001),3),0)),4)+'' as sum_unit_price,
        sum(ifnull(round((ma.amount+ 0.00000001),2),0)+ifnull(round((ma.refund_amount+ 0.00000001),2),0))+'' as sum_amount,
        s.type as material_type,
        v.short_name as vendor_name,
        s.specification as specification,
        f.`name` as farm_name,
        f.org_id as org_id
        from  doctor_warehouse_material_apply as ma
        inner join doctor_warehouse_material_handle as mh
        on ma.material_handle_id=mh.id
        inner join doctor_barns as b
        on b.id=ma.pig_barn_id
        inner join doctor_warehouse_sku as s
        on s.id=mh.material_id
        inner join doctor_farms as f
        on f.id=ma.farm_id
        inner join doctor_basics as db
        on db.id=ma.unit
        inner join doctor_warehouse_vendor as v
        on v.id=s.vendor_id
        where ma.apply_type=0
        <if test="farmId != null">
            and ma.farm_id = #{farmId}
        </if>
        <if test="applyYear != null">
            and year(ma.settlement_date) = #{applyYear}
        </if>
        <if test="applyMonth != null">
            and month(ma.settlement_date) = #{applyMonth}
        </if>
        <if test="pigBarnId != null">
            and ma.pig_barn_id = #{pigBarnId}
        </if>
        <if test="pigType != null">
            and ma.pig_type = #{pigType}
        </if>
        <if test="type != 0 and type!=null">
            and ma.type = #{type}
        </if>
        <if test="materialName != null">
            and ma.material_name like concat('%',#{materialName},'%')
        </if>
        group by ma.pig_barn_id,ma.material_id

        union all

        <if test=" type==null or type=='' or type==0 or type==3 or type==4 or type==5 ">
            select '' as pig_barn_id,
            '合计' as pig_barn_name,
            '' as pig_type,
            '' as staff_name,
            '' as settlement_year,
            '' as settlement_month,
            '' as material_code,
            '' as material_name,
            '' as unit,
            '' as sum_quantity,
            '' as sum_unit_price,
            ifnull(sum(ifnull(round((ma.amount+ 0.00000001),2),0)+ifnull(round((ma.refund_amount+ 0.00000001),2),0)),0)+'' as sum_amount,
            '' as material_type,
            '' as vendor_name,
            '' as specification,
            '' as farm_name,
            '' as org_id
            from  doctor_warehouse_material_apply as ma
            inner join doctor_warehouse_material_handle as mh
            on ma.material_handle_id=mh.id
            inner join doctor_barns as b
            on b.id=ma.pig_barn_id
            inner join doctor_warehouse_sku as s
            on s.id=mh.material_id
            inner join doctor_farms as f
            on f.id=ma.farm_id
            inner join doctor_basics as db
            on db.id=ma.unit
            inner join doctor_warehouse_vendor as v
            on v.id=s.vendor_id
            where ma.apply_type=0
            <if test="farmId != null">
                and ma.farm_id = #{farmId}
            </if>
            <if test="applyYear != null">
                and year(ma.settlement_date) = #{applyYear}
            </if>
            <if test="applyMonth != null">
                and month(ma.settlement_date) = #{applyMonth}
            </if>
            <if test="pigBarnId != null">
                and ma.pig_barn_id = #{pigBarnId}
            </if>
            <if test="pigType != null">
                and ma.pig_type = #{pigType}
            </if>
            <if test="type != 0 and type!=null">
                and ma.type = #{type}
            </if>
            <if test="materialName != null">
                and ma.material_name like concat('%',#{materialName},'%')
            </if>
        </if>

        <if test=" type!=null and type!='' and (type==1 or type==2) ">
            select '' as pig_barn_id,
            '合计' as pig_barn_name,
            '' as pig_type,
            '' as staff_name,
            '' as settlement_year,
            '' as settlement_month,
            '' as material_code,
            '' as material_name,
            '' as unit,
            ifnull(sum(ifnull(round((ma.quantity+ 0.00000001),3),0)+ifnull(round((ma.refund_quantity+ 0.00000001),3),0)),0)+'',
            '' as sum_unit_price,
            ifnull(sum(ifnull(round((ma.amount+ 0.00000001),2),0)+ifnull(round((ma.refund_amount+ 0.00000001),2),0)),0)+'' as sum_amount,
            '' as material_type,
            '' as vendor_name,
            '' as specification,
            '' as farm_name,
            '' as org_id
            from  doctor_warehouse_material_apply as ma
            inner join doctor_warehouse_material_handle as mh
            on ma.material_handle_id=mh.id
            inner join doctor_barns as b
            on b.id=ma.pig_barn_id
            inner join doctor_warehouse_sku as s
            on s.id=mh.material_id
            inner join doctor_farms as f
            on f.id=ma.farm_id
            inner join doctor_basics as db
            on db.id=ma.unit
            inner join doctor_warehouse_vendor as v
            on v.id=s.vendor_id
            where ma.apply_type=0
            <if test="farmId != null">
                and ma.farm_id = #{farmId}
            </if>
            <if test="applyYear != null">
                and year(ma.settlement_date) = #{applyYear}
            </if>
            <if test="applyMonth != null">
                and month(ma.settlement_date) = #{applyMonth}
            </if>
            <if test="pigBarnId != null">
                and ma.pig_barn_id = #{pigBarnId}
            </if>
            <if test="pigType != null">
                and ma.pig_type = #{pigType}
            </if>
            <if test="type!=0 and type!=null">
                and ma.type = #{type}
            </if>
            <if test="materialName != null">
                and ma.material_name like concat('%',#{materialName},'%')
            </if>
        </if>

    </select>

    <select id="piggeryDetails" parameterType="DoctorWarehouseMaterialApply" resultType="map">
        select mh.id as id,s.`code` as material_code,
        s.`name` as material_name,
        s.type as material_type,
        ma.warehouse_name as warehouse_name,
        mh.handle_date as handle_date,
        year(mh.settlement_date) as settlement_year,
        month(mh.settlement_date) as settlement_month,
        mh.type as material_handle_type,
        ifnull(round((mh.quantity+ 0.00000001),3),0) as quantity,
        ifnull(round((mh.unit_price+ 0.00000001),4),0) as unit_price,
        ifnull(round((mh.amount+ 0.00000001),2),0) as amount,
        ma.pig_barn_name as pig_barn_name,
        ma.pig_type as pig_type,
        ifnull((
          select w.pig_group_name from doctor_warehouse_material_apply w where w.material_handle_id = ma.material_handle_id
          and w.apply_type!=0 and w.org_id = ma.org_id limit 1
        ),'无') as pig_group_name,
        b.staff_name as staff_name,
        f.id as farm_id,
        f.`name` as farm_name,
        db.name as unit ,
        v.short_name as vendor_name,
        s.specification as specification
        from doctor_warehouse_material_apply as ma
        inner join doctor_warehouse_material_handle as mh
        on mh.id=ma.material_handle_id
        inner join doctor_warehouse_sku as s
        on s.id=mh.material_id
        inner join doctor_barns as b
        on b.id=ma.pig_barn_id
        inner join doctor_farms as f
        on f.id=ma.farm_id
        inner join doctor_basics as db
        on db.id=mh.unit
        inner join doctor_warehouse_vendor as v
        on v.id=s.vendor_id
        where mh.type=2 and ma.apply_type=0 and mh.delete_flag=1
        <if test="pigBarnId != null">
            and ma.pig_barn_id = #{pigBarnId}
        </if>
        <if test="materialName != null">
            and s.`name` like concat('%',#{materialName},'%')
        </if>
        <if test="applyYear != null">
            and year(mh.settlement_date) = #{applyYear}
        </if>
        <if test="applyMonth != null">
            and month(mh.settlement_date) = #{applyMonth}
        </if>
    </select>

    <select id="piggeryRetreatingDetails" parameterType="DoctorWarehouseMaterialApply" resultType="map">
      select mh.id as id,s.`code` as material_code,
        s.`name` as material_name,
        s.type as material_type,
        ma.warehouse_name as warehouse_name,
        mh.handle_date as handle_date,
        year(mh.settlement_date) as settlement_year,
        month(mh.settlement_date) as settlement_month,
        mh.type as material_handle_type,
        ifnull(round((mh.quantity+ 0.00000001),3),0) as quantity,
        ifnull(round((mh.unit_price+ 0.00000001),4),0) as unit_price,
        ifnull(round((mh.amount+ 0.00000001),2),0) as amount,
        ma.pig_barn_name as pig_barn_name,
        ma.pig_type as pig_type,
        ifnull((
          select w.pig_group_name from doctor_warehouse_material_apply w where w.material_handle_id = ma.material_handle_id
          and w.apply_type!=0 and w.org_id = ma.org_id limit 1
        ),'无') as pig_group_name,
        ma.staff_name as staff_name,
        f.id as farm_id,
        f.`name` as farm_name,
        db.name as unit ,
        v.short_name as vendor_name,
        s.specification as specification
        from doctor_warehouse_material_handle as mh
        inner join doctor_warehouse_sku as s
        on s.id=mh.material_id
        inner join doctor_farms as f
        on f.id=mh.farm_id
        inner join doctor_basics as db
        on db.id=mh.unit
        inner join doctor_warehouse_vendor as v
        on v.id=s.vendor_id
        inner join (
            select DISTINCT maa.material_handle_id,maa.org_id,maa.warehouse_name,maa.pig_barn_name,maa.pig_type,b.staff_name from doctor_warehouse_material_apply as maa
            inner join doctor_barns as b on b.id=maa.pig_barn_id
            where maa.apply_type=0
            <if test="pigBarnId != null">
              and maa.pig_barn_id = #{pigBarnId}
            </if>
            and maa.material_handle_id=#{materialHandleId}
        ) ma on mh.rel_material_handle_id=ma.material_handle_id
        where mh.delete_flag=1
        and mh.type=13
        <if test="materialName != null">
            and s.`name` like concat('%',#{materialName},'%')
        </if>
        <if test="applyYear != null">
            and year(mh.settlement_date) = #{applyYear}
        </if>
        <if test="applyMonth != null">
            and month(mh.settlement_date) = #{applyMonth}
        </if>
        and mh.rel_material_handle_id=#{materialHandleId}
    </select>

    <!--猪舍end-->

    <!--猪群Start-->

    <select id="selectPigGroupApply1" parameterType="map" resultMap="DoctorWarehouseMaterialApplyPigGroupMap">
        SELECT
        a.pig_group_name,
        e.NAME as pig_name,
        a.pig_type,
        e.staff_name,
        c.code,
        c.name as sku_name,
        db.name as unit,
        sum(ifnull(round((a.quantity+ 0.00000001),3),0)+ifnull(round((a.refund_quantity+ 0.00000001),3),0)) as quantity,
        round(sum(ifnull(round((a.amount+ 0.00000001),2),0)+ifnull(round((a.refund_amount+ 0.00000001),2),0))/sum(ifnull(round((a.quantity+ 0.00000001),3),0)+ifnull(round((a.refund_quantity+ 0.00000001),3),0)),4) as unit_price,
        sum(ifnull(round((a.amount+ 0.00000001),2),0)+ifnull(round((a.refund_amount+ 0.00000001),2),0)) as amount,
        c.type as sku_type,
        b.short_name as vendor_name,
        c.specification,
        date_format(d.open_at,'%Y-%m-%d') as open_at,
        date_format(d.close_at,'%Y-%m-%d') as close_at,
        d.farm_name,
        a.pig_group_id,
        a.material_id as sku_id,
        f.settlement_date as settlement_date
        FROM
        doctor_warehouse_material_apply a
        JOIN doctor_warehouse_sku c ON a.material_id = c.id
        JOIN doctor_warehouse_vendor b ON c.vendor_id = b.id
        JOIN doctor_groups d ON d.id = a.pig_group_id
        JOIN doctor_barns e ON e.id = a.pig_barn_id
        JOIN doctor_basics as db on db.id=c.unit
        JOIN doctor_warehouse_material_handle as f on f.id=a.material_handle_id
        WHERE
        a.apply_type = 1
        <if test="farmId != null"> AND a.farm_id = #{farmId}</if>
        <if test="pigType != null"> AND a.pig_type = #{pigType}</if>
        <if test="pigName != null"> AND e.id = #{pigName}</if>
        <if test="pigGroupName != null"> AND a.pig_group_id = #{pigGroupName}</if>
        <if test="skuType != null">  AND c.type= #{skuType}</if>
        <if test="skuName != null"> AND c.name like concat('%',#{skuName},'%')</if>
        <if test="openAtStart != null"> AND <![CDATA[d.open_at >= #{openAtStart}]]></if>
        <if test="openAtEnd != null"> AND <![CDATA[d.open_at < #{openAtEnd}]]></if>
        <if test="closeAtStart != null">  AND <![CDATA[d.close_at >= #{closeAtStart}]]></if>
        <if test="closeAtEnd != null">  AND <![CDATA[d.close_at < #{closeAtEnd}]]></if>
        GROUP BY
        a.material_id,
        a.pig_group_id,
        a.pig_barn_id
    </select>

    <select id="selectPigGroupApplyDetail" parameterType="map" resultMap="DoctorWarehouseMaterialApplyPigGroupDetailMap">
        SELECT b.id as material_handle_id,
        c.name as sku_name,
        c.type as sku_type,
        a.warehouse_name,
        date_format( b.handle_date,'%Y-%m-%d') as apply_date,
        date_format(b.settlement_date,'%Y-%m') as settlement_date,
        b.type,
        ifnull(round((b.quantity++ 0.00000001),3),0) as quantity,
        round(ifnull(round((b.amount++ 0.00000001),2),0)/ifnull(round((b.quantity++ 0.00000001),3),0),4) as  unit_price,
        ifnull(round((b.amount++ 0.00000001),2),0) as amount,
        a.pig_barn_name,
        a.pig_type,
        a.pig_group_name,
        e.staff_name,
        f.id as farm_id,
        f.`name` as farm_name,
        db.name as unit,
        v.short_name as vendor_name,
        c.specification
        FROM
        doctor_warehouse_material_apply a
        JOIN doctor_warehouse_material_handle b ON a.material_handle_id = b.id
        JOIN doctor_warehouse_sku c ON b.material_id = c.id
        JOIN doctor_groups d ON d.id = a.pig_group_id
        JOIN doctor_barns e ON e.id = a.pig_barn_id
        JOIN doctor_basics as db on db.id=c.unit
        JOIN doctor_farms as f on f.id=b.farm_id
        JOIN doctor_warehouse_vendor as v on v.id=c.vendor_id
        WHERE
        a.apply_type = 1 and b.delete_flag=1
        <if test="pigGroupId != null"> AND a.pig_group_id = #{pigGroupId}</if>
        <if test="skuId != null"> AND a.material_id = #{skuId}</if>
    </select>

    <select id="selectPigGroupApplyRetreatingDetail" parameterType="map" resultMap="DoctorWarehouseMaterialApplyPigGroupDetailMap">
      SELECT	b.id as material_handle_id,
        c.name as sku_name,
        c.type as sku_type,
        a.warehouse_name,
        date_format( b.handle_date,'%Y-%m-%d') as apply_date,
        date_format(b.settlement_date,'%Y-%m') as settlement_date,
        b.type,
        ifnull(round((b.quantity++ 0.00000001),3),0) as quantity,
        round(ifnull(round((b.amount++ 0.00000001),2),0)/ifnull(round((b.quantity++ 0.00000001),3),0),4) as  unit_price,
        ifnull(round((b.amount++ 0.00000001),2),0) as amount,
        a.pig_barn_name,
        a.pig_type,
        a.pig_group_name,
        a.staff_name,
        f.id as farm_id,
        f.`name` as farm_name,
        db.name as unit,
        v.short_name as vendor_name,
        c.specification
        FROM doctor_warehouse_material_handle b
        JOIN doctor_warehouse_sku c ON b.material_id = c.id
        JOIN doctor_basics as db on db.id=c.unit
        JOIN doctor_farms as f on f.id=b.farm_id
        JOIN doctor_warehouse_vendor as v on v.id=c.vendor_id
        inner join (
            select DISTINCT ma.material_handle_id,ma.warehouse_name,ma.pig_barn_name,ma.pig_type,ma.pig_group_name,bb.staff_name from doctor_warehouse_material_apply as ma
            inner join doctor_barns as bb on bb.id=ma.pig_barn_id
            where ma.apply_type=1
            <if test="pigGroupId != null">
            and ma.pig_group_id = #{pigGroupId}
            </if>
            and ma.material_handle_id=#{materialHandleId}
        ) a on b.rel_material_handle_id=a.material_handle_id
        WHERE b.delete_flag=1
         AND b.rel_material_handle_id=#{materialHandleId}
        <if test="skuId != null"> AND b.material_id = #{skuId}</if>
    </select>
    <!--猪群End-->

    <!--仓库领用明细报表start （陈娟 2018-10-17）-->
    <select id="collarCount" parameterType="map" resultType="long">
        SELECT COUNT(1)
        from doctor_warehouse_material_apply as ma
        where ma.org_id=#{orgId} and  ma.farm_id=#{farmId}
        <if test="flag == 0">and ma.apply_type=0 </if>
        <if test="flag == 1">and ma.apply_type between 1 and 2 </if>
        <if test="pigType !=null">and  ma.pig_type=#{pigType}</if>
        <if test="materialType !=null">and  ma.type=#{materialType}</if>
        <if test="startDate !=null">and <![CDATA[ma.apply_date >= #{startDate}]]></if>
        <if test="endDate !=null">and <![CDATA[ma.apply_date <= #{endDate}]]></if>
        <if test="materialName !=null and '' != materialName">and ma.material_name like concat('%',#{materialName},'%')</if>
        <if test="pigBarnName !=null and '' != pigBarnName">and  ma.pig_barn_name like concat('%',#{pigBarnName},'%')</if>
        <if test="pigGroupName !=null and '' != pigGroupName">and  ma.pig_group_name like concat('%',#{pigGroupName},'%')</if>
    </select>

    <select id="collarReport" parameterType="map" resultType="map">
        select ma.material_handle_id,ma.apply_date,ma.settlement_date,ma.type,ma.material_name,ma.warehouse_name,ma.pig_type,ma.pig_barn_name,ma.pig_group_id,ma.pig_group_name,
        (ma.quantity+ma.refund_quantity) as quantity,(ma.amount+ma.refund_amount)/(ma.quantity+ma.refund_quantity) as unit_price,(ma.amount+ma.refund_amount) as amount,
        db.`name` as unit,s.specification,v.short_name as vendor_name
        from doctor_warehouse_material_apply as ma
        inner join doctor_warehouse_sku as s
        on s.id=ma.material_id
        inner join doctor_warehouse_vendor as v
        on v.id=s.vendor_id
        inner join doctor_basics as db
        on db.id=ma.unit
        where ma.org_id=#{orgId} and  ma.farm_id=#{farmId}
        <if test="flag == 0">and ma.apply_type=0 </if>
        <if test="flag == 1">and ma.apply_type between 1 and 2 </if>
        <if test="pigType !=null">and  ma.pig_type=#{pigType}</if>
        <if test="materialType !=null">and  ma.type=#{materialType}</if>
        <if test="startDate !=null">and <![CDATA[ma.apply_date >= #{startDate}]]></if>
        <if test="endDate !=null">and <![CDATA[ma.apply_date <= #{endDate}]]></if>
        <if test="materialName !=null and '' != materialName">and ma.material_name like concat('%',#{materialName},'%')</if>
        <if test="pigBarnName !=null and '' != pigBarnName">and  ma.pig_barn_name like concat('%',#{pigBarnName},'%')</if>
        <if test="pigGroupName !=null and '' != pigGroupName">and  ma.pig_group_name like concat('%',#{pigGroupName},'%')</if>
        ORDER BY ma.apply_date,ma.pig_barn_id,ma.pig_group_id
        limit #{offset}, #{limit}
    </select>

    <!--合计（陈娟 2018-10-19）-->
    <select id="collarSum" parameterType="map" resultType="map">
        SELECT SUM(ma.quantity+ma.refund_quantity) as sumQuantity ,SUM(ma.amount+ma.refund_amount) as sumAmount
        from doctor_warehouse_material_apply as ma
        where ma.org_id=#{orgId} and  ma.farm_id=#{farmId}
        <if test="flag == 0">and ma.apply_type=0 </if>
        <if test="flag == 1">and ma.apply_type between 1 and 2 </if>
        <if test="pigType !=null">and  ma.pig_type=#{pigType}</if>
        <if test="materialType !=null">and  ma.type=#{materialType}</if>
        <if test="startDate !=null">and <![CDATA[ma.apply_date >= #{startDate}]]></if>
        <if test="endDate !=null">and <![CDATA[ma.apply_date <= #{endDate}]]></if>
        <if test="materialName !=null and '' != materialName">and ma.material_name like concat('%',#{materialName},'%')</if>
        <if test="pigBarnName !=null and '' != pigBarnName">and  ma.pig_barn_name like concat('%',#{pigBarnName},'%')</if>
        <if test="pigGroupName !=null and '' != pigGroupName">and  ma.pig_group_name like concat('%',#{pigGroupName},'%')</if>
    </select>

    <!--导出（陈娟 2018-10-19）-->
    <select id="collarReportExport" parameterType="map" resultType="map">
        select ma.material_handle_id,date_format(ma.apply_date,'%Y-%m-%d') as apply_date,ma.settlement_date,ma.type,ma.material_name,ma.warehouse_name,ma.pig_type,ma.pig_barn_name,ma.pig_group_id,ma.pig_group_name,
        (ma.quantity+ma.refund_quantity) as quantity,(ma.amount+ma.refund_amount)/(ma.quantity+ma.refund_quantity) as unit_price,(ma.amount+ma.refund_amount) as amount,
        db.`name` as unit,s.specification,v.short_name as vendor_name
        from doctor_warehouse_material_apply as ma
        inner join doctor_warehouse_sku as s
        on s.id=ma.material_id
        inner join doctor_warehouse_vendor as v
        on v.id=s.vendor_id
        inner join doctor_basics as db
        on db.id=ma.unit
        where ma.org_id=#{orgId} and  ma.farm_id=#{farmId}
        <if test="flag == 0">and ma.apply_type=0 </if>
        <if test="flag == 1">and ma.apply_type between 1 and 2 </if>
        <if test="pigType !=null">and  ma.pig_type=#{pigType}</if>
        <if test="materialType !=null">and  ma.type=#{materialType}</if>
        <if test="startDate !=null">and <![CDATA[ma.apply_date >= #{startDate}]]></if>
        <if test="endDate !=null">and <![CDATA[ma.apply_date <= #{endDate}]]></if>
        <if test="materialName !=null and '' != materialName">and ma.material_name like concat('%',#{materialName},'%')</if>
        <if test="pigBarnName !=null and '' != pigBarnName">and  ma.pig_barn_name like concat('%',#{pigBarnName},'%')</if>
        <if test="pigGroupName !=null and '' != pigGroupName">and  ma.pig_group_name like concat('%',#{pigGroupName},'%')</if>
        ORDER BY ma.apply_date,ma.pig_barn_id,ma.pig_group_id
    </select>

    <!--仓库领用明细报表end-->

    <!--得到领用猪舍对应的领用猪群单据-->
    <select id="getGroupById" parameterType="Long" resultMap="DoctorWarehouseMaterialApplyMap">
      select pig_group_id,pig_group_name from doctor_warehouse_material_apply where material_handle_id=#{materialHandleId} and apply_type between 1 and 2
    </select>

    <!--判断猪群是否关闭 （陈娟 2018-10-18）-->
    <select id="getGroupStatus" parameterType="Long" resultType="Integer">
        select `status` from doctor_groups where id=#{groupId}
    </select>

    <!--得到物料类型 （陈娟 2018-10-18）-->
    <select id="getMaterialTypes" parameterType="map" resultType="map">
        select DISTINCT ma.type from doctor_warehouse_material_apply as ma
        where ma.org_id=#{orgId} and  ma.farm_id=#{farmId}
        <if test="materialType !=null">and  ma.type=#{materialType}</if>
        <if test="pigType !=null">and  ma.pig_type=#{pigType}</if>
        <if test="startDate !=null">and <![CDATA[ma.apply_date >= #{startDate}]]></if>
        <if test="endDate !=null">and <![CDATA[ma.apply_date <= #{endDate}]]></if>
        <if test="materialName !=null and '' != materialName">and ma.material_name like concat('%',#{materialName},'%')</if>
        <if test="pigBarnName !=null and '' != pigBarnName">and  ma.pig_barn_name like concat('%',#{pigBarnName},'%')</if>
        <if test="pigGroupName !=null and '' != pigGroupName">and  ma.pig_group_name like concat('%',#{pigGroupName},'%')</if>
        ORDER BY ma.type
    </select>

</mapper>
