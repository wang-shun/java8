<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorWareHouse">

    <resultMap id="DoctorWareHouseMap" type="DoctorWareHouse">

        <result column="id" property="id"/>
        <result column="ware_house_name" property="wareHouseName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="manager_id" property="managerId"/>
        <result column="manager_name" property="managerName"/>
        <result column="address" property="address"/>
        <result column="type" property="type"/>
        <result column="extra" property="extra"/>
        <result column="creator_id" property="creatorId"/>
        <result column="creator_name" property="creatorName"/>
        <result column="updator_id" property="updatorId"/>
        <result column="updator_name" property="updatorName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    
    </resultMap>

    <sql id="tb"> doctor_ware_houses </sql>

    <sql id="cols_all">
      id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        `ware_house_name`,`farm_id`,`farm_name`,`manager_id`,`manager_name`,`address`,`type`,`extra`,`creator_id`,`creator_name`,`updator_id`,`updator_name`,`created_at`,`updated_at`
    </sql>

    <sql id="vals">
        #{wareHouseName},#{farmId},#{farmName},#{managerId},#{managerName},#{address},#{type},#{extra},#{creatorId},#{creatorName},#{updatorId},#{updatorName},now(),now()
    </sql>

    <sql id="criteria">
        <if test="wareHouseName != null" > AND `ware_house_name` = #{wareHouseName}</if>
        <if test="farmId != null" > AND `farm_id` = #{farmId}</if>
        <if test="farmName != null" > AND `farm_name` = #{farmName}</if>
        <if test="managerId != null" > AND `manager_id` = #{managerId}</if>
        <if test="managerName != null" > AND `manager_name` = #{managerName}</if>
        <if test="address != null" > AND `address` = #{address}</if>
        <if test="type != null" > AND `type` = #{type}</if>
        <if test="extra != null" > AND `extra` = #{extra}</if>
        <if test="creatorId != null" > AND `creator_id` = #{creatorId}</if>
        <if test="creatorName != null" > AND `creator_name` = #{creatorName}</if>
        <if test="updatorId != null" > AND `updator_id` = #{updatorId}</if>
        <if test="updatorName != null" > AND `updator_name` = #{updatorName}</if>
    </sql>

    <insert id="create" parameterType="DoctorWareHouse" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
            VALUES (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        ( <include refid="cols_exclude_id"/> )
        VALUES
        <foreach collection="list" item="i" separator=",">
        (#{i.wareHouseName},#{i.farmId},#{i.farmName},#{i.managerId},#{i.managerName},#{i.address},#{i.type},#{i.extra},#{i.creatorId},#{i.creatorName},#{i.updatorId},#{i.updatorName},now(),now())
        </foreach>
    </insert>

    <delete id="delete" parameterType="Long">
        DELETE FROM <include refid="tb"/> WHERE
        id=#{id}
    </delete>

    <select id="findById" parameterType="long" resultMap="DoctorWareHouseMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByFarmId" parameterType="long" resultMap="DoctorWareHouseMap">
        SELECT <include refid="cols_all"/> from <include refid="tb"/>
        WHERE farm_id = #{farmId}
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWareHouseMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE id in
        <foreach collection="list" open="(" close=")" separator="," item="i">
          #{i}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWareHouse">
        UPDATE <include refid="tb"/>
        <set>
        updated_at = now()
        <if test="wareHouseName != null" > ,`ware_house_name` = #{wareHouseName}</if>
        <if test="farmId != null" > ,`farm_id` = #{farmId}</if>
        <if test="farmName != null" > ,`farm_name` = #{farmName}</if>
        <if test="managerId != null" > ,`manager_id` = #{managerId}</if>
        <if test="managerName != null" > ,`manager_name` = #{managerName}</if>
        <if test="address != null" > ,`address` = #{address}</if>
        <if test="type != null" > ,`type` = #{type}</if>
        <if test="extra != null" > ,`extra` = #{extra}</if>
        <if test="creatorId != null" > ,`creator_id` = #{creatorId}</if>
        <if test="creatorName != null" > ,`creator_name` = #{creatorName}</if>
        <if test="updatorId != null" > ,`updator_id` = #{updatorId}</if>
        <if test="updatorName != null" > ,`updator_name` = #{updatorName}</if>
        <if test="createdAt != null" > ,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>

    <select id="count" parameterType="map" resultType="long">
        select count(1) from <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWareHouseMap">
        SELECT <include refid="cols_all"/> from <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWareHouseMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        ORDER BY `id` DESC
    </select>

    <select id="getWarehouseByType" parameterType="Map" resultMap="DoctorWareHouseMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        ORDER BY `created_at`
        limit #{pageNum},#{pageSize}
    </select>

    <!--  按照仓库类型进行tab分页筛选，仓库按照创建时间进行排列 -->
    <select id="listTypeMap" parameterType="Map" resultType="map">
        select
        a.id,a.ware_house_name,a.type,
        a.manager_id,a.manager_name,
        ifnull(round((temp1.lastmonth_sum_amount+ 0.00000001),2),0) as lastmonth_sum_amount,
        ifnull(round((temp1.lastmonth_sum_quantity+ 0.00000001),3),0) as lastmonth_sum_quantity,
        ifnull(round((temp2.thismonth_sum_rk_quantity+ 0.00000001),3),0) as thismonth_sum_rk_quantity,
        ifnull(round((temp3.thismonth_sum_ck_quantity+ 0.00000001),3),0) as thismonth_sum_ck_quantity,
        round((ifnull(temp1.lastmonth_sum_quantity,0) + ifnull(temp2.thismonth_sum_rk_quantity,0)-ifnull(temp3.thismonth_sum_ck_quantity,0)+ 0.00000001),3) as now_sum_quantity
        from doctor_ware_houses a
        left join (
        select sum(b.balance_amount) as lastmonth_sum_amount,sum(b.balance_quantity) as lastmonth_sum_quantity,b.warehouse_id
        from doctor_warehouse_stock_monthly b
        where date_format(b.settlement_date,'%Y-%m')=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')
        and b.farm_id = #{farmId}
        GROUP BY b.warehouse_id
        )temp1 on a.id = temp1.warehouse_id

        left join (
            select ifnull(sum(case type	when '1' then quantity 	when '7' then quantity 	when '9' then quantity
            when '11' then quantity end	),0) as thismonth_sum_rk_quantity,
            warehouse_id FROM doctor_warehouse_material_handle
            WHERE farm_id = #{farmId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by warehouse_id
        )temp2 on a.id = temp2.warehouse_id

        left join (
            select ifnull(sum(case type	when '2' then quantity 	when '8' then quantity	 when '10' then quantity
            when '12' then quantity when '13' then quantity end	),0) as thismonth_sum_ck_quantity,
            warehouse_id FROM doctor_warehouse_material_handle
            WHERE farm_id = #{farmId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by warehouse_id
        )temp3 on a.id = temp3.warehouse_id

        where a.farm_id=#{farmId}
        <if test="type != null" > and a.type=#{type}</if>
        order by a.type,a.created_at
    </select>

    <!--  按照仓库类型进行tab分页筛选，仓库按照创建时间进行排列 -->
    <select id="listDetailTypeCount" parameterType="Map" resultType="long">

        select count(1) as ct
        from
        (select a.id
        from doctor_warehouse_material_handle a
        join doctor_warehouse_sku b on a.material_id=b.id
        join doctor_warehouse_vendor c on b.vendor_id=c.id
        <if test="showZero!=null and showZero==0">
            <!--已结算-->
            <if test="isSettled!=null and isSettled==0">
            left join (select m.material_id,sum(m.balance_amount) as lastmonth_sum_amount,sum(m.balance_quantity) as lastmonth_sum_quantity
            from doctor_warehouse_stock_monthly m
            where date_format(m.settlement_date,'%Y-%m')=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')
            and m.warehouse_id=#{warehouseId}
            GROUP BY m.material_id
            ) tmp1 on a.material_id = tmp1.material_id
            </if>
            <!--未结算-->
            <if test="isSettled!=null and isSettled==1">
                left join (
                SELECT material_id,
                ifnull(sum(
                case type
                when '1' then quantity
                when '2' then -quantity
                when '7' then quantity
                when '8' then -quantity
                when '9' then quantity
                when '10' then -quantity
                when '11' then quantity
                when '12' then -quantity
                when '13' then -quantity end
                ),0) as lastmonth_sum_quantity
                FROM doctor_warehouse_material_handle
                WHERE warehouse_id=#{warehouseId}
                AND <![CDATA[ date_format(settlement_date,'%Y-%m')<=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')]]>
                AND delete_flag=1
                GROUP BY material_id
                ) tmp1 on a.material_id = tmp1.material_id
            </if>
            left join (
                SELECT material_id,ifnull(sum(case type	when '1' then amount	when '7' then amount	when '9' then amount
                when '11' then amount end	),0) as thismonth_sum_rk_quantity FROM doctor_warehouse_material_handle
                WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
                group by material_id
            )tmp2 on a.material_id = tmp2.material_id
            left join(
                SELECT material_id,ifnull(sum(case type	when '2' then amount	when '8' then amount	when '10' then amount
                when '12' then amount	when '13' then amount end	),0) as thismonth_sum_ck_quantity FROM doctor_warehouse_material_handle
                WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
                group by material_id
            )tmp3 on a.material_id = tmp3.material_id

        </if>
        where a.delete_flag=1
        <if test="type != null" > and a.warehouse_type=#{type}</if>
        <if test="materialName != null" > and b.`name` like CONCAT('%', #{materialName}, '%')</if>
        <if test="warehouseId != null" > and a.warehouse_id=#{warehouseId}</if>
        <if test="showZero!=null and showZero==0">
            and round(ifnull(tmp1.lastmonth_sum_quantity ,0) + ifnull(tmp2.thismonth_sum_rk_quantity,0)-ifnull(tmp3.thismonth_sum_ck_quantity,0),3)!=0
        </if>
        group by a.material_id
        ) temp


    </select>

    <select id="listDetailTypeMap" parameterType="Map" resultType="map">
        <!--已结算-->
        <if test="isSettled!=null and isSettled==0">
        select  a.id,b.id as material_id,b.`code`,b.`name` as material_name,
        c.short_name as vendor_name,
        b.specification,db.name as unit,
        ifnull(round((tmp1.lastmonth_sum_amount+ 0.00000001),2),0) as lastmonth_sum_amount,
        ifnull(round((tmp1.lastmonth_sum_quantity+ 0.00000001) ,3),0) as lastmonth_sum_quantity,
        ifnull(round((tmp2.thismonth_sum_rk_quantity+ 0.00000001),3),0) as thismonth_sum_rk_quantity,
        ifnull(round((tmp3.thismonth_sum_ck_quantity+ 0.00000001),3),0) as thismonth_sum_ck_quantity,
        round((ifnull(tmp1.lastmonth_sum_quantity ,0) + ifnull(tmp2.thismonth_sum_rk_quantity,0)-ifnull(tmp3.thismonth_sum_ck_quantity,0)+ 0.00000001),3) as now_sum_quantity
        from doctor_warehouse_material_handle a
        join doctor_warehouse_sku b on a.material_id=b.id
        join doctor_warehouse_vendor c on b.vendor_id=c.id

        left join (select m.material_id,sum(m.balance_amount) as lastmonth_sum_amount,sum(m.balance_quantity) as lastmonth_sum_quantity
        from doctor_warehouse_stock_monthly m
        where date_format(m.settlement_date,'%Y-%m')=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')
        and m.warehouse_id=#{warehouseId}
        GROUP BY m.material_id
        ) tmp1 on a.material_id = tmp1.material_id

        left join (
            SELECT material_id,ifnull(sum(case type	when '1' then quantity 	when '7' then quantity	 when '9' then quantity
            when '11' then quantity end	),0) as thismonth_sum_rk_quantity FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
        )tmp2 on a.material_id = tmp2.material_id

        left join(
            SELECT material_id,ifnull(sum(case type	when '2' then quantity 	when '8' then quantity 	when '10' then quantity
            when '12' then quantity when '13' then quantity end	),0) as thismonth_sum_ck_quantity FROM doctor_warehouse_material_handle
            WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
            group by material_id
        )tmp3 on a.material_id = tmp3.material_id

        left join doctor_basics db on db.id = b.unit
        where a.delete_flag=1
        and a.warehouse_id=#{warehouseId}
        <if test="type != null" > and a.warehouse_type=#{type}</if>
        <if test="materialName != null" > and b.`name` like CONCAT('%', #{materialName}, '%')</if>
        <if test="showZero!=null and showZero==0">
            and round(ifnull(tmp1.lastmonth_sum_quantity ,0) + ifnull(tmp2.thismonth_sum_rk_quantity,0)-ifnull(tmp3.thismonth_sum_ck_quantity,0),3)!=0
        </if>
        group by  a.material_id
        order by b.code
        limit #{offset},#{limit}
        </if>

        <!--未结算-->
        <if test="isSettled!=null and isSettled==1">
            select  a.id,b.id as material_id,b.`code`,b.`name` as material_name,
            c.short_name as vendor_name,
            b.specification,db.name as unit,
            '--' as lastmonth_sum_amount,
            ifnull(round((tmp1.lastmonth_sum_quantity+ 0.00000001),3),0) as lastmonth_sum_quantity,
            ifnull(round((tmp2.thismonth_sum_rk_quantity+ 0.00000001),3),0) as thismonth_sum_rk_quantity,
            ifnull(round((tmp3.thismonth_sum_ck_quantity+ 0.00000001),3),0) as thismonth_sum_ck_quantity,
            round((ifnull(tmp1.lastmonth_sum_quantity ,0) + ifnull(tmp2.thismonth_sum_rk_quantity,0)-ifnull(tmp3.thismonth_sum_ck_quantity,0)+ 0.00000001),3) as now_sum_quantity
            from doctor_warehouse_material_handle a
            join doctor_warehouse_sku b on a.material_id=b.id
            join doctor_warehouse_vendor c on b.vendor_id=c.id

            left join (
            SELECT material_id,
            ifnull(sum(
            case type
            when '1' then quantity
            when '2' then -quantity
            when '7' then quantity
            when '8' then -quantity
            when '9' then quantity
            when '10' then -quantity
            when '11' then quantity
            when '12' then -quantity
            when '13' then -quantity end
            ),0) as lastmonth_sum_quantity
            FROM doctor_warehouse_material_handle
            WHERE warehouse_id=#{warehouseId}
            AND <![CDATA[ date_format(settlement_date,'%Y-%m')<=date_format(DATE_SUB(#{settlementDate}, INTERVAL 1 MONTH),'%Y-%m')]]>
            AND delete_flag=1
            GROUP BY material_id
            ) tmp1 on a.material_id = tmp1.material_id

            left join (
                SELECT material_id,ifnull(sum(case type	when '1' then quantity 	when '7' then quantity 	when '9' then quantity
                when '11' then quantity end	),0) as thismonth_sum_rk_quantity FROM doctor_warehouse_material_handle
                WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
                group by material_id
            )tmp2 on a.material_id = tmp2.material_id

            left join(
                SELECT material_id,ifnull(sum(case type	when '2' then quantity 	when '8' then quantity 	when '10' then quantity
                when '12' then quantity	when '13' then quantity end	),0) as thismonth_sum_ck_quantity FROM doctor_warehouse_material_handle
                WHERE warehouse_id = #{warehouseId} AND date_format(settlement_date,'%Y-%m')=date_format(#{settlementDate},'%Y-%m') AND delete_flag=1
                group by material_id
            )tmp3 on a.material_id = tmp3.material_id

            left join doctor_basics db on db.id = b.unit
            where a.delete_flag=1
            and a.warehouse_id=#{warehouseId}
            <if test="type != null" > and a.warehouse_type=#{type}</if>
            <if test="materialName != null" > and b.`name` like CONCAT('%', #{materialName}, '%')</if>
            <if test="showZero!=null and showZero==0">
                and round(ifnull(tmp1.lastmonth_sum_quantity ,0) + ifnull(tmp2.thismonth_sum_rk_quantity,0)-ifnull(tmp3.thismonth_sum_ck_quantity,0),3)!=0
            </if>
            group by  a.material_id
            order by b.code
            limit #{offset},#{limit}
        </if>

    </select>

    <select id="findMapByFarmId" parameterType="Long" resultType="map">
      select id as id,ware_house_name as name,type as type
      from doctor_ware_houses
      where farm_id = #{farmId,jdbcType=BIGINT}
    </select>

    <select id="findMaxTimeByFarmId" parameterType="list" resultType="Date">
       select min(created_at) as time
       from doctor_ware_houses
       where 1=1
       and farm_id in
        <foreach collection="list" open="(" separator="," close=")" item="i">
          #{i}
        </foreach>
    </select>

    <select id="findWareHousesByFarmAndWareHousesName" parameterType="map" resultType="DoctorWareHouse" >
        SELECT * FROM doctor_ware_houses
        <where>
            farm_id=#{farmId} AND ware_house_name = #{name}
        </where>

    </select>

</mapper>